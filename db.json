{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"source/img/avator/fucktheking.jpg","path":"img/avator/fucktheking.jpg","modified":0,"renderable":0},{"_id":"source/img/computer/cipan2.gif","path":"img/computer/cipan2.gif","modified":0,"renderable":0},{"_id":"source/img/computer/cipan3.gif","path":"img/computer/cipan3.gif","modified":0,"renderable":0},{"_id":"source/img/computer/cipan1.png","path":"img/computer/cipan1.png","modified":0,"renderable":0},{"_id":"source/img/computer/cipan4.png","path":"img/computer/cipan4.png","modified":0,"renderable":0},{"_id":"source/img/patterndesign/zhuangshi.png","path":"img/patterndesign/zhuangshi.png","modified":0,"renderable":0},{"_id":"source/img/node/IAMTB.png","path":"img/node/IAMTB.png","modified":0,"renderable":0},{"_id":"source/img/php/api-doc-1.jpg","path":"img/php/api-doc-1.jpg","modified":0,"renderable":0},{"_id":"source/img/php/Linux_CPU_Usage_Analysis.png","path":"img/php/Linux_CPU_Usage_Analysis.png","modified":0,"renderable":0},{"_id":"source/img/php/api-doc-2.jpg","path":"img/php/api-doc-2.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"source/img/patterndesign/adapter.png","path":"img/patterndesign/adapter.png","modified":0,"renderable":0},{"_id":"source/img/patterndesign/qiaojie.png","path":"img/patterndesign/qiaojie.png","modified":0,"renderable":0},{"_id":"source/img/php/api-doc-3.jpg","path":"img/php/api-doc-3.jpg","modified":0,"renderable":0},{"_id":"source/img/php/storm-2.jpg","path":"img/php/storm-2.jpg","modified":0,"renderable":0},{"_id":"source/img/php/storm-1.jpg","path":"img/php/storm-1.jpg","modified":0,"renderable":0},{"_id":"source/img/php/storm-3.jpg","path":"img/php/storm-3.jpg","modified":0,"renderable":0},{"_id":"source/img/ruankao/17-18.png","path":"img/ruankao/17-18.png","modified":0,"renderable":0},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"source/img/patterndesign/strategy.png","path":"img/patterndesign/strategy.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"62ec72e59524ab81fc4e9eede8db5c0d58d67c2a","modified":1534239775151},{"_id":"source/favicon.ico","hash":"1b6f0965050e24f8a54c7ae8a980e8a79f5ac357","modified":1534239775212},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1534242001965},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1534242001967},{"_id":"themes/next/.gitignore","hash":"0378adb9c2dc4855b3198184df4863cb30e4059c","modified":1534242001984},{"_id":"themes/next/.eslintrc.json","hash":"d3c11de434171d55d70daadd3914bc33544b74b8","modified":1534242001969},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1534242001971},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1534242001986},{"_id":"themes/next/.travis.yml","hash":"fb9ac54e875f6ea16d5c83db497f6bd70ae83198","modified":1534242001988},{"_id":"themes/next/LICENSE.md","hash":"f0190c7d83a98464549a6b3a51bb206148d88e1b","modified":1534242001990},{"_id":"themes/next/_config.yml","hash":"94143602f1f4f1cf68b9a362ee38e5eacbd7e989","modified":1534244858766},{"_id":"themes/next/README.md","hash":"2d142fa1bdfab00abf8e99f972346e15572c9b12","modified":1534242001992},{"_id":"themes/next/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1534242001998},{"_id":"themes/next/bower.json","hash":"fd757d8b3ce4320d1367002a9ef03cffb6095533","modified":1534242001996},{"_id":"themes/next/gulpfile.coffee","hash":"67eaf2515100971f6195b60eeebbfe5e8de895ab","modified":1534242002040},{"_id":"themes/next/package.json","hash":"88fc322815d831e7096390a9c47be35e5a977dce","modified":1534242002232},{"_id":"source/_posts/2015-ruankao-am.md","hash":"734092406abb215695dd8c179435914705cbfb90","modified":1534239775160},{"_id":"source/_posts/PHP-APP-RSA-AES.md","hash":"6f30187b035075b159579ac62a651fee1fe0b8c8","modified":1534239775161},{"_id":"source/_posts/big_small_binary.md","hash":"1f3e532a6524811b2fe26f98a1c20ee004e2ea28","modified":1534239775164},{"_id":"source/_posts/computer-science-summary.md","hash":"97d6d5f3200bd238e749ca803957418d66e4b26b","modified":1534239775167},{"_id":"source/_posts/code-igniter-apidoc.md","hash":"35472f88623583ec2ea18c82b6260c1f03085149","modified":1534239775165},{"_id":"source/_posts/disk-basic.md","hash":"ea199fdf81ff554670e3b350135e5432b979b337","modified":1534239775169},{"_id":"source/_posts/head_first_c_106.md","hash":"f48f4d6e00139e6498b8243242ea15abd37c3f7e","modified":1534239775172},{"_id":"source/_posts/head_first_c_.md","hash":"91b3b8f1b185f75e60ccfaeeee729f5b8052c407","modified":1534239775170},{"_id":"source/_posts/head_firstc_str_reverse_98.md","hash":"4aff5189bd0911a79c06bb35f80272d253d405d3","modified":1534239775174},{"_id":"source/_posts/head_firstc_strstr_94.md","hash":"c0791ff540605286c976db4bb3cac60119c627b4","modified":1534239775176},{"_id":"source/_posts/head_frist_c_78.md","hash":"8029f09ca429f7e1dfeb800d76e1fbc047a64716","modified":1534239775178},{"_id":"source/_posts/http-cache.md","hash":"737f0c91d21cffb83267867c8037a6267c5b5a65","modified":1534239775180},{"_id":"source/_posts/java-2016-decorator.md","hash":"a7d51c4966273b1fbfac075a95a4026e58803398","modified":1534239775183},{"_id":"source/_posts/interface_security.md","hash":"f8e7f53cd37a7787cc44c2492a0d2720670fc0c3","modified":1534239775182},{"_id":"source/_posts/java-adapter.md","hash":"555dbf22351bf09f497a398a554a684a516d52ad","modified":1534239775185},{"_id":"source/_posts/java-bridge.md","hash":"f0d7a29a78885ddfe4e1e4799477302f7d70ebdd","modified":1534239775187},{"_id":"source/_posts/java-strategy.md","hash":"304a621a01ec9746dd3d138d62747a294510fb0c","modified":1534239775189},{"_id":"source/_posts/jp2a-meituan.md","hash":"7edfb26504974a16f460d5897b452cd46137e70d","modified":1534239775191},{"_id":"source/_posts/linux-top-about-cpu.md","hash":"7709a54068802da0a9bfca7fb73f980d97b3daf7","modified":1534239775193},{"_id":"source/_posts/mycnart_email_config.md","hash":"ff0af9263d59dc433c029e96a089f7e28f3e85b9","modified":1534239775195},{"_id":"source/_posts/php-catch-fatel-error.md","hash":"9873cd318ec25d477a8056d1aeeedf64698d2a5d","modified":1534239775197},{"_id":"source/_posts/php-insert-sort.md","hash":"4809a88d21fe4a0bef11629e834ffd2fb46cea79","modified":1534239775198},{"_id":"source/_posts/php7-update-on-ubuntu.md","hash":"fea5f70f8ed7e1bebd928d5609b54012bf100461","modified":1534239775200},{"_id":"source/_posts/phpstorm-add-comment-in-function.md","hash":"945983635a001506d44d2a778389417bf497fa0d","modified":1534239775202},{"_id":"source/_posts/post.md","hash":"14aebe9744dd01fb26374c97e8d488d7b36295d5","modified":1534239775203},{"_id":"source/_posts/redis_incr_hash.md","hash":"b82e01e9c963ac0840ca61ed506f4e7a5cc9a1fd","modified":1534239775205},{"_id":"source/_posts/workday.md","hash":"ccb0ab149707dca10bde5e1b1d4213db17804da5","modified":1534239775207},{"_id":"source/about/index.md","hash":"856e92634a61822a2f906eb4ba19d867f8e16c7e","modified":1534239775209},{"_id":"source/categories/index.md","hash":"6b65fc6642722a1af551f5e6b1b1cd3b49c82210","modified":1534239775210},{"_id":"source/tags/index.md","hash":"64772ba63147381c9b4aac54e55af5eba5ae25dc","modified":1534239775255},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1534242001933},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1534241995523},{"_id":"themes/next/.git/config","hash":"7f8b507977a695e25b27d4c2e8aaed71410536bf","modified":1534242001952},{"_id":"themes/next/.git/index","hash":"46d8446f0644f1dd542bfd400eb7e7f3530d5df1","modified":1534242002559},{"_id":"themes/next/.git/packed-refs","hash":"a501d3c0b4327897f958f5d9ef60b058e875907c","modified":1534242001916},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"22f2ccc5522563b67c8663849fc1d6cbae93a8ff","modified":1534242001972},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"40b0fd9fdb8586fab98e23f713940e7a2f80e2f9","modified":1534242001974},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"1e212fe229bd659726b4a3bcf4b5b14e0310ba3a","modified":1534242001976},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"36201119490a04107c8179b10202548a9d0e5e60","modified":1534242001978},{"_id":"themes/next/.github/stale.yml","hash":"dbd5e6bf89b76ad1f2b081578b239c7ae32755af","modified":1534242001983},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1534242001982},{"_id":"themes/next/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1534242002000},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"1dada3c3404445a00367882b8f97cdf092b7943d","modified":1534242002001},{"_id":"themes/next/docs/AUTHORS.md","hash":"51a0a13da55ff3d596970b2f9ab4531c6b2211f2","modified":1534242002003},{"_id":"themes/next/docs/DATA-FILES.md","hash":"9a1895c0a0db705c4c48f512e86917f9af1ec3fb","modified":1534242002005},{"_id":"themes/next/docs/INSTALLATION.md","hash":"b74ef6fedf76cdb156e2265759ee0a789ddd49cc","modified":1534242002007},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"f2fd611a84dd6f9ed5395b63e187e29e9effbcd3","modified":1534242002009},{"_id":"themes/next/docs/LICENSE","hash":"5b702310012d480b40529fd10cf1872f687277a0","modified":1534242002011},{"_id":"themes/next/docs/MATH.md","hash":"34a46ca9a05b4570903beaadd4807e6759afb52e","modified":1534242002013},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"c9f2ed8e15c137b1885d9ca8b7197d9f457971e9","modified":1534242002015},{"_id":"themes/next/languages/de.yml","hash":"641e49587d41bb87e4d5932dc3d975754ded7953","modified":1534242002042},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1534242002044},{"_id":"themes/next/languages/en.yml","hash":"d66b8b48840443a4f9c72c7696a21e292f685a47","modified":1534242002045},{"_id":"themes/next/languages/fr.yml","hash":"ebcd1f188af8c3f5ef1f0923e794c839fbfae2d4","modified":1534242002047},{"_id":"themes/next/languages/id.yml","hash":"9709a4dbacc56a1571a96b139b872128d6959e90","modified":1534242002050},{"_id":"themes/next/languages/it.yml","hash":"4e3adeb10c0fa627935d69ae1783ce0894f5dee5","modified":1534242002052},{"_id":"themes/next/languages/ja.yml","hash":"576af89e8228f5c852a1ddd7276a128a6bcbe785","modified":1534242002054},{"_id":"themes/next/languages/ko.yml","hash":"33e065ceb21590b8eb32430a69e76c2f057eb758","modified":1534242002055},{"_id":"themes/next/languages/nl.yml","hash":"060efc260c1c529469d739d97dcee79683e8f411","modified":1534242002057},{"_id":"themes/next/languages/pt-BR.yml","hash":"dc09e290e908744ca28e093dbdd859ca2a20290e","modified":1534242002059},{"_id":"themes/next/languages/pt.yml","hash":"53e2a52b9d5dc20c04080acd4f5b954e8699780f","modified":1534242002061},{"_id":"themes/next/languages/ru.yml","hash":"720b92a9ec075b68737d296b1f29ad8e01151c85","modified":1534242002063},{"_id":"themes/next/languages/tr.yml","hash":"6d2f53d3687a7a46c67c78ab47908accd8812add","modified":1534242002065},{"_id":"themes/next/languages/vi.yml","hash":"e2b3b18359ab41d58c64b2002acfedd60a7505a4","modified":1534242002067},{"_id":"themes/next/languages/zh-CN.yml","hash":"069f15da910d6f9756be448167c07ea5aa5dc346","modified":1534242002068},{"_id":"themes/next/languages/zh-HK.yml","hash":"c22113c4a6c748c18093dae56da5a9e8c5b963cd","modified":1534242002070},{"_id":"themes/next/languages/zh-TW.yml","hash":"dbf4dd87716babb2db4f5332fae9ec190a6f636a","modified":1534242002072},{"_id":"themes/next/layout/_layout.swig","hash":"2db9b03efc68be842b8f79fe2f0fd7fb09e8885a","modified":1534242002078},{"_id":"themes/next/layout/archive.swig","hash":"4b53070008775ecfd03953bd1b4adfcb0fabcaac","modified":1534242002216},{"_id":"themes/next/layout/category.swig","hash":"f0e3338bfa5efb205d2c28e635e9611f1fff3b55","modified":1534242002218},{"_id":"themes/next/layout/index.swig","hash":"bdcc9f57adef49706b16b107791cacecbc23c1dc","modified":1534242002223},{"_id":"themes/next/layout/page.swig","hash":"9ddf40303f82e3db76d59dc82b6d4eadfed203c6","modified":1534242002225},{"_id":"themes/next/layout/schedule.swig","hash":"d99b9eff0cff38caf095445f27c08aaf11a5b862","modified":1534242002229},{"_id":"themes/next/layout/post.swig","hash":"0554f42f90f4a524666c2b520be30b689c1d6a87","modified":1534242002227},{"_id":"themes/next/layout/tag.swig","hash":"7cda2822e50b9fee9848a6b81e6c2d1aca830aeb","modified":1534242002230},{"_id":"themes/next/scripts/helpers.js","hash":"7849f9b9a86fc82d6e186e32a5e26e1f27c49b47","modified":1534242002233},{"_id":"themes/next/scripts/merge-configs.js","hash":"5f96f63e86825fd7028c2522e4111103e261a758","modified":1534242002235},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1534242002237},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1534242002554},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1534242002556},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1534242002558},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534242002458},{"_id":"source/_posts/.idea/_posts.iml","hash":"980d382a89ef7b8d09f91e537fe9c93f1f117ff8","modified":1534239775154},{"_id":"source/_posts/.idea/modules.xml","hash":"45e5dd6213ed107bcf94d662d57092aba2b0b157","modified":1534239775156},{"_id":"source/_posts/.idea/workspace.xml","hash":"7022b2d62f60e783016d779594688144868f9c89","modified":1534239775158},{"_id":"source/img/avator/fucktheking.jpg","hash":"286e125e5bf57d7d3440b9a1671e96ba310e2cd3","modified":1534239775216},{"_id":"source/img/computer/cipan2.gif","hash":"e9be664f153c5c83144d682f24e937bf4716c6d1","modified":1534239775220},{"_id":"source/img/computer/cipan3.gif","hash":"56f867c74f3949e6a466f2c339f4c5cdddfc348a","modified":1534239775222},{"_id":"source/img/computer/cipan1.png","hash":"ab5742cbc60b9f616545456a29824f1495d04df0","modified":1534239775218},{"_id":"source/img/computer/cipan4.png","hash":"63b3c2ea35a37a08c5900eef7e932912b8148ff4","modified":1534239775224},{"_id":"source/img/patterndesign/zhuangshi.png","hash":"f9ba69ccc8d3ba621bfbaaa5190dcbb3a42158e5","modified":1534239775237},{"_id":"source/img/node/IAMTB.png","hash":"165df2204f10c3a43bbc24ae145a28d860be080d","modified":1534239775226},{"_id":"source/img/php/api-doc-1.jpg","hash":"6d71ac82bd785a8720931bc4f6c8ffe34b84a9dc","modified":1534239775241},{"_id":"source/img/php/Linux_CPU_Usage_Analysis.png","hash":"4808ee62ddca27280eddc860c1b37e4c3a63a9d0","modified":1534239775239},{"_id":"source/img/php/api-doc-2.jpg","hash":"4495d8cc1177623dc239fb5dc12620f38b81024d","modified":1534239775243},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1534241995524},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1534241995526},{"_id":"themes/next/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1534241995528},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1534241995530},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1534241995531},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1534241995533},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1534241995535},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1534241995537},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1534241995538},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1534241995540},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1534241995542},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1534241995544},{"_id":"themes/next/.git/logs/HEAD","hash":"4ad019ead64b801e5314e1fcb11d0852a15348ea","modified":1534242001940},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"a51de08657f5946f4028b11373280ddc04639525","modified":1534242002017},{"_id":"themes/next/docs/ru/README.md","hash":"bbe7ac3ef6352b7fedbba2ab800915e33251adf8","modified":1534242002020},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"7b2963daac19b0c14f98ebef375d5fbce8fc3f44","modified":1534242002018},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"1a4e41adcf5831057f3f7b3025ed4a5ef7c442b4","modified":1534242002022},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"e771c5b745608c6fb5ae2fa1c06c61b3699627ec","modified":1534242002024},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"9b512cb820627fcc45c9f77c7a122aa99e021bd5","modified":1534242002026},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"6ea741f380dc3e90661d12db7e115a94b77643a4","modified":1534242002028},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"baca12cc24be082f1db28c7f283493569666321c","modified":1534242002031},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"67f4a987e7db0ab1ce1ea4c311f2961df07b6681","modified":1534242002029},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"7214fcd1b5830e62b3ac0836ad2d1b0fa391ae12","modified":1534242002033},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"4d68054b062b3c8404b146a155d9624d2d25dd9b","modified":1534242002035},{"_id":"themes/next/docs/zh-CN/README.md","hash":"74547943ee6cba2e2bbbd67d306ee4de9db1a2bd","modified":1534242002037},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"2095d1214a4e519a1d31b67b41c89080fa3285d3","modified":1534242002038},{"_id":"themes/next/layout/_custom/head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1534242002074},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1534242002076},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1534242002077},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1534242002086},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"8ff97c3f4eb888207bdc50066053c97d890e0202","modified":1534242002089},{"_id":"themes/next/layout/_macro/post-related.swig","hash":"e8dfb86eb62b9c2bc1435d6d1afa95d3b4c7b931","modified":1534242002091},{"_id":"themes/next/layout/_macro/post.swig","hash":"00cd242c032341ab0fb5d7f66d4a9aa652eab183","modified":1534242002093},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56733f92352b891b0bb1baca293f68f6c8928b0b","modified":1534242002095},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"a9519b4f82aa516e516317d0447bf5c5c7ffb544","modified":1534242002097},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"7a9b687087793bf5e218cbc345214f927fa5601a","modified":1534242002099},{"_id":"themes/next/layout/_partials/breadcrumb.swig","hash":"4b48fdbfe3bf41ddeda4ff74c1ff17ab9f15c14e","modified":1534242002100},{"_id":"themes/next/layout/_partials/comments.swig","hash":"412d2a0e18a237e490e1b8bce5547558768b9da3","modified":1534242002102},{"_id":"themes/next/layout/_partials/footer.swig","hash":"ec4f8a69dbb2d8ebab7ef28e342eae543eaee241","modified":1534242002104},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"206cbd6ac9ca6a219a8516f59beae25b3c770199","modified":1534242002118},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"914155d5d758306cff405beefd4a07973fd8fc77","modified":1534242002120},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"27fb1d81151b9b79683e488579df19eee7e654d6","modified":1534242002134},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"f544e21883d249d5a341c684c97bd25831008f07","modified":1534242002136},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"f8c7e729ad6e72b4c705a2c5d5041589c2b4cc52","modified":1534242002138},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"f134aeb8d5bee351e5277edb92ac694af314b75f","modified":1534242002147},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"ed62ea83d3f2c9db2ea57bf23a7d765ed82504c2","modified":1534242002172},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"c62c37474c8de78cf34e54c6219b503ec28d9815","modified":1534242002185},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"53861f78a1fb52e96a43cf6909e1530dcf6cbff8","modified":1534242002187},{"_id":"themes/next/layout/_third-party/github-banner.swig","hash":"736cb278fa09d3b4ed6f305b56353941ea918793","modified":1534242002187},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"debba9b7110f635204a15df148194d4c2fd2668b","modified":1534242002197},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"ccf0035086e14dcefa24c2907301edf4c37d5448","modified":1534242002198},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1534242002200},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1534242002202},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"a174d4a0c9188f9c4a2652f49bfa7a60ad0a83e3","modified":1534242002203},{"_id":"themes/next/scripts/tags/button.js","hash":"510f3711a9c9d3e2a844250647d90e8359e7d130","modified":1534242002239},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"4519ab8e6898f2ee90d05cde060375462b937a7d","modified":1534242002241},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"2b969ca830862b2bc119b69ede4bd971e27a6ff8","modified":1534242002246},{"_id":"themes/next/scripts/tags/full-image.js","hash":"ef2c2985a3edb9f69740740c5bc42d4b692c86fd","modified":1534242002245},{"_id":"themes/next/scripts/tags/exturl.js","hash":"83e48148d2f4f8543f6833effa8a26eb0b60f2f0","modified":1534242002243},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"ab4a82a7246265717556c7a42f897430340b88cf","modified":1534242002248},{"_id":"themes/next/scripts/tags/label.js","hash":"bb502616bfabe85de5de903074ec6afe627f8413","modified":1534242002250},{"_id":"themes/next/scripts/tags/note.js","hash":"bd3310a5890bded1bda9ba3ad6f98ee44ecb101a","modified":1534242002250},{"_id":"themes/next/scripts/tags/tabs.js","hash":"2d257e26718d4011509fd6f530d2ea37e50e3e66","modified":1534242002252},{"_id":"themes/next/source/css/main.styl","hash":"2a62e2a11e9cdcc69e538d856d6f9ce228a07c93","modified":1534242002457},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1534242002461},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1534242002463},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1534242002465},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1534242002467},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1534242002469},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1534242002470},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1534242002472},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1534242002474},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1534242002476},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1534242002478},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1534242002479},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1534242002484},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1534242002481},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1534242002485},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1534242002487},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1534242002489},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1534242002490},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1534242002492},{"_id":"source/img/patterndesign/adapter.png","hash":"e17cf68afe8854a6ac668463161edcb9fd78be3f","modified":1534239775229},{"_id":"source/img/patterndesign/qiaojie.png","hash":"0659cc586a5bfa5ae6d1df87ed622c67efaf17b5","modified":1534239775231},{"_id":"source/img/php/api-doc-3.jpg","hash":"fbc7c7ed9e3ece35678d38227a66c2bbf07b296d","modified":1534239775245},{"_id":"source/img/php/storm-2.jpg","hash":"f9e2d9554515520b961e94cf04a0c625ae164f63","modified":1534239775249},{"_id":"source/img/php/storm-1.jpg","hash":"a92d2d6b8ac033dd2e297b43f0a64d1b421211c0","modified":1534239775247},{"_id":"source/img/php/storm-3.jpg","hash":"a1df6435f9adf363aff9fc0ffcd7c3f5e28979b7","modified":1534239775252},{"_id":"source/img/ruankao/17-18.png","hash":"7fcb4da270cb392e8e995052b272cb2d8ecde696","modified":1534239775254},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534242002142},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534242002143},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534242002394},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534242002395},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534242002400},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534242002450},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534242002455},{"_id":"themes/next/.git/refs/heads/master","hash":"e7d5d06a97b02e9fd6141aba44a00feed39541ad","modified":1534242001939},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"4eb8e222dc337211efb0d3bbdb5e29af3e6ecdb8","modified":1534242002081},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"aab518204d3125e948796a9ba6b56b09cade2d92","modified":1534242002084},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"19050627bc23b0b2c2e65e7248c0f88468eb8ea5","modified":1534242002111},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"c909f6e96373c151dea325bcddfdd8c9522421b6","modified":1534242002114},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"f3ae3168801304af3d80ec3b84264e1d4201cb89","modified":1534242002115},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"3f11ae8e9084f39628cd2006931d39a2069b9dd6","modified":1534242002117},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1534242002106},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"0b8349710caf9691741a457aa746add35245048e","modified":1534242002108},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"09109a5c5a301e7cc5e3c7aec32b0164739fc7d4","modified":1534242002109},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"f6454c452b2e90a8c760321bce7e3dc6119b71fa","modified":1534242002122},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1534242002124},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1534242002125},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1534242002127},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1534242002128},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1534242002131},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1534242002133},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"580e9d9c4d8783ee6200d845ae16c98979bf1ea3","modified":1534242002139},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"c381f638315a007b1baf5fea879161001fe50cd0","modified":1534242002141},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"c381f638315a007b1baf5fea879161001fe50cd0","modified":1534242002145},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1534242002149},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1534242002151},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1534242002152},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"c43f41b7f3c0743d1e673af2e787ea34a67fc9cb","modified":1534242002154},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1534242002156},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1534242002158},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"d67d9a176a276cdab6f2bcb7eb3650fbca5459c4","modified":1534242002159},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"cfc932c5db04fef64cc56d3ba0b8ddf3a15a63bd","modified":1534242002161},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1534242002163},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"bd8382d4f12df207ed52f75f6e5fb06527970167","modified":1534242002165},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1534242002167},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1534242002168},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1534242002170},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1534242002174},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"4a2d2269f23e90c1311bd867d22def0b4a092bf1","modified":1534242002175},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"292cdd1059b76d3d10486b71c99d9afb3e59ea44","modified":1534242002177},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"34cc66d4dbada2d561ba6f70fd9a75207c5adbd4","modified":1534242002179},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"694483f2d853c65b87a6a70e38dbc40e40eb1332","modified":1534242002181},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"d05e70a416963023ee1978e4168d58bcfd956ed3","modified":1534242002183},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"30e9e55d9af2ced6e6b156a042026a8b480f0ab0","modified":1534242002190},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"860de4ce6fccc516d2f779a4b600a4214d8c18e2","modified":1534242002192},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"c0c2fd87e71f0beb542aa50c0bc875da5aa5c44b","modified":1534242002195},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1534242002209},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"71c897f9b107dd0de1b7f649633cf583c206a9db","modified":1534242002211},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1534242002213},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1534242002215},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1534242002392},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1534242002393},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"8aa98ae349908736ba43196c42498fd5bdeb780a","modified":1534242002397},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0882d76333ab409e8d3362c284b91a0f0ae761ae","modified":1534242002399},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1534242002450},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"8d6cf29f63c90364f4d3c336f7c9bb794b4c46cc","modified":1534242002448},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"72927abd51d3a607a6ba32cf882390792b34e834","modified":1534242002452},{"_id":"themes/next/source/css/_variables/base.styl","hash":"1625e3e1da6c453108526e027dae25e311b18adf","modified":1534242002454},{"_id":"themes/next/source/js/src/affix.js","hash":"ad343aa406fd8181b5f310434817ce98fc2219e3","modified":1534242002495},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"84906eeae57bd06744dd20160b93eacf658f97e2","modified":1534242002497},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"c7e2a588b679d46379124141bb2f30bc2f3210e2","modified":1534242002499},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1534242002503},{"_id":"themes/next/source/js/src/exturl.js","hash":"c48aa4b3c0e578a807fd3661e6cd4f3890777437","modified":1534242002501},{"_id":"themes/next/source/js/src/motion.js","hash":"6b5a2646b775609630b9ff6221fa58b6823a25fa","modified":1534242002504},{"_id":"themes/next/source/js/src/post-details.js","hash":"7d309b771e86c7e22ce11cc25625481ef7d5985c","modified":1534242002506},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"c4867626afab749404daf321367f9b6b8e223f69","modified":1534242002510},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"68d3690152c89e7adb08bb35ec28dbda2bd93686","modified":1534242002512},{"_id":"themes/next/source/js/src/utils.js","hash":"9cddff04f9ff64b1e3202e1726eff512a2ef8497","modified":1534242002515},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1534242002518},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1534242002520},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1534242002521},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1534242002523},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1534242002524},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1534242002549},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1534242002551},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1534242002553},{"_id":"source/img/patterndesign/strategy.png","hash":"69ef7631dbed5cf7bd12740ebd36b529fbb46e8e","modified":1534239775235},{"_id":"themes/next/.git/objects/pack/pack-cae7102de9b2d9816958a40fde0d5d024fd08c1f.idx","hash":"1027bc9ec3a2141e88ed1f46596bb954fbab283d","modified":1534242001876},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1534242002540},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"4ad019ead64b801e5314e1fcb11d0852a15348ea","modified":1534242001943},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1534242001929},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"6e076b5e183eedf425a445e99851f938789c3194","modified":1534242002206},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1534242002208},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1534242002255},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1534242002257},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1534242002259},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1534242002263},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1534242002261},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1534242002295},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1534242002347},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"fbb6be577529c750ef7c872fe7abdc7ab0faf0f8","modified":1534242002379},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"97bb39756e85f5b27bba7f43270105ad01d736c9","modified":1534242002381},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1534242002383},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1534242002385},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1534242002387},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1534242002388},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"52bc8ba71b91d954530b35dfc63b402a02b1321d","modified":1534242002390},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7e4e499964c2112d47e6f9d2b6e87c31ec8269e2","modified":1534242002403},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1534242002424},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1534242002426},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1534242002429},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"3cc7646583218d16925ced7b70865e63a901d4a7","modified":1534242002428},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"b26f8a3394d8357a5bfd24d9f8bf62d7b4063ebb","modified":1534242002431},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"d0e9065b0dbbc01811259f0597d1790268b4881b","modified":1534242002405},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1534242002408},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1534242002409},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"f3aa863adf972569b72f2df6bc6a914e7daace99","modified":1534242002411},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fa6c00fdaf8f0ca3b690a5a556671745fb67e2c9","modified":1534242002415},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1534242002416},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"2ccb9bdc309b7c1ef183a3dbb0a4621bec54a328","modified":1534242002418},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1534242002435},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"ccf5a4761cb0ce451b5e994cfabf8769248a45c1","modified":1534242002437},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"cc961108b12ab97d9216606ceb1cd1cd31ab20f0","modified":1534242002439},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1534242002441},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"df16dc995eb9ad498df2edcfc3e20528fc9aa133","modified":1534242002443},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"a558803ca81cceae2bdc22c18ef638fcc023681b","modified":1534242002446},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"be72740313a9a0477b8a22f62e4c8ffa6d23a2e5","modified":1534242002444},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"6ed3f2389457daa382de96a08633d9faaaaf53fb","modified":1534242002508},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1534242002526},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1534242002528},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1534242002529},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1534242002543},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1534242002544},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1534242002535},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1534242002537},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1534242002547},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"4ad019ead64b801e5314e1fcb11d0852a15348ea","modified":1534242001928},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7dd247c8869fdefb5a007045d00f3ef8ceecf300","modified":1534242002265},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"3f3d2a43d1a326bad25b633c8ec9ddd87867224c","modified":1534242002267},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1534242002270},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"34f5ac3c1ed2dd31e9297cc4c0733e71bc2e252f","modified":1534242002268},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1534242002272},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1534242002276},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1534242002274},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1534242002278},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"835c1340571bd6c4ec263c482cf13283fb047e49","modified":1534242002280},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1534242002282},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1534242002284},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"630be616447a982413030e561bbd3a80ac14b120","modified":1534242002285},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1534242002287},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"ad4cae23c8e383f4fabc9a2a95bca6055020d22e","modified":1534242002289},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1534242002291},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1534242002293},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1534242002297},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1534242002299},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1534242002301},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1534242002303},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"317c9ceda655e9dc373ce8e7b71d20b794fce9a4","modified":1534242002306},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1534242002308},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"330c8884efb5612e7eb03986d87d29e8b0651974","modified":1534242002310},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1534242002314},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"82bc7fa5d38d98e98cc25f9a73189024fda25e63","modified":1534242002315},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ff50a32ae6fea5fcdf2939dc9b01e1eb76cc73f0","modified":1534242002317},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1534242002319},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1534242002321},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"adfd6d2d3b34adc4b476a0ea91e19020456a3b1a","modified":1534242002322},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1534242002324},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5c3141d58970a0614896b6a62fd7a8a8caf4e401","modified":1534242002326},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"bb8162bb7c7b0b255a0e8e234eb382a0879a4962","modified":1534242002328},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"fa57ec9a6f1943c0558856dfba2d6b8faca0cd4d","modified":1534242002330},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"debe322cc9e2688ecf38d0b6afcd6b71ad02fbd0","modified":1534242002332},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1534242002334},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1534242002335},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1534242002337},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1534242002339},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"9e05a2232faabb41bcebb51d545d897a76f077da","modified":1534242002340},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1534242002341},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"94d76e6da600a36d80e2470326ebb6b3be447ccb","modified":1534242002343},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1534242002345},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1534242002349},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"02ee0eb49c256ecb4e71bbc65072f9147418d7d7","modified":1534242002350},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"2d58ad90f148e845bc7023751a7a13260600f8d6","modified":1534242002352},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1534242002356},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1534242002354},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1534242002357},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1534242002359},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1534242002361},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1534242002363},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"f4d8144c22544bdb89787c14ab9d39578dae4b7c","modified":1534242002365},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1534242002366},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1534242002368},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1534242002370},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1534242002372},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1534242002374},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"acfdd76b1c90d2e384affb3d0006a39b524609d2","modified":1534242002375},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"c31fbaec7e6373ecfb8588500b972d451695a6ad","modified":1534242002377},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1534242002433},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1534242002420},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1534242002422},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1534242002533},{"_id":"themes/next/.git/objects/pack/pack-cae7102de9b2d9816958a40fde0d5d024fd08c1f.pack","hash":"2f21c8c4eb7ec4af4aa6c200ab01ad70a325e28d","modified":1534242001886},{"_id":"public/search.xml","hash":"743b50d6bb5cb6250b690e67f28cdb8d82287c44","modified":1534244919641},{"_id":"public/about/index.html","hash":"cfc4c8603c581140e107180bba8a403c10ce07a0","modified":1534244919697},{"_id":"public/categories/index.html","hash":"764f27cdc5335c6c10ad8f641ccd45aff7f18769","modified":1534244919698},{"_id":"public/tags/index.html","hash":"9924b0a32d7732e3dd5e8c72a8ec2785840934b0","modified":1534244919698},{"_id":"public/2016/11/04/post/index.html","hash":"a7b2dc8e9e38f2c65984e66d3003e974fa88c852","modified":1534244919698},{"_id":"public/2016/11/04/php-insert-sort/index.html","hash":"509a99c9bf31730183563a85740ef30259e7d941","modified":1534244919698},{"_id":"public/2016/11/04/big_small_binary/index.html","hash":"7e86ffd14ce8fe7da840eb1c6d433ec1f0b95483","modified":1534244919698},{"_id":"public/2016/11/05/disk-basic/index.html","hash":"87b608292a6fe0026d813a75418ec1920a66e40f","modified":1534244919698},{"_id":"public/2016/11/07/java-strategy/index.html","hash":"2c07df1e9f5d17ab24a9b167a5433e916964a03b","modified":1534244919699},{"_id":"public/2016/11/07/java-adapter/index.html","hash":"7136054668c3ea0a32322ed6e27f0723830f3b4a","modified":1534244919699},{"_id":"public/2016/11/09/2015-ruankao-am/index.html","hash":"d69c796d62355aedef879ea81f210c6c2d853246","modified":1534244919699},{"_id":"public/2016/11/11/java-bridge/index.html","hash":"e255506d353c8d3acc9306df3fb9404bfd80b618","modified":1534244919699},{"_id":"public/2016/11/15/java-2016-decorator/index.html","hash":"de2372cc433da7e360dd968f4eb788222a3a4b55","modified":1534244919699},{"_id":"public/2016/11/18/PHP-APP-RSA-AES/index.html","hash":"a92a0e4f91fce4de219d9073a028970e7b193165","modified":1534244919699},{"_id":"public/2016/11/21/jp2a-meituan/index.html","hash":"7546b5ec686bbec71912e753ef12a561343de924","modified":1534244919699},{"_id":"public/2016/11/21/php7-update-on-ubuntu/index.html","hash":"f159eec5e80001839c1fc311bb892cbb3bff8d5f","modified":1534244919699},{"_id":"public/2016/12/05/phpstorm-add-comment-in-function/index.html","hash":"36ed1e4f7ebfe8a3e22f4cc9fb52bff5fb4055d8","modified":1534244919699},{"_id":"public/2016/12/05/interface_security/index.html","hash":"42092f20dccd4c16c35486646e4a594017d22cd8","modified":1534244919699},{"_id":"public/2016/12/07/linux-top-about-cpu/index.html","hash":"a27aacbfdc3156db119a23e52624885a4ea0833a","modified":1534244919699},{"_id":"public/2017/01/20/code-igniter-apidoc/index.html","hash":"303058cd3368b5c23b44023ff189fb56b8100d57","modified":1534244919699},{"_id":"public/2017/03/07/http-cache/index.html","hash":"ddde7ac4aa6627e29380ea1a21382bf465f93c8f","modified":1534244919699},{"_id":"public/2017/05/31/workday/index.html","hash":"07cf126ae58828b8ee7fb286437f591bca912d88","modified":1534244919699},{"_id":"public/2017/11/04/head_first_c_/index.html","hash":"3463f1b152bec7cd5f4e7e86dfcdb399510151f0","modified":1534244919700},{"_id":"public/2017/11/04/computer-science-summary/index.html","hash":"6da9111ccadd465861635633bad0a07da38550ea","modified":1534244919700},{"_id":"public/2017/11/17/php-catch-fatel-error/index.html","hash":"3a065744affeb06c57f5036a886f629da9e837d3","modified":1534244919700},{"_id":"public/2017/11/20/head_frist_c_78/index.html","hash":"e162bd1fbff75fc614c1e3e524709addca45c4e4","modified":1534244919700},{"_id":"public/2017/11/22/redis_incr_hash/index.html","hash":"3efa6e615b49a8e880644c3d3cd0a39bddbc3258","modified":1534244919700},{"_id":"public/2017/11/25/head_firstc_strstr_94/index.html","hash":"09cc0d9ce2b6390e591fe7504e2e0152d0d27f02","modified":1534244919700},{"_id":"public/2017/11/25/head_firstc_str_reverse_98/index.html","hash":"5f13d7b37425d8c5d1d73bf6e225078065471cf1","modified":1534244919700},{"_id":"public/2017/11/25/mycnart_email_config/index.html","hash":"c1dbad4fd1eff34939943f5b62c3e1949cc25764","modified":1534244919700},{"_id":"public/2017/11/26/head_first_c_106/index.html","hash":"8a8e8fe5631a05ad822d70a2d44465ac6c2abca9","modified":1534244919700},{"_id":"public/categories/computer/index.html","hash":"c53d53ba04304f78c97093867b8bace680abb1de","modified":1534244919700},{"_id":"public/categories/C/index.html","hash":"f349a42488d769d915c154e4092784abdc7999cf","modified":1534244919700},{"_id":"public/categories/PHP/index.html","hash":"ae9be238294d771b38398891bbe9dd324ef32319","modified":1534244919701},{"_id":"public/categories/PHP/page/2/index.html","hash":"bc3d7aebf943a24ad3b56d863c8e461f9bea5eff","modified":1534244919701},{"_id":"public/categories/设计模式/index.html","hash":"a82b62d4692e0bfeb84d5aef45fabd11a3617679","modified":1534244919701},{"_id":"public/categories/LINUX/index.html","hash":"57860eeca2cf07e9fc6558dd6ca775fb3451e568","modified":1534244919701},{"_id":"public/categories/node/index.html","hash":"b1fde567f8a6111ada2457464796204c00f78539","modified":1534244919701},{"_id":"public/categories/REDIS/index.html","hash":"829fcef8aec83c99bdecd80f17e931a8861b48b9","modified":1534244919701},{"_id":"public/archives/index.html","hash":"840219e3ec8971eb092d5d1e7eb15a6c0bfa183f","modified":1534244919701},{"_id":"public/archives/page/2/index.html","hash":"d3112a24cc427712a032a0807ffbe4f497137c54","modified":1534244919701},{"_id":"public/archives/page/3/index.html","hash":"6482e65cb6b965cf0e674a3d2cf2c1e3a4162203","modified":1534244919701},{"_id":"public/archives/2016/index.html","hash":"8a414325870d456ff21c68d74d99308af6fc9e69","modified":1534244919701},{"_id":"public/archives/2016/page/2/index.html","hash":"0a3de780cbc0bdf43073b55fdd944ecb61f90b68","modified":1534244919701},{"_id":"public/archives/2016/11/index.html","hash":"5326ccc27ccd944a5a9cfa772b0f7b4d4b5877f8","modified":1534244919701},{"_id":"public/archives/2016/11/page/2/index.html","hash":"89199e0896d781b0f33c0e0938e3fa2cec18f05d","modified":1534244919701},{"_id":"public/archives/2016/12/index.html","hash":"3ea4e9ad96123fe681df7564caf656f22bba413d","modified":1534244919701},{"_id":"public/archives/2017/index.html","hash":"01e59aecceeb66d46559745231d4c1e1b59282a9","modified":1534244919701},{"_id":"public/archives/2017/page/2/index.html","hash":"bccad1abc89eee5d3dc2190b52a78759c56ddcca","modified":1534244919701},{"_id":"public/archives/2017/01/index.html","hash":"3e6ae1e5a4558694b293dcf296c11d51347a2559","modified":1534244919701},{"_id":"public/archives/2017/03/index.html","hash":"f0d59d87faa4fd256ad999c1e68b3d8a6876b77e","modified":1534244919701},{"_id":"public/archives/2017/05/index.html","hash":"f894d515c76c55f04720b4675eff3be30849045f","modified":1534244919701},{"_id":"public/archives/2017/11/index.html","hash":"0bc3313d209ac8727986f71d410a9c7295815be0","modified":1534244919702},{"_id":"public/index.html","hash":"eb2aaa8d072cc3ad1c4ef0238ffdd19e71cb3c6f","modified":1534244919702},{"_id":"public/page/2/index.html","hash":"8127f81e7e193da87127bb26f0de2e91013f8041","modified":1534244919702},{"_id":"public/page/3/index.html","hash":"9876a104a210e646a6249e808f89da3ce70fbad6","modified":1534244919702},{"_id":"public/tags/软考/index.html","hash":"48d19f040fc57732a3f99e7948f8b208ddcbae17","modified":1534244919702},{"_id":"public/tags/软件设计师/index.html","hash":"291099da62c5c33d4ab1cd68fbc88a1c858fac38","modified":1534244919702},{"_id":"public/tags/大端字节序/index.html","hash":"92032bff93d839cf8a58219624ce00125413b78b","modified":1534244919702},{"_id":"public/tags/RSA/index.html","hash":"c22f6d1479d27701025da7f5de7a905482edf6ef","modified":1534244919702},{"_id":"public/tags/AES/index.html","hash":"c6ec58a54befefd08df8742fa2429d919a52b1ff","modified":1534244919702},{"_id":"public/tags/双向加密解密/index.html","hash":"e905664edea62d9027e49c1ef049eb9756c6f8e9","modified":1534244919702},{"_id":"public/tags/PHP框架/index.html","hash":"f532438cd22bd96c94019d6b4e3ca8b93b8078ff","modified":1534244919702},{"_id":"public/tags/CI框架/index.html","hash":"59d3bb4b552fd5184ee6346a4fe61fe195c49834","modified":1534244919702},{"_id":"public/tags/接口文档/index.html","hash":"fa3acc4971f5aab71d2082fc2f280629a68fb739","modified":1534244919702},{"_id":"public/tags/硬盘/index.html","hash":"67a42a19e2ce40740e526124ad9528f1cf6af4af","modified":1534244919702},{"_id":"public/tags/扇区/index.html","hash":"94c66385e6553a4610b83bb199bc13941a724e9a","modified":1534244919702},{"_id":"public/tags/磁道/index.html","hash":"22a7b5125cdeb00a0a20209043034074205e3b70","modified":1534244919702},{"_id":"public/tags/计算机科学/index.html","hash":"fb8a4bff71d7ae7e4782ee22852c8149faacebf2","modified":1534244919702},{"_id":"public/tags/HEAD-FIRST-C/index.html","hash":"c8af179b2e42e612a68dc747ff2eecf6659403e6","modified":1534244919702},{"_id":"public/tags/数组与指针/index.html","hash":"46103d703abf680e37c6616b9a9d80c4fe80eb8e","modified":1534244919702},{"_id":"public/tags/装饰模式/index.html","hash":"9cd8b8bb5ecff64b8b2690081eae251a6e268f64","modified":1534244919702},{"_id":"public/tags/JAVA/index.html","hash":"cb99d524cf18516b32adca16eee9b93fbef22503","modified":1534244919703},{"_id":"public/tags/HTTP/index.html","hash":"434e9fe65ceef8083c26a55fc5bc57757b4cfcc5","modified":1534244919703},{"_id":"public/tags/CACHE/index.html","hash":"c1911a16221b14fe140195c1e950d42b0b656add","modified":1534244919703},{"_id":"public/tags/PHP/index.html","hash":"42967f0a561453e9ed4e5735bdb4561640c46de4","modified":1534244919703},{"_id":"public/tags/NGINX/index.html","hash":"b2d162de98000cdea50c8c84e2fefdfd1963a152","modified":1534244919703},{"_id":"public/tags/接口调用/index.html","hash":"80f827b80ff5e86833d93f7df1752c14c52fddac","modified":1534244919703},{"_id":"public/tags/安全性/index.html","hash":"5be50224245a724c07a2c8747a040e4ebe64b655","modified":1534244919703},{"_id":"public/tags/sign-token/index.html","hash":"e76a0e1bc60e4c9571b6e9dfad44fead279e6246","modified":1534244919703},{"_id":"public/tags/适配器模式/index.html","hash":"5b4f327cd539df7fc685f7d259fcb74b10989e36","modified":1534244919703},{"_id":"public/tags/桥接模式/index.html","hash":"11d37b39c10c9aaa2ff5cfb61f5570437a6f9172","modified":1534244919703},{"_id":"public/tags/策略模式/index.html","hash":"f112b81b4e682afa23004ff09cba5f51f10ec87c","modified":1534244919703},{"_id":"public/tags/jp2a/index.html","hash":"2ff7714cd718f098225f90d553944dc8ee94cf7a","modified":1534244919703},{"_id":"public/tags/ascii/index.html","hash":"880ab90fba201571d6c1b84942df1664f61ec4b9","modified":1534244919703},{"_id":"public/tags/meituan/index.html","hash":"9eab8a12604425f2d4b6d3f6be1b86dd374821be","modified":1534244919703},{"_id":"public/tags/linux/index.html","hash":"7595823fd9fb37aad3593557a48ea58d91cf09b4","modified":1534244919703},{"_id":"public/tags/cpu/index.html","hash":"f1391f1faca91095640e677444fb031f9085489f","modified":1534244919703},{"_id":"public/tags/异常/index.html","hash":"c596137ad5a51e9da1707dd07baa780e1868a36f","modified":1534244919703},{"_id":"public/tags/mycnart/index.html","hash":"065e1f89e283503f5de05b5293d6f5fbd138a799","modified":1534244919703},{"_id":"public/tags/插入排序/index.html","hash":"7330970b74e98b5089d6aaa711df861867dd95f0","modified":1534244919703},{"_id":"public/tags/算法/index.html","hash":"cfc29b7fde2fbf19d6038a4cdcd78316d01448fa","modified":1534244919703},{"_id":"public/tags/PHPSTORM/index.html","hash":"5873e28d87b29fb06c25b7f0ad65c0cad5f43e76","modified":1534244919703},{"_id":"public/tags/编辑器/index.html","hash":"b6939049c18415e37a6983251f5af5b214f7e092","modified":1534244919703},{"_id":"public/tags/github-page/index.html","hash":"df817eb1935abeb287bd2a446bc76467f0707ec9","modified":1534244919704},{"_id":"public/tags/hexo/index.html","hash":"41fc68ef11aea24a9cb06fa08cb8bd9d257c042d","modified":1534244919704},{"_id":"public/tags/git/index.html","hash":"3ee4bf799b942f4866ebe912adc0145f2233f4bf","modified":1534244919704},{"_id":"public/tags/node/index.html","hash":"435a246308cd146a556933a9c4281fcca94e136c","modified":1534244919704},{"_id":"public/tags/PHP7/index.html","hash":"69f8c623536ce52ee8281f016bb40cf2538f9252","modified":1534244919704},{"_id":"public/tags/FPM/index.html","hash":"20d4ad95295bec7592d6978bb892b1b3cea61cfc","modified":1534244919704},{"_id":"public/tags/Ubuntu/index.html","hash":"b97865c3076aea2464b5c1ecb3f250e330b613be","modified":1534244919704},{"_id":"public/tags/REDIS应用/index.html","hash":"d78574619aac9a063a09b29c690931e46b492fc8","modified":1534244919704},{"_id":"public/tags/工作日计算/index.html","hash":"e25f0414111278c7925035a468de18e2880aa623","modified":1534244919704},{"_id":"public/CNAME","hash":"62ec72e59524ab81fc4e9eede8db5c0d58d67c2a","modified":1534244919712},{"_id":"public/favicon.ico","hash":"1b6f0965050e24f8a54c7ae8a980e8a79f5ac357","modified":1534244919712},{"_id":"public/img/avator/fucktheking.jpg","hash":"286e125e5bf57d7d3440b9a1671e96ba310e2cd3","modified":1534244919712},{"_id":"public/img/computer/cipan2.gif","hash":"e9be664f153c5c83144d682f24e937bf4716c6d1","modified":1534244919712},{"_id":"public/img/computer/cipan3.gif","hash":"56f867c74f3949e6a466f2c339f4c5cdddfc348a","modified":1534244919712},{"_id":"public/img/computer/cipan1.png","hash":"ab5742cbc60b9f616545456a29824f1495d04df0","modified":1534244919712},{"_id":"public/img/computer/cipan4.png","hash":"63b3c2ea35a37a08c5900eef7e932912b8148ff4","modified":1534244919712},{"_id":"public/img/php/api-doc-1.jpg","hash":"6d71ac82bd785a8720931bc4f6c8ffe34b84a9dc","modified":1534244919712},{"_id":"public/img/patterndesign/zhuangshi.png","hash":"f9ba69ccc8d3ba621bfbaaa5190dcbb3a42158e5","modified":1534244919712},{"_id":"public/img/php/api-doc-2.jpg","hash":"4495d8cc1177623dc239fb5dc12620f38b81024d","modified":1534244919712},{"_id":"public/img/node/IAMTB.png","hash":"165df2204f10c3a43bbc24ae145a28d860be080d","modified":1534244919712},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1534244919712},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1534244919712},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1534244919712},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1534244919712},{"_id":"public/img/php/Linux_CPU_Usage_Analysis.png","hash":"4808ee62ddca27280eddc860c1b37e4c3a63a9d0","modified":1534244919712},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1534244919713},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1534244919713},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1534244919713},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1534244919713},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1534244919713},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1534244919713},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1534244919713},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1534244919713},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1534244919713},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1534244919713},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1534244919713},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1534244919713},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1534244919713},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1534244919713},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1534244919713},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1534244919713},{"_id":"public/img/php/api-doc-3.jpg","hash":"fbc7c7ed9e3ece35678d38227a66c2bbf07b296d","modified":1534244920093},{"_id":"public/img/patterndesign/adapter.png","hash":"e17cf68afe8854a6ac668463161edcb9fd78be3f","modified":1534244920094},{"_id":"public/img/php/storm-2.jpg","hash":"f9e2d9554515520b961e94cf04a0c625ae164f63","modified":1534244920097},{"_id":"public/img/php/storm-1.jpg","hash":"a92d2d6b8ac033dd2e297b43f0a64d1b421211c0","modified":1534244920097},{"_id":"public/img/php/storm-3.jpg","hash":"a1df6435f9adf363aff9fc0ffcd7c3f5e28979b7","modified":1534244920097},{"_id":"public/img/patterndesign/qiaojie.png","hash":"0659cc586a5bfa5ae6d1df87ed622c67efaf17b5","modified":1534244920097},{"_id":"public/img/ruankao/17-18.png","hash":"7fcb4da270cb392e8e995052b272cb2d8ecde696","modified":1534244920097},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1534244920097},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1534244920097},{"_id":"public/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1534244920101},{"_id":"public/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1534244920101},{"_id":"public/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1534244920101},{"_id":"public/js/src/bootstrap.js","hash":"1c41508b83cb0c4512e64b4d63afa1be954ce8ef","modified":1534244920101},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1534244920101},{"_id":"public/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1534244920101},{"_id":"public/js/src/motion.js","hash":"52fd093cb96b68229b38436c9b8ebcefc7e12cb2","modified":1534244920101},{"_id":"public/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1534244920101},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1534244920101},{"_id":"public/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1534244920101},{"_id":"public/js/src/utils.js","hash":"e829806d054991d0324a339993082206ca6026e5","modified":1534244920101},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1534244920101},{"_id":"public/js/src/schemes/pisces.js","hash":"ab6f13fae0513a9b39f8d8c4c3a4e3928014f046","modified":1534244920101},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1534244920101},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1534244920101},{"_id":"public/css/main.css","hash":"8a3b26da4d2f4a358292dae6e759eae8d6080b34","modified":1534244920101},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1534244920101},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1534244920101},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1534244920101},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1534244920101},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1534244920101},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1534244920101},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1534244920101},{"_id":"public/img/patterndesign/strategy.png","hash":"69ef7631dbed5cf7bd12740ebd36b529fbb46e8e","modified":1534244920104}],"Category":[{"name":"computer","_id":"cjktlsbah0002egh32w1t0ils"},{"name":"C","_id":"cjktlsbak0007egh3o1wjfa2t"},{"name":"PHP","_id":"cjktlsbam000cegh3fmf1upcf"},{"name":"设计模式","_id":"cjktlsbax0014egh3ktfl8mb5"},{"name":"LINUX","_id":"cjktlsbb3001pegh3ei4fp7u5"},{"name":"node","_id":"cjktlsbb6001yegh34heqk2v7"},{"name":"REDIS","_id":"cjktlsbb90025egh3amxb2px6"}],"Data":[],"Page":[{"title":"about tb","date":"2016-11-04T10:35:03.000Z","_content":"\n## Dear :\n\n![fucktheking][1]\n\n\n[1]: /img/avator/fucktheking.jpg\n\n<h5 align=\"right\">Best wishes</h5>\n\n","source":"about/index.md","raw":"---\ntitle: about tb\ndate: 2016-11-04 18:35:03\n---\n\n## Dear :\n\n![fucktheking][1]\n\n\n[1]: /img/avator/fucktheking.jpg\n\n<h5 align=\"right\">Best wishes</h5>\n\n","updated":"2018-08-14T09:42:55.209Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjktlsbge004uegh3a3qc56zh","content":"<h2 id=\"Dear\"><a href=\"#Dear\" class=\"headerlink\" title=\"Dear :\"></a>Dear :</h2><p><img src=\"/img/avator/fucktheking.jpg\" alt=\"fucktheking\"></p>\n<h5 align=\"right\">Best wishes</h5>\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Dear\"><a href=\"#Dear\" class=\"headerlink\" title=\"Dear :\"></a>Dear :</h2><p><img src=\"/img/avator/fucktheking.jpg\" alt=\"fucktheking\"></p>\n<h5 align=\"right\">Best wishes</h5>\n\n"},{"title":"分类","date":"2016-11-04T10:41:25.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2016-11-04 18:41:25\ntype: \"categories\"\ncomments: false\n---\n","updated":"2018-08-14T09:42:55.210Z","path":"categories/index.html","layout":"page","_id":"cjktlsbgf004vegh34egqa4a9","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2016-11-04T10:40:09.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-11-04 18:40:09\ntype: \"tags\"\ncomments: false\n---\n","updated":"2018-08-14T09:42:55.255Z","path":"tags/index.html","layout":"page","_id":"cjktlsbgg004xegh35pxr6pr6","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"2015上半年软件设计师上午题部分试题分析","date":"2016-11-09T11:18:59.000Z","_content":"\n1.计算机中cpu对其访问速度最快的是 通用寄存器>CACHE>内存》硬盘\n\n2.机器字长为N位的二进制数可以用补码来表示个不同的有符号定点小数。\n 对正数来说，二进制的原码，反码，补码都相同。\n 负数的反码为符号位不变，其他位取反。\n 负数的补码为其反码+1\n 带符号的数：机器数的最高位表示符号\n定点数是小数点位置约定不变的数，小数点不占位置，定点数分为定点整数和定点小数\n定点整数（纯整数）：约定小数点的位置在机器数的最低位之后\n定点小数（纯小数）：约定小数点的位置在机器数的最高数值位之前（带符号数，最高数值位是在符号位之后）\n符号位占一位，符号位也有0 和1的变化，即出现正数和负数\n,8位为例：理论上有负数2^(n-1)-1 =127个、正数2^(n-1)-1=127 个再加上10000000和00000000 。共计256个。\n\n3.cache的地址映像中，发生冲突块最小的是\n  1)．直接映象\n<!-- more -->\n　　每个主存地址映像到Cache中的一个指定地址的方式，称为直接映象方式。在直接映象方式下，主存中存储单元的数据只可调入Cache中的一个位置，如果主存中另一个存储单元的数据也要调入该位置则将发生冲突。地址映像的方法一般是将主存空间按Cache的尺寸分区，每区内相同的块号映像到Cache 中相同的块位置。一般地，Cache被分为2N块，主存被分为同样大小的2M块，主存与Cache中块的对应关系可用如下映像函数表示：j = i mod 2N。式中，j是Cache中的块号，i是主存中的块号。　　\n\n　　直接映象是一种最简单的地址映像方式，它的地址变换速度快，而且不涉及其他两种映像方式中的替换策略问题。但是这种方式的块冲突概率较高，当称序往返访问两个相互冲突的块中的数据时，Cache的命中率将急剧下降，因为这时即使Cache中有其他空闲块，也因为固定的地址映像关系而无法应用。　　\n\n  2)．全相联映象　　　　\n\n　　主存中的每一个字块可映像到Cache任何一个字块位置上，这种方式称为全相联映像。这种方式只有当Cache中的块全部装满后才会出现块冲突，所以块冲突的概率低，可达到很高的Cache命中率；但实现很复杂。当访问一个块中的数据时，块地址要与Cache块表中的所有地址标记进行比较已确定是否命中。在数据块调入时存在着一个比较复杂的替换问题，即决定将数据块调入Cache中什么位置，将Cache中那一块数据调出主存。为了达到较高的速度，全部比较和替换都要用硬件实现。\n\n  3)．组相联映象　　　\n\n　　组相联映象方式是直接映象和全相联映象的一种折衷方案。这种方法将存储空间分为若干组，各组之间是直接映像，而组内各块之间则是全相联映像。它是上述两种映像方式的一般形式，如果组的大小为1，即Cache空间分为2N组，就变为直接映像；如果组的大小为Cache整个的尺寸，就变为了全相联映像。组相联方式在判断块命中及替换算法上都要比全相联方式简单，块冲突的概率比直接映像的低，其命中率也介于直接映像和全相联映像方式之间。\n\n\n  [参考](http://blog.csdn.net/kobesdu/article/details/39081189) 　\n\n\n4.计算机中的cpu终端响应时间指的是 从发出中断请求到开始进入中断处理程序，要分清中断响应过程和中断服务过程\n\n5.总线宽度为32bit，时钟频率为200MHZ,若总线上每5个小时周期传送一个32bit的字，则该总线的宽度为\n32bit*(200MHZ/5)/8bit=160MB\n总线的带宽指的是这条总线在单位时间内可以传输的数据总量，它等于总线位宽与工作频率的乘积。例如，对于64位、800MHz的前端总线，它的数据传输率就等于64bit×800MHz÷8(Byte)=6.4GB/s；32位、33MHz PCI总线的数据传输率就是32bit×33MHz÷8=132MB/s，等等，这项法则可以用于所有并行总线上面——看到这里，读者应该明白我们所说的总线带宽指的就是它的数据传输率。\n[参考](\nhttp://baike.baidu.com/link?url=AIbVrUoI9cOptbbWoJaK2gd1pQbm4OWS7BDlE9MgNQ6UsBME35eOd0S8SZBswIiP_lwaHPB8xXeJ_oa4S9a3tTGNVwr6drJmsieSPN2xETQ8E7VscDXfRz0HLGzdOBUg\n)\n\n\n6.流水线性能：采用异步并不会明显提高性能。药师加速比和效率最大化应该对流水线各级采用相同的运行时间。\n\n7.SSH，安全套接层secure shell，建立在应用层基础上\n\n8.9.系统安全 漏洞补丁，应用安全 数据库安全\n\n10.11.软件产品也是作品的一种，公民拥有的为死后50年，企业为发布后50年，公民的署名权，修改权，保护作品完整权 是永远保护的\n个人一般只有个署名权，其他的著作权都归公司。商标谁申请谁拥有，同时申请，谁先用，谁使用。专利，谁先申请谁拥有，同时那就协商去。或者抓阄。\n著作权不需要申请就拥有。\n专利同时申请的就协商，协商不成谁也不想要。\n\n\n12.13.媒体分为感觉媒体、表示媒体、表现媒体、存储媒体和传输媒体\n 感觉媒体\n感觉媒体指的是能直接作用于人们的感觉器官，从而能使人产生直接感觉的媒体。如文字、数据、声音、图形、图像等。\n在多媒体计算机技术中，我们所说的媒体一般指的是感觉媒体。\n 表示媒体\n表示媒体指的是为了传输感觉媒体而人为研究出来的媒体，借助于此种媒体，能有效地存储感觉媒体或将感觉媒体从一个地方传送到另一个地方。如语言编码、电报码、条形码等。\n 表现媒体\n表现媒体指的是用于通信中使电信号和感觉媒体之间产生转换用的媒体。如输入、输出设备，包括键盘、鼠标器、显示器、打印机等。\n 存储媒体\n存储媒体指的是用于存放表示媒体的媒体。如纸张、磁带、磁盘、光盘等。\n\n传输媒体\n传输媒体指的用于传输某种媒体的物理媒体。如双绞线、电缆、光纤等。\n\n14.\n\n15.软件工程的基本要素包括方法 工具和过程\n\n16.在概要设计阶段，选择适当的解决方案，将系统分解为若干个子系统，建立整个系统的体系结构\n\n17.18 ，关键路径算法\n\n你好，本题是考察项目的关键路径，关键路径：项目中时间最长的活动顺序，决定着可能的项目最短工期。\n本题解题时需要先生成网络图，然后找出关键路径。\n本题按照题干生成的图如下：\n\n![img][1]\n可以从图中发现ADEFH是最长的路径，也就是关键路径。\n由于ADF都是关键路径上的活动，对其进行修改就会影响关键路径，而B不是关键路径上的活动，对其进行缩短，经过B的所有路径的时长都不会比关键路径长，即不会影响项目工期\n\n19.风险的优先级通常是根据 风险暴露risk exposure 来设定\n风险暴露又称为风险曝光度，测量的是资产的整个安全性风险，他将表示实际损失的可能性与表示大量可能损失的资讯结合到单一数字评估中，风险曝光riskexposure=错误出现率 *错误造成损失（风险损失）\n\n20.程序设计语言中，局部变量的值是在运行时改变的\n\n21.算法表达式对应的树，对此二叉树进行先序，中序，后序遍历，便可以得到表达式的前缀，中缀和后缀书写形式。\n中缀形式是算术表达式的通常形式，只是没有括号。使用后缀表达式更容易求职（在计算机中）\n\n22.c程序中全局变量的存储空间在静态数据区分配\n\n23.24.25记得v是增加信号量，p是减少信号量。用pv就能选出，不用是p几s几\n\n26.访问位为0的就把他淘汰掉\n\n27.28 嵌入式系统初始化分为片级初始化，板级初始化，系统级初始化。这是按照自底向上，从硬件到软件的次序依次进行的。\n片级初始化完成嵌入式微处理器的初始化，包括设置嵌入式微处理器的核心寄存器和控制寄存器。片级初始化是一个纯硬件的过程。\n板级初始化，同时需要设置一些数据结构和参数，同时包含软件和硬件在内的初始化过程。\n系统初始化，系统分区，网络系统，文件系统等，最后将控制权交给应用程序的入口\n\n29.瀑布模型 文档驱动 系统可能不满足客户的需求\n快速原型模型 关注满足客户需求 可能导致系统设计差、效率低，难于维护\n增量模型 开发早期反馈及时，易于维护 需要开放式体系结构，可能会导致效率低下\n螺旋模型 风险驱动 风险分析人员需要有经验且经过充分训练\n\n记住螺旋模型是有风险控制的就好\n\n30.敏捷开发\nscrum【并列争球】：三个角色，四个会议，三个物件\n极限编程【xp】：交流，朴素，反馈和勇气，近螺旋式开发方法\n水晶方法srystal：提倡机动性方法，包含具有共性的核心元素，每个都含有独特的角色，过程模式，工作产品和实践七大体系特征：经常交付，反思改进，渗透式交流，个人安全，焦点，与专家用户建立方便的联系，配有自动测试，配置管理和经常集成功能的技术环境\nDSDM dynamic system development management 动态系统开发方法：以业务为核心 用户持续参与，产品经常交付，迭代增量\n\n31.软件配置管理内容：版本控制，变更控制，过程支持\n\n32.内聚和耦合。内聚是从功能性角度，描述的是模块内功能性的关系。耦合是各个模块之间互相连接的一种度量。\n耦合强弱取决于模块之间接口的复杂程度。\n模块之间关系越紧密，耦合性就强，独立性就差\n\n内容耦合：一个模块直接访问另外一个模块内部数据；一个模块多个入口，这种耦合性最强。（目前高级语言不会有这种情况，最早出现在汇编）\n公共耦合：一组模块都访问同一个全局数据结构，公共数据环境可以是全局数据结构，共享通信区，内存的公共覆盖区等\n外部耦合:一组模块都访问同一全局简单变量，而且不通过参数表传递该全局变量信息，则称为外部耦合。\n控制耦合：模块之间传递的不是数据信息，而是控制信息，如标志，开关量等，一个模块控制了另外一个模块的功能。\n标记耦合：调用模块和被调用模块之间传递的数据结构而不是简单数据，同时也称作特征耦合，其实传递的是地址。\n\n数据耦合：调用模块和被调用模块之间只是传递简单的数据项参数，相当于高级语言值传递。\n\n非直接耦合：两个模块之间没有直接关系，他们之间的联系完全通过主模块的调用来实现的，耦合度最低，模块独立性最强。\n\n内聚：偶然内聚，没有任何关系，\n逻辑内聚：调用时由传送模块参数传递\n时间内聚：把需要执行的动作组合在一起形成模块\n过程内聚：特定次数，特定关系\n通信内聚模块内各个组成部分都使用相同的数据结构或产生相同的数据结构\n顺序内聚：必须顺序执行\n功能内聚是最强内聚\n\n某模块实现两个功能，向某个数据结构区域写数据和从该区域读数据，则该模块内聚类型为 通信内聚\n\n33.正规技术评审目的\n（1）发现软件在功能、逻辑、实现上的错误；\n（2）验证软件符合它的需求规格；\n（3）确认软件符合预先定义的开发规范和标准；\n（4）保证软件在统一的模式下进行开发；\n（5）便于项目管理。\n此外，正规技术评审为新手提供软件分析、设计和实现的培训途经，后备、后续开发人员也可以通过正规技术评审熟悉他人开发的软件。\n\n34.自顶向下集成\n\n目的：从顶层控制（主控模块）开始，采用同设计顺序一样的思路对被测系统进行测试，来验证系统的稳定性。\n定义：自顶向下的集成测试就是按照系统层次结构图，以主程序模块为中心，自上而下按照深度优先或者广度优先策略，对各个模块一边组装一边进行测试。\n方法：\n①      把主控模块作为测试驱动，所有与主控模块直接相连的模块作为桩模块；\n②                      根据集成的方式（深度优先或者广度优先），逐渐使用实际模块替换相应的下层桩模块；再用桩代替他们的直接下属模块，与已通过测试的模块或子系统组装成新的子系统。\n③                      在每个模块被集成时，都必须已经通过了单元测试；\n④                      进行回归测试（重新执行以前做过的全部或部分测试），以确定集成新模块后没有引入错误；\n⑤                      从上述过程中的第二步开始重复执行，直到所有模块都已经集成到系统中为止。\n优点：\n①      在测试的过程中，可以较早地验证主要的控制和判断点。\n② 选择深度优先组合方式，可以首先实现和验证一个完整的软件功能，可先对逻辑输入的分支进行组装和测试，检查和克服潜藏的错误和缺陷，\n③      验证其功能的正确性，为此后主要分支的组装和测试提供保证；\n④      能够较早的验证功能可行性，给开发者和用户带来成功的信心；\n⑤      只有在个别情况下，才需要驱动程序（最多不超过一个），减少了测试驱动程序开发和维护的费用；\n⑥      可以和开发设计工作一起并行执行集成测试，能够灵活的适应目标环境；\n⑦      容易进行故障隔离和错误定位。\n 缺点：\n①      在测试时需要为每个模块的下层模块提供桩模块，桩模块的开发和维护费用大；\n②      底层组件的需求变更可能会影响到全局组件，需要修改整个系统的多个上层模块。\n③      要求控制模块具有比较高的可测试性；\n④      可能会导致底层模块特别是被重用的模块测试不够充分。\n 适用范围：\n①      控制结构比较清晰和稳定的应用程序；\n②      系统高层的模块接口变化的可能性比较小；\n③      产品的低层模块接口还未定义或可能会经常因需求变更等原因被修改；\n④      产品中的控制模块技术风险较大，需要尽可能提前验证；\n⑤      需要尽早看到产品的系统功能行为；\n⑥      在极限编程（Extreme Programming）中使用测试优先的开发方法。\n\n自底向上集成\n\n1) 目的：从依赖性最小的底层模块开始，按照层次结构图，逐层向上集成，验证系统的稳定性。\n2) 定义：自底向上集成是从系统层次结构图的最底层模块开始进行组装和集成测试的方式。\n3) 方法：\n①      从最底层的模块开始组装，组合成一个能够完成制定的软件子功能的构件；\n②      编制驱动程序，协调测试用例的输入与输出；\n③      测试集成后的构件；\n④      使用实际模块代替驱动程序，按程序结构向上组装测试后的构件；\n⑤      重复上面的第二步，直到系统的最顶层模块被加入到系统中为止。\n4) 优点：\n①      即使数据流并未构成有向的非环状图，生成测试数据也没有困难。\n②      可以尽早的验证底层模块的行为。<3>提高了测试效率；\n③      对实际被测模块的可测试性要求要少；\n④      减少了桩模块的工作量;\n⑤      容易对错误进行定位。\n5) 缺点\n①      直到最后一个模块加进去之后才能看到整个系统的框架；\n②      只有到测试过程的后期才能发现时序问题和资源竞争问题；\n③      驱动模块的设计工作量大;\n④      不能被及时发现高层模块设计上的错误。\n6) 适用范围\n① 底层模块接口比较稳定的产品；\n② 高层模块接口变更比较频繁的产品；\n③ 底层模块开发和单元测试工作完成较早的产品。\n\n自底向上的集成测试策略的优点 不需要编写桩程序，但是需要编写很多驱动模块\n\n\n\n35.mccabe 程序控制流程图中，节点是程序代码中最小的单元。边代表节点间的控制流，一个有e条边和n个节点的流程图f。其圈复杂度为e-f+2 ，边-点+2\n10-8+2=4\n\n36.软件可维护性是衡量软件质量的一个重要特性，受到开发文档影响，可维护性也是软件开发阶段各个时期的关键目标，可以从可理解行，可靠性，可测试性，可行性，可移植性进行度量。\n\n37.对象是封闭数据和行为的整体\n\n38.面向对象程序设计选择合适的面向对象程序设计语言，将程序组织为相互协作的对象集合，每个对象表示某个类的实例，类通过继承等关系进行组织。\n面向对象分析：主要任务是抽取和整理用户需求并建立问题域精确模型，\n面向对象设计：采用协作的对象，对象的属性和方法说明软件解决方案的一种方式，强调的是定义软件对象和这些软件对象如何协作来满足要求，延续了面向对象分析。\n面向对象实现：采用面向对象程序设计语言下hi线系统。\n面向对象测试是根据规范来说明验证系统设计的正确性。\n\n39.一个类可以通过多个重名方法而参数类型列表示不通的方法，被称为重载方法\n\n40.41.UML关系\n实现关系implementation：接口和类的实现，implements 带空心三角形的虚线来表示\n组合关系composition：整体和部分关系，并且有统一的生存期。整体不存在，那么部分也不存在。比如头和嘴的关系。\n组合关系用实心菱形。整体那边是实心菱形，部分那么是箭头。\n\n聚合关系aggregation整体和部分的关系，但是可以相互存在，就是部分可以脱离整体。比如电脑和显示器。整体那边是虚心菱形\n\n关联关系 association 一对一，多对多，自关联等，是一种结构关系，描述了一种链。链是对象之间的连接。\n泛化 generation 就是继承关系，空心三角指向父类\n\n依赖关系dependence 大多情况，依赖关系体现在某个类的方法使用另一个类的对象作为参数\n虚心箭头表示，开车和司机的关系\n\n42.43uml，统一建模语言\n用例图：描述用户需求，从用户角度描述系统功能，椭圆为某个用户，人形为角色，帮助团队以一种可视化的方式理解系统功能需求\n活动图：通过动作来组织，主要描述一种方法，机制或用例的内部行为，涉及状态 活动转移分支 并发 同步\n静态结构图：【类图】，【对象图】，【包图】，【组合结构图】...\n部署图：deployment diagram 描述系统所需的硬件构件的物理部署\n\n[参考](http://www.cnblogs.com/wangkangluo1/archive/2013/02/21/2920606.html)\n\n\n44.45.46 组合模式，属于结构型模式，表示对象的整体，结构层次\n\n47.某些设计模式会引入总是被用作参数的对象 visitor 访问者模式对象是一个多态accept的参数\n命令模式：将请求封装为一个对象，可以将不通的请求对客户进行参数化\n责任链模式：chain of responsibility 模式将多个对象的请求连成一条链，并沿着这条连传递该请求，直到有一个对象处理他为止，主要是避免请求的发送者和接受者之间的耦合关系。\n观察者模式：定义对象之间的一种一对的依赖关系，当一个对象的状态发生改变时，所有依赖他的对象都得到通知并被自动更新。\n\n48.对高级语言源程序的编译或解释的过程可以分为多个阶段，解释方式不包括 目标代码生成。解释方式是没有目标代码生成的，与编译方式在词法，语法，语义方面大体相同，但在运行时直接执行源程序或源程序的内部形式，即解释程序不产生源程序的目标程序。这是与编译程序的主要区别。如php都是分析之后，解释成opcode码，然后解释执行，可以这么说，解释程序是参与程序的运行过程的。编译就是分开的。解释的控制器在解释程序。\n\n[参考](http://www.cnblogs.com/riskyer/p/3347865.html)\n\n49.\n\n50.递归下降分析法是一种自上而下的语法分析\n\n51.若关系R（h,l,m,p）的主键为全码，则关系的主键为为HLMP\n\n52.\n\n53.遗传算法的主要基因操作是选种、交配和突变，而在进化规则、进化策略中，进化机制源于选种和突变。就适应度的角度来说遗传算法用于选择优秀的父代(优秀的父代产生优秀的子代)，而进化规则和进化策略则用于选择子代(优秀的子代才能存在)。\n\n54.55.56 自然连接是一种特殊的等值连接，要求两个关系中进行比较的分量必须是相同的属性组，并且在结果中把重复的 属性去掉。等值连接是不会去重重复属性列的。\n自然连接一定是等值连接，自然连接会把重复的属性移除。\n\n\n67.一个vlan【虚拟局域网】就是一个广播域。\n\n\n\n[1]: /img/ruankao/17-18.png\n\n","source":"_posts/2015-ruankao-am.md","raw":"---\ntitle: 2015上半年软件设计师上午题部分试题分析\ndate: 2016-11-09 19:18:59\ncategories: computer\ntags:\n - 软考\n - 软件设计师\n---\n\n1.计算机中cpu对其访问速度最快的是 通用寄存器>CACHE>内存》硬盘\n\n2.机器字长为N位的二进制数可以用补码来表示个不同的有符号定点小数。\n 对正数来说，二进制的原码，反码，补码都相同。\n 负数的反码为符号位不变，其他位取反。\n 负数的补码为其反码+1\n 带符号的数：机器数的最高位表示符号\n定点数是小数点位置约定不变的数，小数点不占位置，定点数分为定点整数和定点小数\n定点整数（纯整数）：约定小数点的位置在机器数的最低位之后\n定点小数（纯小数）：约定小数点的位置在机器数的最高数值位之前（带符号数，最高数值位是在符号位之后）\n符号位占一位，符号位也有0 和1的变化，即出现正数和负数\n,8位为例：理论上有负数2^(n-1)-1 =127个、正数2^(n-1)-1=127 个再加上10000000和00000000 。共计256个。\n\n3.cache的地址映像中，发生冲突块最小的是\n  1)．直接映象\n<!-- more -->\n　　每个主存地址映像到Cache中的一个指定地址的方式，称为直接映象方式。在直接映象方式下，主存中存储单元的数据只可调入Cache中的一个位置，如果主存中另一个存储单元的数据也要调入该位置则将发生冲突。地址映像的方法一般是将主存空间按Cache的尺寸分区，每区内相同的块号映像到Cache 中相同的块位置。一般地，Cache被分为2N块，主存被分为同样大小的2M块，主存与Cache中块的对应关系可用如下映像函数表示：j = i mod 2N。式中，j是Cache中的块号，i是主存中的块号。　　\n\n　　直接映象是一种最简单的地址映像方式，它的地址变换速度快，而且不涉及其他两种映像方式中的替换策略问题。但是这种方式的块冲突概率较高，当称序往返访问两个相互冲突的块中的数据时，Cache的命中率将急剧下降，因为这时即使Cache中有其他空闲块，也因为固定的地址映像关系而无法应用。　　\n\n  2)．全相联映象　　　　\n\n　　主存中的每一个字块可映像到Cache任何一个字块位置上，这种方式称为全相联映像。这种方式只有当Cache中的块全部装满后才会出现块冲突，所以块冲突的概率低，可达到很高的Cache命中率；但实现很复杂。当访问一个块中的数据时，块地址要与Cache块表中的所有地址标记进行比较已确定是否命中。在数据块调入时存在着一个比较复杂的替换问题，即决定将数据块调入Cache中什么位置，将Cache中那一块数据调出主存。为了达到较高的速度，全部比较和替换都要用硬件实现。\n\n  3)．组相联映象　　　\n\n　　组相联映象方式是直接映象和全相联映象的一种折衷方案。这种方法将存储空间分为若干组，各组之间是直接映像，而组内各块之间则是全相联映像。它是上述两种映像方式的一般形式，如果组的大小为1，即Cache空间分为2N组，就变为直接映像；如果组的大小为Cache整个的尺寸，就变为了全相联映像。组相联方式在判断块命中及替换算法上都要比全相联方式简单，块冲突的概率比直接映像的低，其命中率也介于直接映像和全相联映像方式之间。\n\n\n  [参考](http://blog.csdn.net/kobesdu/article/details/39081189) 　\n\n\n4.计算机中的cpu终端响应时间指的是 从发出中断请求到开始进入中断处理程序，要分清中断响应过程和中断服务过程\n\n5.总线宽度为32bit，时钟频率为200MHZ,若总线上每5个小时周期传送一个32bit的字，则该总线的宽度为\n32bit*(200MHZ/5)/8bit=160MB\n总线的带宽指的是这条总线在单位时间内可以传输的数据总量，它等于总线位宽与工作频率的乘积。例如，对于64位、800MHz的前端总线，它的数据传输率就等于64bit×800MHz÷8(Byte)=6.4GB/s；32位、33MHz PCI总线的数据传输率就是32bit×33MHz÷8=132MB/s，等等，这项法则可以用于所有并行总线上面——看到这里，读者应该明白我们所说的总线带宽指的就是它的数据传输率。\n[参考](\nhttp://baike.baidu.com/link?url=AIbVrUoI9cOptbbWoJaK2gd1pQbm4OWS7BDlE9MgNQ6UsBME35eOd0S8SZBswIiP_lwaHPB8xXeJ_oa4S9a3tTGNVwr6drJmsieSPN2xETQ8E7VscDXfRz0HLGzdOBUg\n)\n\n\n6.流水线性能：采用异步并不会明显提高性能。药师加速比和效率最大化应该对流水线各级采用相同的运行时间。\n\n7.SSH，安全套接层secure shell，建立在应用层基础上\n\n8.9.系统安全 漏洞补丁，应用安全 数据库安全\n\n10.11.软件产品也是作品的一种，公民拥有的为死后50年，企业为发布后50年，公民的署名权，修改权，保护作品完整权 是永远保护的\n个人一般只有个署名权，其他的著作权都归公司。商标谁申请谁拥有，同时申请，谁先用，谁使用。专利，谁先申请谁拥有，同时那就协商去。或者抓阄。\n著作权不需要申请就拥有。\n专利同时申请的就协商，协商不成谁也不想要。\n\n\n12.13.媒体分为感觉媒体、表示媒体、表现媒体、存储媒体和传输媒体\n 感觉媒体\n感觉媒体指的是能直接作用于人们的感觉器官，从而能使人产生直接感觉的媒体。如文字、数据、声音、图形、图像等。\n在多媒体计算机技术中，我们所说的媒体一般指的是感觉媒体。\n 表示媒体\n表示媒体指的是为了传输感觉媒体而人为研究出来的媒体，借助于此种媒体，能有效地存储感觉媒体或将感觉媒体从一个地方传送到另一个地方。如语言编码、电报码、条形码等。\n 表现媒体\n表现媒体指的是用于通信中使电信号和感觉媒体之间产生转换用的媒体。如输入、输出设备，包括键盘、鼠标器、显示器、打印机等。\n 存储媒体\n存储媒体指的是用于存放表示媒体的媒体。如纸张、磁带、磁盘、光盘等。\n\n传输媒体\n传输媒体指的用于传输某种媒体的物理媒体。如双绞线、电缆、光纤等。\n\n14.\n\n15.软件工程的基本要素包括方法 工具和过程\n\n16.在概要设计阶段，选择适当的解决方案，将系统分解为若干个子系统，建立整个系统的体系结构\n\n17.18 ，关键路径算法\n\n你好，本题是考察项目的关键路径，关键路径：项目中时间最长的活动顺序，决定着可能的项目最短工期。\n本题解题时需要先生成网络图，然后找出关键路径。\n本题按照题干生成的图如下：\n\n![img][1]\n可以从图中发现ADEFH是最长的路径，也就是关键路径。\n由于ADF都是关键路径上的活动，对其进行修改就会影响关键路径，而B不是关键路径上的活动，对其进行缩短，经过B的所有路径的时长都不会比关键路径长，即不会影响项目工期\n\n19.风险的优先级通常是根据 风险暴露risk exposure 来设定\n风险暴露又称为风险曝光度，测量的是资产的整个安全性风险，他将表示实际损失的可能性与表示大量可能损失的资讯结合到单一数字评估中，风险曝光riskexposure=错误出现率 *错误造成损失（风险损失）\n\n20.程序设计语言中，局部变量的值是在运行时改变的\n\n21.算法表达式对应的树，对此二叉树进行先序，中序，后序遍历，便可以得到表达式的前缀，中缀和后缀书写形式。\n中缀形式是算术表达式的通常形式，只是没有括号。使用后缀表达式更容易求职（在计算机中）\n\n22.c程序中全局变量的存储空间在静态数据区分配\n\n23.24.25记得v是增加信号量，p是减少信号量。用pv就能选出，不用是p几s几\n\n26.访问位为0的就把他淘汰掉\n\n27.28 嵌入式系统初始化分为片级初始化，板级初始化，系统级初始化。这是按照自底向上，从硬件到软件的次序依次进行的。\n片级初始化完成嵌入式微处理器的初始化，包括设置嵌入式微处理器的核心寄存器和控制寄存器。片级初始化是一个纯硬件的过程。\n板级初始化，同时需要设置一些数据结构和参数，同时包含软件和硬件在内的初始化过程。\n系统初始化，系统分区，网络系统，文件系统等，最后将控制权交给应用程序的入口\n\n29.瀑布模型 文档驱动 系统可能不满足客户的需求\n快速原型模型 关注满足客户需求 可能导致系统设计差、效率低，难于维护\n增量模型 开发早期反馈及时，易于维护 需要开放式体系结构，可能会导致效率低下\n螺旋模型 风险驱动 风险分析人员需要有经验且经过充分训练\n\n记住螺旋模型是有风险控制的就好\n\n30.敏捷开发\nscrum【并列争球】：三个角色，四个会议，三个物件\n极限编程【xp】：交流，朴素，反馈和勇气，近螺旋式开发方法\n水晶方法srystal：提倡机动性方法，包含具有共性的核心元素，每个都含有独特的角色，过程模式，工作产品和实践七大体系特征：经常交付，反思改进，渗透式交流，个人安全，焦点，与专家用户建立方便的联系，配有自动测试，配置管理和经常集成功能的技术环境\nDSDM dynamic system development management 动态系统开发方法：以业务为核心 用户持续参与，产品经常交付，迭代增量\n\n31.软件配置管理内容：版本控制，变更控制，过程支持\n\n32.内聚和耦合。内聚是从功能性角度，描述的是模块内功能性的关系。耦合是各个模块之间互相连接的一种度量。\n耦合强弱取决于模块之间接口的复杂程度。\n模块之间关系越紧密，耦合性就强，独立性就差\n\n内容耦合：一个模块直接访问另外一个模块内部数据；一个模块多个入口，这种耦合性最强。（目前高级语言不会有这种情况，最早出现在汇编）\n公共耦合：一组模块都访问同一个全局数据结构，公共数据环境可以是全局数据结构，共享通信区，内存的公共覆盖区等\n外部耦合:一组模块都访问同一全局简单变量，而且不通过参数表传递该全局变量信息，则称为外部耦合。\n控制耦合：模块之间传递的不是数据信息，而是控制信息，如标志，开关量等，一个模块控制了另外一个模块的功能。\n标记耦合：调用模块和被调用模块之间传递的数据结构而不是简单数据，同时也称作特征耦合，其实传递的是地址。\n\n数据耦合：调用模块和被调用模块之间只是传递简单的数据项参数，相当于高级语言值传递。\n\n非直接耦合：两个模块之间没有直接关系，他们之间的联系完全通过主模块的调用来实现的，耦合度最低，模块独立性最强。\n\n内聚：偶然内聚，没有任何关系，\n逻辑内聚：调用时由传送模块参数传递\n时间内聚：把需要执行的动作组合在一起形成模块\n过程内聚：特定次数，特定关系\n通信内聚模块内各个组成部分都使用相同的数据结构或产生相同的数据结构\n顺序内聚：必须顺序执行\n功能内聚是最强内聚\n\n某模块实现两个功能，向某个数据结构区域写数据和从该区域读数据，则该模块内聚类型为 通信内聚\n\n33.正规技术评审目的\n（1）发现软件在功能、逻辑、实现上的错误；\n（2）验证软件符合它的需求规格；\n（3）确认软件符合预先定义的开发规范和标准；\n（4）保证软件在统一的模式下进行开发；\n（5）便于项目管理。\n此外，正规技术评审为新手提供软件分析、设计和实现的培训途经，后备、后续开发人员也可以通过正规技术评审熟悉他人开发的软件。\n\n34.自顶向下集成\n\n目的：从顶层控制（主控模块）开始，采用同设计顺序一样的思路对被测系统进行测试，来验证系统的稳定性。\n定义：自顶向下的集成测试就是按照系统层次结构图，以主程序模块为中心，自上而下按照深度优先或者广度优先策略，对各个模块一边组装一边进行测试。\n方法：\n①      把主控模块作为测试驱动，所有与主控模块直接相连的模块作为桩模块；\n②                      根据集成的方式（深度优先或者广度优先），逐渐使用实际模块替换相应的下层桩模块；再用桩代替他们的直接下属模块，与已通过测试的模块或子系统组装成新的子系统。\n③                      在每个模块被集成时，都必须已经通过了单元测试；\n④                      进行回归测试（重新执行以前做过的全部或部分测试），以确定集成新模块后没有引入错误；\n⑤                      从上述过程中的第二步开始重复执行，直到所有模块都已经集成到系统中为止。\n优点：\n①      在测试的过程中，可以较早地验证主要的控制和判断点。\n② 选择深度优先组合方式，可以首先实现和验证一个完整的软件功能，可先对逻辑输入的分支进行组装和测试，检查和克服潜藏的错误和缺陷，\n③      验证其功能的正确性，为此后主要分支的组装和测试提供保证；\n④      能够较早的验证功能可行性，给开发者和用户带来成功的信心；\n⑤      只有在个别情况下，才需要驱动程序（最多不超过一个），减少了测试驱动程序开发和维护的费用；\n⑥      可以和开发设计工作一起并行执行集成测试，能够灵活的适应目标环境；\n⑦      容易进行故障隔离和错误定位。\n 缺点：\n①      在测试时需要为每个模块的下层模块提供桩模块，桩模块的开发和维护费用大；\n②      底层组件的需求变更可能会影响到全局组件，需要修改整个系统的多个上层模块。\n③      要求控制模块具有比较高的可测试性；\n④      可能会导致底层模块特别是被重用的模块测试不够充分。\n 适用范围：\n①      控制结构比较清晰和稳定的应用程序；\n②      系统高层的模块接口变化的可能性比较小；\n③      产品的低层模块接口还未定义或可能会经常因需求变更等原因被修改；\n④      产品中的控制模块技术风险较大，需要尽可能提前验证；\n⑤      需要尽早看到产品的系统功能行为；\n⑥      在极限编程（Extreme Programming）中使用测试优先的开发方法。\n\n自底向上集成\n\n1) 目的：从依赖性最小的底层模块开始，按照层次结构图，逐层向上集成，验证系统的稳定性。\n2) 定义：自底向上集成是从系统层次结构图的最底层模块开始进行组装和集成测试的方式。\n3) 方法：\n①      从最底层的模块开始组装，组合成一个能够完成制定的软件子功能的构件；\n②      编制驱动程序，协调测试用例的输入与输出；\n③      测试集成后的构件；\n④      使用实际模块代替驱动程序，按程序结构向上组装测试后的构件；\n⑤      重复上面的第二步，直到系统的最顶层模块被加入到系统中为止。\n4) 优点：\n①      即使数据流并未构成有向的非环状图，生成测试数据也没有困难。\n②      可以尽早的验证底层模块的行为。<3>提高了测试效率；\n③      对实际被测模块的可测试性要求要少；\n④      减少了桩模块的工作量;\n⑤      容易对错误进行定位。\n5) 缺点\n①      直到最后一个模块加进去之后才能看到整个系统的框架；\n②      只有到测试过程的后期才能发现时序问题和资源竞争问题；\n③      驱动模块的设计工作量大;\n④      不能被及时发现高层模块设计上的错误。\n6) 适用范围\n① 底层模块接口比较稳定的产品；\n② 高层模块接口变更比较频繁的产品；\n③ 底层模块开发和单元测试工作完成较早的产品。\n\n自底向上的集成测试策略的优点 不需要编写桩程序，但是需要编写很多驱动模块\n\n\n\n35.mccabe 程序控制流程图中，节点是程序代码中最小的单元。边代表节点间的控制流，一个有e条边和n个节点的流程图f。其圈复杂度为e-f+2 ，边-点+2\n10-8+2=4\n\n36.软件可维护性是衡量软件质量的一个重要特性，受到开发文档影响，可维护性也是软件开发阶段各个时期的关键目标，可以从可理解行，可靠性，可测试性，可行性，可移植性进行度量。\n\n37.对象是封闭数据和行为的整体\n\n38.面向对象程序设计选择合适的面向对象程序设计语言，将程序组织为相互协作的对象集合，每个对象表示某个类的实例，类通过继承等关系进行组织。\n面向对象分析：主要任务是抽取和整理用户需求并建立问题域精确模型，\n面向对象设计：采用协作的对象，对象的属性和方法说明软件解决方案的一种方式，强调的是定义软件对象和这些软件对象如何协作来满足要求，延续了面向对象分析。\n面向对象实现：采用面向对象程序设计语言下hi线系统。\n面向对象测试是根据规范来说明验证系统设计的正确性。\n\n39.一个类可以通过多个重名方法而参数类型列表示不通的方法，被称为重载方法\n\n40.41.UML关系\n实现关系implementation：接口和类的实现，implements 带空心三角形的虚线来表示\n组合关系composition：整体和部分关系，并且有统一的生存期。整体不存在，那么部分也不存在。比如头和嘴的关系。\n组合关系用实心菱形。整体那边是实心菱形，部分那么是箭头。\n\n聚合关系aggregation整体和部分的关系，但是可以相互存在，就是部分可以脱离整体。比如电脑和显示器。整体那边是虚心菱形\n\n关联关系 association 一对一，多对多，自关联等，是一种结构关系，描述了一种链。链是对象之间的连接。\n泛化 generation 就是继承关系，空心三角指向父类\n\n依赖关系dependence 大多情况，依赖关系体现在某个类的方法使用另一个类的对象作为参数\n虚心箭头表示，开车和司机的关系\n\n42.43uml，统一建模语言\n用例图：描述用户需求，从用户角度描述系统功能，椭圆为某个用户，人形为角色，帮助团队以一种可视化的方式理解系统功能需求\n活动图：通过动作来组织，主要描述一种方法，机制或用例的内部行为，涉及状态 活动转移分支 并发 同步\n静态结构图：【类图】，【对象图】，【包图】，【组合结构图】...\n部署图：deployment diagram 描述系统所需的硬件构件的物理部署\n\n[参考](http://www.cnblogs.com/wangkangluo1/archive/2013/02/21/2920606.html)\n\n\n44.45.46 组合模式，属于结构型模式，表示对象的整体，结构层次\n\n47.某些设计模式会引入总是被用作参数的对象 visitor 访问者模式对象是一个多态accept的参数\n命令模式：将请求封装为一个对象，可以将不通的请求对客户进行参数化\n责任链模式：chain of responsibility 模式将多个对象的请求连成一条链，并沿着这条连传递该请求，直到有一个对象处理他为止，主要是避免请求的发送者和接受者之间的耦合关系。\n观察者模式：定义对象之间的一种一对的依赖关系，当一个对象的状态发生改变时，所有依赖他的对象都得到通知并被自动更新。\n\n48.对高级语言源程序的编译或解释的过程可以分为多个阶段，解释方式不包括 目标代码生成。解释方式是没有目标代码生成的，与编译方式在词法，语法，语义方面大体相同，但在运行时直接执行源程序或源程序的内部形式，即解释程序不产生源程序的目标程序。这是与编译程序的主要区别。如php都是分析之后，解释成opcode码，然后解释执行，可以这么说，解释程序是参与程序的运行过程的。编译就是分开的。解释的控制器在解释程序。\n\n[参考](http://www.cnblogs.com/riskyer/p/3347865.html)\n\n49.\n\n50.递归下降分析法是一种自上而下的语法分析\n\n51.若关系R（h,l,m,p）的主键为全码，则关系的主键为为HLMP\n\n52.\n\n53.遗传算法的主要基因操作是选种、交配和突变，而在进化规则、进化策略中，进化机制源于选种和突变。就适应度的角度来说遗传算法用于选择优秀的父代(优秀的父代产生优秀的子代)，而进化规则和进化策略则用于选择子代(优秀的子代才能存在)。\n\n54.55.56 自然连接是一种特殊的等值连接，要求两个关系中进行比较的分量必须是相同的属性组，并且在结果中把重复的 属性去掉。等值连接是不会去重重复属性列的。\n自然连接一定是等值连接，自然连接会把重复的属性移除。\n\n\n67.一个vlan【虚拟局域网】就是一个广播域。\n\n\n\n[1]: /img/ruankao/17-18.png\n\n","slug":"2015-ruankao-am","published":1,"updated":"2018-08-14T09:42:55.160Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjktlsbac0000egh30kwf8bhp","content":"<p>1.计算机中cpu对其访问速度最快的是 通用寄存器&gt;CACHE&gt;内存》硬盘</p>\n<p>2.机器字长为N位的二进制数可以用补码来表示个不同的有符号定点小数。<br> 对正数来说，二进制的原码，反码，补码都相同。<br> 负数的反码为符号位不变，其他位取反。<br> 负数的补码为其反码+1<br> 带符号的数：机器数的最高位表示符号<br>定点数是小数点位置约定不变的数，小数点不占位置，定点数分为定点整数和定点小数<br>定点整数（纯整数）：约定小数点的位置在机器数的最低位之后<br>定点小数（纯小数）：约定小数点的位置在机器数的最高数值位之前（带符号数，最高数值位是在符号位之后）<br>符号位占一位，符号位也有0 和1的变化，即出现正数和负数<br>,8位为例：理论上有负数2^(n-1)-1 =127个、正数2^(n-1)-1=127 个再加上10000000和00000000 。共计256个。</p>\n<p>3.cache的地址映像中，发生冲突块最小的是<br>  1)．直接映象<br><a id=\"more\"></a><br>　　每个主存地址映像到Cache中的一个指定地址的方式，称为直接映象方式。在直接映象方式下，主存中存储单元的数据只可调入Cache中的一个位置，如果主存中另一个存储单元的数据也要调入该位置则将发生冲突。地址映像的方法一般是将主存空间按Cache的尺寸分区，每区内相同的块号映像到Cache 中相同的块位置。一般地，Cache被分为2N块，主存被分为同样大小的2M块，主存与Cache中块的对应关系可用如下映像函数表示：j = i mod 2N。式中，j是Cache中的块号，i是主存中的块号。　　</p>\n<p>　　直接映象是一种最简单的地址映像方式，它的地址变换速度快，而且不涉及其他两种映像方式中的替换策略问题。但是这种方式的块冲突概率较高，当称序往返访问两个相互冲突的块中的数据时，Cache的命中率将急剧下降，因为这时即使Cache中有其他空闲块，也因为固定的地址映像关系而无法应用。　　</p>\n<p>  2)．全相联映象　　　　</p>\n<p>　　主存中的每一个字块可映像到Cache任何一个字块位置上，这种方式称为全相联映像。这种方式只有当Cache中的块全部装满后才会出现块冲突，所以块冲突的概率低，可达到很高的Cache命中率；但实现很复杂。当访问一个块中的数据时，块地址要与Cache块表中的所有地址标记进行比较已确定是否命中。在数据块调入时存在着一个比较复杂的替换问题，即决定将数据块调入Cache中什么位置，将Cache中那一块数据调出主存。为了达到较高的速度，全部比较和替换都要用硬件实现。</p>\n<p>  3)．组相联映象　　　</p>\n<p>　　组相联映象方式是直接映象和全相联映象的一种折衷方案。这种方法将存储空间分为若干组，各组之间是直接映像，而组内各块之间则是全相联映像。它是上述两种映像方式的一般形式，如果组的大小为1，即Cache空间分为2N组，就变为直接映像；如果组的大小为Cache整个的尺寸，就变为了全相联映像。组相联方式在判断块命中及替换算法上都要比全相联方式简单，块冲突的概率比直接映像的低，其命中率也介于直接映像和全相联映像方式之间。</p>\n<p>  <a href=\"http://blog.csdn.net/kobesdu/article/details/39081189\" target=\"_blank\" rel=\"external\">参考</a> 　</p>\n<p>4.计算机中的cpu终端响应时间指的是 从发出中断请求到开始进入中断处理程序，要分清中断响应过程和中断服务过程</p>\n<p>5.总线宽度为32bit，时钟频率为200MHZ,若总线上每5个小时周期传送一个32bit的字，则该总线的宽度为<br>32bit*(200MHZ/5)/8bit=160MB<br>总线的带宽指的是这条总线在单位时间内可以传输的数据总量，它等于总线位宽与工作频率的乘积。例如，对于64位、800MHz的前端总线，它的数据传输率就等于64bit×800MHz÷8(Byte)=6.4GB/s；32位、33MHz PCI总线的数据传输率就是32bit×33MHz÷8=132MB/s，等等，这项法则可以用于所有并行总线上面——看到这里，读者应该明白我们所说的总线带宽指的就是它的数据传输率。<br><a href=\"http://baike.baidu.com/link?url=AIbVrUoI9cOptbbWoJaK2gd1pQbm4OWS7BDlE9MgNQ6UsBME35eOd0S8SZBswIiP_lwaHPB8xXeJ_oa4S9a3tTGNVwr6drJmsieSPN2xETQ8E7VscDXfRz0HLGzdOBUg\" target=\"_blank\" rel=\"external\">参考</a></p>\n<p>6.流水线性能：采用异步并不会明显提高性能。药师加速比和效率最大化应该对流水线各级采用相同的运行时间。</p>\n<p>7.SSH，安全套接层secure shell，建立在应用层基础上</p>\n<p>8.9.系统安全 漏洞补丁，应用安全 数据库安全</p>\n<p>10.11.软件产品也是作品的一种，公民拥有的为死后50年，企业为发布后50年，公民的署名权，修改权，保护作品完整权 是永远保护的<br>个人一般只有个署名权，其他的著作权都归公司。商标谁申请谁拥有，同时申请，谁先用，谁使用。专利，谁先申请谁拥有，同时那就协商去。或者抓阄。<br>著作权不需要申请就拥有。<br>专利同时申请的就协商，协商不成谁也不想要。</p>\n<p>12.13.媒体分为感觉媒体、表示媒体、表现媒体、存储媒体和传输媒体<br> 感觉媒体<br>感觉媒体指的是能直接作用于人们的感觉器官，从而能使人产生直接感觉的媒体。如文字、数据、声音、图形、图像等。<br>在多媒体计算机技术中，我们所说的媒体一般指的是感觉媒体。<br> 表示媒体<br>表示媒体指的是为了传输感觉媒体而人为研究出来的媒体，借助于此种媒体，能有效地存储感觉媒体或将感觉媒体从一个地方传送到另一个地方。如语言编码、电报码、条形码等。<br> 表现媒体<br>表现媒体指的是用于通信中使电信号和感觉媒体之间产生转换用的媒体。如输入、输出设备，包括键盘、鼠标器、显示器、打印机等。<br> 存储媒体<br>存储媒体指的是用于存放表示媒体的媒体。如纸张、磁带、磁盘、光盘等。</p>\n<p>传输媒体<br>传输媒体指的用于传输某种媒体的物理媒体。如双绞线、电缆、光纤等。</p>\n<p>14.</p>\n<p>15.软件工程的基本要素包括方法 工具和过程</p>\n<p>16.在概要设计阶段，选择适当的解决方案，将系统分解为若干个子系统，建立整个系统的体系结构</p>\n<p>17.18 ，关键路径算法</p>\n<p>你好，本题是考察项目的关键路径，关键路径：项目中时间最长的活动顺序，决定着可能的项目最短工期。<br>本题解题时需要先生成网络图，然后找出关键路径。<br>本题按照题干生成的图如下：</p>\n<p><img src=\"/img/ruankao/17-18.png\" alt=\"img\"><br>可以从图中发现ADEFH是最长的路径，也就是关键路径。<br>由于ADF都是关键路径上的活动，对其进行修改就会影响关键路径，而B不是关键路径上的活动，对其进行缩短，经过B的所有路径的时长都不会比关键路径长，即不会影响项目工期</p>\n<p>19.风险的优先级通常是根据 风险暴露risk exposure 来设定<br>风险暴露又称为风险曝光度，测量的是资产的整个安全性风险，他将表示实际损失的可能性与表示大量可能损失的资讯结合到单一数字评估中，风险曝光riskexposure=错误出现率 *错误造成损失（风险损失）</p>\n<p>20.程序设计语言中，局部变量的值是在运行时改变的</p>\n<p>21.算法表达式对应的树，对此二叉树进行先序，中序，后序遍历，便可以得到表达式的前缀，中缀和后缀书写形式。<br>中缀形式是算术表达式的通常形式，只是没有括号。使用后缀表达式更容易求职（在计算机中）</p>\n<p>22.c程序中全局变量的存储空间在静态数据区分配</p>\n<p>23.24.25记得v是增加信号量，p是减少信号量。用pv就能选出，不用是p几s几</p>\n<p>26.访问位为0的就把他淘汰掉</p>\n<p>27.28 嵌入式系统初始化分为片级初始化，板级初始化，系统级初始化。这是按照自底向上，从硬件到软件的次序依次进行的。<br>片级初始化完成嵌入式微处理器的初始化，包括设置嵌入式微处理器的核心寄存器和控制寄存器。片级初始化是一个纯硬件的过程。<br>板级初始化，同时需要设置一些数据结构和参数，同时包含软件和硬件在内的初始化过程。<br>系统初始化，系统分区，网络系统，文件系统等，最后将控制权交给应用程序的入口</p>\n<p>29.瀑布模型 文档驱动 系统可能不满足客户的需求<br>快速原型模型 关注满足客户需求 可能导致系统设计差、效率低，难于维护<br>增量模型 开发早期反馈及时，易于维护 需要开放式体系结构，可能会导致效率低下<br>螺旋模型 风险驱动 风险分析人员需要有经验且经过充分训练</p>\n<p>记住螺旋模型是有风险控制的就好</p>\n<p>30.敏捷开发<br>scrum【并列争球】：三个角色，四个会议，三个物件<br>极限编程【xp】：交流，朴素，反馈和勇气，近螺旋式开发方法<br>水晶方法srystal：提倡机动性方法，包含具有共性的核心元素，每个都含有独特的角色，过程模式，工作产品和实践七大体系特征：经常交付，反思改进，渗透式交流，个人安全，焦点，与专家用户建立方便的联系，配有自动测试，配置管理和经常集成功能的技术环境<br>DSDM dynamic system development management 动态系统开发方法：以业务为核心 用户持续参与，产品经常交付，迭代增量</p>\n<p>31.软件配置管理内容：版本控制，变更控制，过程支持</p>\n<p>32.内聚和耦合。内聚是从功能性角度，描述的是模块内功能性的关系。耦合是各个模块之间互相连接的一种度量。<br>耦合强弱取决于模块之间接口的复杂程度。<br>模块之间关系越紧密，耦合性就强，独立性就差</p>\n<p>内容耦合：一个模块直接访问另外一个模块内部数据；一个模块多个入口，这种耦合性最强。（目前高级语言不会有这种情况，最早出现在汇编）<br>公共耦合：一组模块都访问同一个全局数据结构，公共数据环境可以是全局数据结构，共享通信区，内存的公共覆盖区等<br>外部耦合:一组模块都访问同一全局简单变量，而且不通过参数表传递该全局变量信息，则称为外部耦合。<br>控制耦合：模块之间传递的不是数据信息，而是控制信息，如标志，开关量等，一个模块控制了另外一个模块的功能。<br>标记耦合：调用模块和被调用模块之间传递的数据结构而不是简单数据，同时也称作特征耦合，其实传递的是地址。</p>\n<p>数据耦合：调用模块和被调用模块之间只是传递简单的数据项参数，相当于高级语言值传递。</p>\n<p>非直接耦合：两个模块之间没有直接关系，他们之间的联系完全通过主模块的调用来实现的，耦合度最低，模块独立性最强。</p>\n<p>内聚：偶然内聚，没有任何关系，<br>逻辑内聚：调用时由传送模块参数传递<br>时间内聚：把需要执行的动作组合在一起形成模块<br>过程内聚：特定次数，特定关系<br>通信内聚模块内各个组成部分都使用相同的数据结构或产生相同的数据结构<br>顺序内聚：必须顺序执行<br>功能内聚是最强内聚</p>\n<p>某模块实现两个功能，向某个数据结构区域写数据和从该区域读数据，则该模块内聚类型为 通信内聚</p>\n<p>33.正规技术评审目的<br>（1）发现软件在功能、逻辑、实现上的错误；<br>（2）验证软件符合它的需求规格；<br>（3）确认软件符合预先定义的开发规范和标准；<br>（4）保证软件在统一的模式下进行开发；<br>（5）便于项目管理。<br>此外，正规技术评审为新手提供软件分析、设计和实现的培训途经，后备、后续开发人员也可以通过正规技术评审熟悉他人开发的软件。</p>\n<p>34.自顶向下集成</p>\n<p>目的：从顶层控制（主控模块）开始，采用同设计顺序一样的思路对被测系统进行测试，来验证系统的稳定性。<br>定义：自顶向下的集成测试就是按照系统层次结构图，以主程序模块为中心，自上而下按照深度优先或者广度优先策略，对各个模块一边组装一边进行测试。<br>方法：<br>①      把主控模块作为测试驱动，所有与主控模块直接相连的模块作为桩模块；<br>②                      根据集成的方式（深度优先或者广度优先），逐渐使用实际模块替换相应的下层桩模块；再用桩代替他们的直接下属模块，与已通过测试的模块或子系统组装成新的子系统。<br>③                      在每个模块被集成时，都必须已经通过了单元测试；<br>④                      进行回归测试（重新执行以前做过的全部或部分测试），以确定集成新模块后没有引入错误；<br>⑤                      从上述过程中的第二步开始重复执行，直到所有模块都已经集成到系统中为止。<br>优点：<br>①      在测试的过程中，可以较早地验证主要的控制和判断点。<br>② 选择深度优先组合方式，可以首先实现和验证一个完整的软件功能，可先对逻辑输入的分支进行组装和测试，检查和克服潜藏的错误和缺陷，<br>③      验证其功能的正确性，为此后主要分支的组装和测试提供保证；<br>④      能够较早的验证功能可行性，给开发者和用户带来成功的信心；<br>⑤      只有在个别情况下，才需要驱动程序（最多不超过一个），减少了测试驱动程序开发和维护的费用；<br>⑥      可以和开发设计工作一起并行执行集成测试，能够灵活的适应目标环境；<br>⑦      容易进行故障隔离和错误定位。<br> 缺点：<br>①      在测试时需要为每个模块的下层模块提供桩模块，桩模块的开发和维护费用大；<br>②      底层组件的需求变更可能会影响到全局组件，需要修改整个系统的多个上层模块。<br>③      要求控制模块具有比较高的可测试性；<br>④      可能会导致底层模块特别是被重用的模块测试不够充分。<br> 适用范围：<br>①      控制结构比较清晰和稳定的应用程序；<br>②      系统高层的模块接口变化的可能性比较小；<br>③      产品的低层模块接口还未定义或可能会经常因需求变更等原因被修改；<br>④      产品中的控制模块技术风险较大，需要尽可能提前验证；<br>⑤      需要尽早看到产品的系统功能行为；<br>⑥      在极限编程（Extreme Programming）中使用测试优先的开发方法。</p>\n<p>自底向上集成</p>\n<p>1) 目的：从依赖性最小的底层模块开始，按照层次结构图，逐层向上集成，验证系统的稳定性。<br>2) 定义：自底向上集成是从系统层次结构图的最底层模块开始进行组装和集成测试的方式。<br>3) 方法：<br>①      从最底层的模块开始组装，组合成一个能够完成制定的软件子功能的构件；<br>②      编制驱动程序，协调测试用例的输入与输出；<br>③      测试集成后的构件；<br>④      使用实际模块代替驱动程序，按程序结构向上组装测试后的构件；<br>⑤      重复上面的第二步，直到系统的最顶层模块被加入到系统中为止。<br>4) 优点：<br>①      即使数据流并未构成有向的非环状图，生成测试数据也没有困难。<br>②      可以尽早的验证底层模块的行为。<3>提高了测试效率；<br>③      对实际被测模块的可测试性要求要少；<br>④      减少了桩模块的工作量;<br>⑤      容易对错误进行定位。<br>5) 缺点<br>①      直到最后一个模块加进去之后才能看到整个系统的框架；<br>②      只有到测试过程的后期才能发现时序问题和资源竞争问题；<br>③      驱动模块的设计工作量大;<br>④      不能被及时发现高层模块设计上的错误。<br>6) 适用范围<br>① 底层模块接口比较稳定的产品；<br>② 高层模块接口变更比较频繁的产品；<br>③ 底层模块开发和单元测试工作完成较早的产品。</3></p>\n<p>自底向上的集成测试策略的优点 不需要编写桩程序，但是需要编写很多驱动模块</p>\n<p>35.mccabe 程序控制流程图中，节点是程序代码中最小的单元。边代表节点间的控制流，一个有e条边和n个节点的流程图f。其圈复杂度为e-f+2 ，边-点+2<br>10-8+2=4</p>\n<p>36.软件可维护性是衡量软件质量的一个重要特性，受到开发文档影响，可维护性也是软件开发阶段各个时期的关键目标，可以从可理解行，可靠性，可测试性，可行性，可移植性进行度量。</p>\n<p>37.对象是封闭数据和行为的整体</p>\n<p>38.面向对象程序设计选择合适的面向对象程序设计语言，将程序组织为相互协作的对象集合，每个对象表示某个类的实例，类通过继承等关系进行组织。<br>面向对象分析：主要任务是抽取和整理用户需求并建立问题域精确模型，<br>面向对象设计：采用协作的对象，对象的属性和方法说明软件解决方案的一种方式，强调的是定义软件对象和这些软件对象如何协作来满足要求，延续了面向对象分析。<br>面向对象实现：采用面向对象程序设计语言下hi线系统。<br>面向对象测试是根据规范来说明验证系统设计的正确性。</p>\n<p>39.一个类可以通过多个重名方法而参数类型列表示不通的方法，被称为重载方法</p>\n<p>40.41.UML关系<br>实现关系implementation：接口和类的实现，implements 带空心三角形的虚线来表示<br>组合关系composition：整体和部分关系，并且有统一的生存期。整体不存在，那么部分也不存在。比如头和嘴的关系。<br>组合关系用实心菱形。整体那边是实心菱形，部分那么是箭头。</p>\n<p>聚合关系aggregation整体和部分的关系，但是可以相互存在，就是部分可以脱离整体。比如电脑和显示器。整体那边是虚心菱形</p>\n<p>关联关系 association 一对一，多对多，自关联等，是一种结构关系，描述了一种链。链是对象之间的连接。<br>泛化 generation 就是继承关系，空心三角指向父类</p>\n<p>依赖关系dependence 大多情况，依赖关系体现在某个类的方法使用另一个类的对象作为参数<br>虚心箭头表示，开车和司机的关系</p>\n<p>42.43uml，统一建模语言<br>用例图：描述用户需求，从用户角度描述系统功能，椭圆为某个用户，人形为角色，帮助团队以一种可视化的方式理解系统功能需求<br>活动图：通过动作来组织，主要描述一种方法，机制或用例的内部行为，涉及状态 活动转移分支 并发 同步<br>静态结构图：【类图】，【对象图】，【包图】，【组合结构图】…<br>部署图：deployment diagram 描述系统所需的硬件构件的物理部署</p>\n<p><a href=\"http://www.cnblogs.com/wangkangluo1/archive/2013/02/21/2920606.html\" target=\"_blank\" rel=\"external\">参考</a></p>\n<p>44.45.46 组合模式，属于结构型模式，表示对象的整体，结构层次</p>\n<p>47.某些设计模式会引入总是被用作参数的对象 visitor 访问者模式对象是一个多态accept的参数<br>命令模式：将请求封装为一个对象，可以将不通的请求对客户进行参数化<br>责任链模式：chain of responsibility 模式将多个对象的请求连成一条链，并沿着这条连传递该请求，直到有一个对象处理他为止，主要是避免请求的发送者和接受者之间的耦合关系。<br>观察者模式：定义对象之间的一种一对的依赖关系，当一个对象的状态发生改变时，所有依赖他的对象都得到通知并被自动更新。</p>\n<p>48.对高级语言源程序的编译或解释的过程可以分为多个阶段，解释方式不包括 目标代码生成。解释方式是没有目标代码生成的，与编译方式在词法，语法，语义方面大体相同，但在运行时直接执行源程序或源程序的内部形式，即解释程序不产生源程序的目标程序。这是与编译程序的主要区别。如php都是分析之后，解释成opcode码，然后解释执行，可以这么说，解释程序是参与程序的运行过程的。编译就是分开的。解释的控制器在解释程序。</p>\n<p><a href=\"http://www.cnblogs.com/riskyer/p/3347865.html\" target=\"_blank\" rel=\"external\">参考</a></p>\n<p>49.</p>\n<p>50.递归下降分析法是一种自上而下的语法分析</p>\n<p>51.若关系R（h,l,m,p）的主键为全码，则关系的主键为为HLMP</p>\n<p>52.</p>\n<p>53.遗传算法的主要基因操作是选种、交配和突变，而在进化规则、进化策略中，进化机制源于选种和突变。就适应度的角度来说遗传算法用于选择优秀的父代(优秀的父代产生优秀的子代)，而进化规则和进化策略则用于选择子代(优秀的子代才能存在)。</p>\n<p>54.55.56 自然连接是一种特殊的等值连接，要求两个关系中进行比较的分量必须是相同的属性组，并且在结果中把重复的 属性去掉。等值连接是不会去重重复属性列的。<br>自然连接一定是等值连接，自然连接会把重复的属性移除。</p>\n<p>67.一个vlan【虚拟局域网】就是一个广播域。</p>\n","site":{"data":{}},"excerpt":"<p>1.计算机中cpu对其访问速度最快的是 通用寄存器&gt;CACHE&gt;内存》硬盘</p>\n<p>2.机器字长为N位的二进制数可以用补码来表示个不同的有符号定点小数。<br> 对正数来说，二进制的原码，反码，补码都相同。<br> 负数的反码为符号位不变，其他位取反。<br> 负数的补码为其反码+1<br> 带符号的数：机器数的最高位表示符号<br>定点数是小数点位置约定不变的数，小数点不占位置，定点数分为定点整数和定点小数<br>定点整数（纯整数）：约定小数点的位置在机器数的最低位之后<br>定点小数（纯小数）：约定小数点的位置在机器数的最高数值位之前（带符号数，最高数值位是在符号位之后）<br>符号位占一位，符号位也有0 和1的变化，即出现正数和负数<br>,8位为例：理论上有负数2^(n-1)-1 =127个、正数2^(n-1)-1=127 个再加上10000000和00000000 。共计256个。</p>\n<p>3.cache的地址映像中，发生冲突块最小的是<br>  1)．直接映象<br>","more":"<br>　　每个主存地址映像到Cache中的一个指定地址的方式，称为直接映象方式。在直接映象方式下，主存中存储单元的数据只可调入Cache中的一个位置，如果主存中另一个存储单元的数据也要调入该位置则将发生冲突。地址映像的方法一般是将主存空间按Cache的尺寸分区，每区内相同的块号映像到Cache 中相同的块位置。一般地，Cache被分为2N块，主存被分为同样大小的2M块，主存与Cache中块的对应关系可用如下映像函数表示：j = i mod 2N。式中，j是Cache中的块号，i是主存中的块号。　　</p>\n<p>　　直接映象是一种最简单的地址映像方式，它的地址变换速度快，而且不涉及其他两种映像方式中的替换策略问题。但是这种方式的块冲突概率较高，当称序往返访问两个相互冲突的块中的数据时，Cache的命中率将急剧下降，因为这时即使Cache中有其他空闲块，也因为固定的地址映像关系而无法应用。　　</p>\n<p>  2)．全相联映象　　　　</p>\n<p>　　主存中的每一个字块可映像到Cache任何一个字块位置上，这种方式称为全相联映像。这种方式只有当Cache中的块全部装满后才会出现块冲突，所以块冲突的概率低，可达到很高的Cache命中率；但实现很复杂。当访问一个块中的数据时，块地址要与Cache块表中的所有地址标记进行比较已确定是否命中。在数据块调入时存在着一个比较复杂的替换问题，即决定将数据块调入Cache中什么位置，将Cache中那一块数据调出主存。为了达到较高的速度，全部比较和替换都要用硬件实现。</p>\n<p>  3)．组相联映象　　　</p>\n<p>　　组相联映象方式是直接映象和全相联映象的一种折衷方案。这种方法将存储空间分为若干组，各组之间是直接映像，而组内各块之间则是全相联映像。它是上述两种映像方式的一般形式，如果组的大小为1，即Cache空间分为2N组，就变为直接映像；如果组的大小为Cache整个的尺寸，就变为了全相联映像。组相联方式在判断块命中及替换算法上都要比全相联方式简单，块冲突的概率比直接映像的低，其命中率也介于直接映像和全相联映像方式之间。</p>\n<p>  <a href=\"http://blog.csdn.net/kobesdu/article/details/39081189\">参考</a> 　</p>\n<p>4.计算机中的cpu终端响应时间指的是 从发出中断请求到开始进入中断处理程序，要分清中断响应过程和中断服务过程</p>\n<p>5.总线宽度为32bit，时钟频率为200MHZ,若总线上每5个小时周期传送一个32bit的字，则该总线的宽度为<br>32bit*(200MHZ/5)/8bit=160MB<br>总线的带宽指的是这条总线在单位时间内可以传输的数据总量，它等于总线位宽与工作频率的乘积。例如，对于64位、800MHz的前端总线，它的数据传输率就等于64bit×800MHz÷8(Byte)=6.4GB/s；32位、33MHz PCI总线的数据传输率就是32bit×33MHz÷8=132MB/s，等等，这项法则可以用于所有并行总线上面——看到这里，读者应该明白我们所说的总线带宽指的就是它的数据传输率。<br><a href=\"http://baike.baidu.com/link?url=AIbVrUoI9cOptbbWoJaK2gd1pQbm4OWS7BDlE9MgNQ6UsBME35eOd0S8SZBswIiP_lwaHPB8xXeJ_oa4S9a3tTGNVwr6drJmsieSPN2xETQ8E7VscDXfRz0HLGzdOBUg\">参考</a></p>\n<p>6.流水线性能：采用异步并不会明显提高性能。药师加速比和效率最大化应该对流水线各级采用相同的运行时间。</p>\n<p>7.SSH，安全套接层secure shell，建立在应用层基础上</p>\n<p>8.9.系统安全 漏洞补丁，应用安全 数据库安全</p>\n<p>10.11.软件产品也是作品的一种，公民拥有的为死后50年，企业为发布后50年，公民的署名权，修改权，保护作品完整权 是永远保护的<br>个人一般只有个署名权，其他的著作权都归公司。商标谁申请谁拥有，同时申请，谁先用，谁使用。专利，谁先申请谁拥有，同时那就协商去。或者抓阄。<br>著作权不需要申请就拥有。<br>专利同时申请的就协商，协商不成谁也不想要。</p>\n<p>12.13.媒体分为感觉媒体、表示媒体、表现媒体、存储媒体和传输媒体<br> 感觉媒体<br>感觉媒体指的是能直接作用于人们的感觉器官，从而能使人产生直接感觉的媒体。如文字、数据、声音、图形、图像等。<br>在多媒体计算机技术中，我们所说的媒体一般指的是感觉媒体。<br> 表示媒体<br>表示媒体指的是为了传输感觉媒体而人为研究出来的媒体，借助于此种媒体，能有效地存储感觉媒体或将感觉媒体从一个地方传送到另一个地方。如语言编码、电报码、条形码等。<br> 表现媒体<br>表现媒体指的是用于通信中使电信号和感觉媒体之间产生转换用的媒体。如输入、输出设备，包括键盘、鼠标器、显示器、打印机等。<br> 存储媒体<br>存储媒体指的是用于存放表示媒体的媒体。如纸张、磁带、磁盘、光盘等。</p>\n<p>传输媒体<br>传输媒体指的用于传输某种媒体的物理媒体。如双绞线、电缆、光纤等。</p>\n<p>14.</p>\n<p>15.软件工程的基本要素包括方法 工具和过程</p>\n<p>16.在概要设计阶段，选择适当的解决方案，将系统分解为若干个子系统，建立整个系统的体系结构</p>\n<p>17.18 ，关键路径算法</p>\n<p>你好，本题是考察项目的关键路径，关键路径：项目中时间最长的活动顺序，决定着可能的项目最短工期。<br>本题解题时需要先生成网络图，然后找出关键路径。<br>本题按照题干生成的图如下：</p>\n<p><img src=\"/img/ruankao/17-18.png\" alt=\"img\"><br>可以从图中发现ADEFH是最长的路径，也就是关键路径。<br>由于ADF都是关键路径上的活动，对其进行修改就会影响关键路径，而B不是关键路径上的活动，对其进行缩短，经过B的所有路径的时长都不会比关键路径长，即不会影响项目工期</p>\n<p>19.风险的优先级通常是根据 风险暴露risk exposure 来设定<br>风险暴露又称为风险曝光度，测量的是资产的整个安全性风险，他将表示实际损失的可能性与表示大量可能损失的资讯结合到单一数字评估中，风险曝光riskexposure=错误出现率 *错误造成损失（风险损失）</p>\n<p>20.程序设计语言中，局部变量的值是在运行时改变的</p>\n<p>21.算法表达式对应的树，对此二叉树进行先序，中序，后序遍历，便可以得到表达式的前缀，中缀和后缀书写形式。<br>中缀形式是算术表达式的通常形式，只是没有括号。使用后缀表达式更容易求职（在计算机中）</p>\n<p>22.c程序中全局变量的存储空间在静态数据区分配</p>\n<p>23.24.25记得v是增加信号量，p是减少信号量。用pv就能选出，不用是p几s几</p>\n<p>26.访问位为0的就把他淘汰掉</p>\n<p>27.28 嵌入式系统初始化分为片级初始化，板级初始化，系统级初始化。这是按照自底向上，从硬件到软件的次序依次进行的。<br>片级初始化完成嵌入式微处理器的初始化，包括设置嵌入式微处理器的核心寄存器和控制寄存器。片级初始化是一个纯硬件的过程。<br>板级初始化，同时需要设置一些数据结构和参数，同时包含软件和硬件在内的初始化过程。<br>系统初始化，系统分区，网络系统，文件系统等，最后将控制权交给应用程序的入口</p>\n<p>29.瀑布模型 文档驱动 系统可能不满足客户的需求<br>快速原型模型 关注满足客户需求 可能导致系统设计差、效率低，难于维护<br>增量模型 开发早期反馈及时，易于维护 需要开放式体系结构，可能会导致效率低下<br>螺旋模型 风险驱动 风险分析人员需要有经验且经过充分训练</p>\n<p>记住螺旋模型是有风险控制的就好</p>\n<p>30.敏捷开发<br>scrum【并列争球】：三个角色，四个会议，三个物件<br>极限编程【xp】：交流，朴素，反馈和勇气，近螺旋式开发方法<br>水晶方法srystal：提倡机动性方法，包含具有共性的核心元素，每个都含有独特的角色，过程模式，工作产品和实践七大体系特征：经常交付，反思改进，渗透式交流，个人安全，焦点，与专家用户建立方便的联系，配有自动测试，配置管理和经常集成功能的技术环境<br>DSDM dynamic system development management 动态系统开发方法：以业务为核心 用户持续参与，产品经常交付，迭代增量</p>\n<p>31.软件配置管理内容：版本控制，变更控制，过程支持</p>\n<p>32.内聚和耦合。内聚是从功能性角度，描述的是模块内功能性的关系。耦合是各个模块之间互相连接的一种度量。<br>耦合强弱取决于模块之间接口的复杂程度。<br>模块之间关系越紧密，耦合性就强，独立性就差</p>\n<p>内容耦合：一个模块直接访问另外一个模块内部数据；一个模块多个入口，这种耦合性最强。（目前高级语言不会有这种情况，最早出现在汇编）<br>公共耦合：一组模块都访问同一个全局数据结构，公共数据环境可以是全局数据结构，共享通信区，内存的公共覆盖区等<br>外部耦合:一组模块都访问同一全局简单变量，而且不通过参数表传递该全局变量信息，则称为外部耦合。<br>控制耦合：模块之间传递的不是数据信息，而是控制信息，如标志，开关量等，一个模块控制了另外一个模块的功能。<br>标记耦合：调用模块和被调用模块之间传递的数据结构而不是简单数据，同时也称作特征耦合，其实传递的是地址。</p>\n<p>数据耦合：调用模块和被调用模块之间只是传递简单的数据项参数，相当于高级语言值传递。</p>\n<p>非直接耦合：两个模块之间没有直接关系，他们之间的联系完全通过主模块的调用来实现的，耦合度最低，模块独立性最强。</p>\n<p>内聚：偶然内聚，没有任何关系，<br>逻辑内聚：调用时由传送模块参数传递<br>时间内聚：把需要执行的动作组合在一起形成模块<br>过程内聚：特定次数，特定关系<br>通信内聚模块内各个组成部分都使用相同的数据结构或产生相同的数据结构<br>顺序内聚：必须顺序执行<br>功能内聚是最强内聚</p>\n<p>某模块实现两个功能，向某个数据结构区域写数据和从该区域读数据，则该模块内聚类型为 通信内聚</p>\n<p>33.正规技术评审目的<br>（1）发现软件在功能、逻辑、实现上的错误；<br>（2）验证软件符合它的需求规格；<br>（3）确认软件符合预先定义的开发规范和标准；<br>（4）保证软件在统一的模式下进行开发；<br>（5）便于项目管理。<br>此外，正规技术评审为新手提供软件分析、设计和实现的培训途经，后备、后续开发人员也可以通过正规技术评审熟悉他人开发的软件。</p>\n<p>34.自顶向下集成</p>\n<p>目的：从顶层控制（主控模块）开始，采用同设计顺序一样的思路对被测系统进行测试，来验证系统的稳定性。<br>定义：自顶向下的集成测试就是按照系统层次结构图，以主程序模块为中心，自上而下按照深度优先或者广度优先策略，对各个模块一边组装一边进行测试。<br>方法：<br>①      把主控模块作为测试驱动，所有与主控模块直接相连的模块作为桩模块；<br>②                      根据集成的方式（深度优先或者广度优先），逐渐使用实际模块替换相应的下层桩模块；再用桩代替他们的直接下属模块，与已通过测试的模块或子系统组装成新的子系统。<br>③                      在每个模块被集成时，都必须已经通过了单元测试；<br>④                      进行回归测试（重新执行以前做过的全部或部分测试），以确定集成新模块后没有引入错误；<br>⑤                      从上述过程中的第二步开始重复执行，直到所有模块都已经集成到系统中为止。<br>优点：<br>①      在测试的过程中，可以较早地验证主要的控制和判断点。<br>② 选择深度优先组合方式，可以首先实现和验证一个完整的软件功能，可先对逻辑输入的分支进行组装和测试，检查和克服潜藏的错误和缺陷，<br>③      验证其功能的正确性，为此后主要分支的组装和测试提供保证；<br>④      能够较早的验证功能可行性，给开发者和用户带来成功的信心；<br>⑤      只有在个别情况下，才需要驱动程序（最多不超过一个），减少了测试驱动程序开发和维护的费用；<br>⑥      可以和开发设计工作一起并行执行集成测试，能够灵活的适应目标环境；<br>⑦      容易进行故障隔离和错误定位。<br> 缺点：<br>①      在测试时需要为每个模块的下层模块提供桩模块，桩模块的开发和维护费用大；<br>②      底层组件的需求变更可能会影响到全局组件，需要修改整个系统的多个上层模块。<br>③      要求控制模块具有比较高的可测试性；<br>④      可能会导致底层模块特别是被重用的模块测试不够充分。<br> 适用范围：<br>①      控制结构比较清晰和稳定的应用程序；<br>②      系统高层的模块接口变化的可能性比较小；<br>③      产品的低层模块接口还未定义或可能会经常因需求变更等原因被修改；<br>④      产品中的控制模块技术风险较大，需要尽可能提前验证；<br>⑤      需要尽早看到产品的系统功能行为；<br>⑥      在极限编程（Extreme Programming）中使用测试优先的开发方法。</p>\n<p>自底向上集成</p>\n<p>1) 目的：从依赖性最小的底层模块开始，按照层次结构图，逐层向上集成，验证系统的稳定性。<br>2) 定义：自底向上集成是从系统层次结构图的最底层模块开始进行组装和集成测试的方式。<br>3) 方法：<br>①      从最底层的模块开始组装，组合成一个能够完成制定的软件子功能的构件；<br>②      编制驱动程序，协调测试用例的输入与输出；<br>③      测试集成后的构件；<br>④      使用实际模块代替驱动程序，按程序结构向上组装测试后的构件；<br>⑤      重复上面的第二步，直到系统的最顶层模块被加入到系统中为止。<br>4) 优点：<br>①      即使数据流并未构成有向的非环状图，生成测试数据也没有困难。<br>②      可以尽早的验证底层模块的行为。<3>提高了测试效率；<br>③      对实际被测模块的可测试性要求要少；<br>④      减少了桩模块的工作量;<br>⑤      容易对错误进行定位。<br>5) 缺点<br>①      直到最后一个模块加进去之后才能看到整个系统的框架；<br>②      只有到测试过程的后期才能发现时序问题和资源竞争问题；<br>③      驱动模块的设计工作量大;<br>④      不能被及时发现高层模块设计上的错误。<br>6) 适用范围<br>① 底层模块接口比较稳定的产品；<br>② 高层模块接口变更比较频繁的产品；<br>③ 底层模块开发和单元测试工作完成较早的产品。</p>\n<p>自底向上的集成测试策略的优点 不需要编写桩程序，但是需要编写很多驱动模块</p>\n<p>35.mccabe 程序控制流程图中，节点是程序代码中最小的单元。边代表节点间的控制流，一个有e条边和n个节点的流程图f。其圈复杂度为e-f+2 ，边-点+2<br>10-8+2=4</p>\n<p>36.软件可维护性是衡量软件质量的一个重要特性，受到开发文档影响，可维护性也是软件开发阶段各个时期的关键目标，可以从可理解行，可靠性，可测试性，可行性，可移植性进行度量。</p>\n<p>37.对象是封闭数据和行为的整体</p>\n<p>38.面向对象程序设计选择合适的面向对象程序设计语言，将程序组织为相互协作的对象集合，每个对象表示某个类的实例，类通过继承等关系进行组织。<br>面向对象分析：主要任务是抽取和整理用户需求并建立问题域精确模型，<br>面向对象设计：采用协作的对象，对象的属性和方法说明软件解决方案的一种方式，强调的是定义软件对象和这些软件对象如何协作来满足要求，延续了面向对象分析。<br>面向对象实现：采用面向对象程序设计语言下hi线系统。<br>面向对象测试是根据规范来说明验证系统设计的正确性。</p>\n<p>39.一个类可以通过多个重名方法而参数类型列表示不通的方法，被称为重载方法</p>\n<p>40.41.UML关系<br>实现关系implementation：接口和类的实现，implements 带空心三角形的虚线来表示<br>组合关系composition：整体和部分关系，并且有统一的生存期。整体不存在，那么部分也不存在。比如头和嘴的关系。<br>组合关系用实心菱形。整体那边是实心菱形，部分那么是箭头。</p>\n<p>聚合关系aggregation整体和部分的关系，但是可以相互存在，就是部分可以脱离整体。比如电脑和显示器。整体那边是虚心菱形</p>\n<p>关联关系 association 一对一，多对多，自关联等，是一种结构关系，描述了一种链。链是对象之间的连接。<br>泛化 generation 就是继承关系，空心三角指向父类</p>\n<p>依赖关系dependence 大多情况，依赖关系体现在某个类的方法使用另一个类的对象作为参数<br>虚心箭头表示，开车和司机的关系</p>\n<p>42.43uml，统一建模语言<br>用例图：描述用户需求，从用户角度描述系统功能，椭圆为某个用户，人形为角色，帮助团队以一种可视化的方式理解系统功能需求<br>活动图：通过动作来组织，主要描述一种方法，机制或用例的内部行为，涉及状态 活动转移分支 并发 同步<br>静态结构图：【类图】，【对象图】，【包图】，【组合结构图】…<br>部署图：deployment diagram 描述系统所需的硬件构件的物理部署</p>\n<p><a href=\"http://www.cnblogs.com/wangkangluo1/archive/2013/02/21/2920606.html\">参考</a></p>\n<p>44.45.46 组合模式，属于结构型模式，表示对象的整体，结构层次</p>\n<p>47.某些设计模式会引入总是被用作参数的对象 visitor 访问者模式对象是一个多态accept的参数<br>命令模式：将请求封装为一个对象，可以将不通的请求对客户进行参数化<br>责任链模式：chain of responsibility 模式将多个对象的请求连成一条链，并沿着这条连传递该请求，直到有一个对象处理他为止，主要是避免请求的发送者和接受者之间的耦合关系。<br>观察者模式：定义对象之间的一种一对的依赖关系，当一个对象的状态发生改变时，所有依赖他的对象都得到通知并被自动更新。</p>\n<p>48.对高级语言源程序的编译或解释的过程可以分为多个阶段，解释方式不包括 目标代码生成。解释方式是没有目标代码生成的，与编译方式在词法，语法，语义方面大体相同，但在运行时直接执行源程序或源程序的内部形式，即解释程序不产生源程序的目标程序。这是与编译程序的主要区别。如php都是分析之后，解释成opcode码，然后解释执行，可以这么说，解释程序是参与程序的运行过程的。编译就是分开的。解释的控制器在解释程序。</p>\n<p><a href=\"http://www.cnblogs.com/riskyer/p/3347865.html\">参考</a></p>\n<p>49.</p>\n<p>50.递归下降分析法是一种自上而下的语法分析</p>\n<p>51.若关系R（h,l,m,p）的主键为全码，则关系的主键为为HLMP</p>\n<p>52.</p>\n<p>53.遗传算法的主要基因操作是选种、交配和突变，而在进化规则、进化策略中，进化机制源于选种和突变。就适应度的角度来说遗传算法用于选择优秀的父代(优秀的父代产生优秀的子代)，而进化规则和进化策略则用于选择子代(优秀的子代才能存在)。</p>\n<p>54.55.56 自然连接是一种特殊的等值连接，要求两个关系中进行比较的分量必须是相同的属性组，并且在结果中把重复的 属性去掉。等值连接是不会去重重复属性列的。<br>自然连接一定是等值连接，自然连接会把重复的属性移除。</p>\n<p>67.一个vlan【虚拟局域网】就是一个广播域。</p>"},{"title":"大端字节序与小端字节序","date":"2016-11-04T13:12:03.000Z","_content":"\n大端字节序：数据的低位字节保存在内存的高地址端，等于内存的低位保存的是数据的高位地址\n小端字节序：数据的高位字节保存在内存的高地址端，\n网络字节序：tcpip是基于大端字节序\n <!-- more -->\n\n缘由：内存每个地址单元对应一个字节，就是8bit。现在为32或者64位cpu，寄存器的宽度在大于了一个字节之后，字节排放就需要有个顺序，就有了大端和小端。所以大端和小端指的是寄存器的排列顺序。所以只是在跨平台或者网络编程程序中会经常用到，一般情况不会用到。\n\n在c语言中，指针大小在32位机器上为4字节*8bit，64位机器上为8字节*8bit\n\n----------------------- 最高内存地址 0xffffffff\n栈底\n栈\n栈顶\n-----------------------\n\nNULL (空洞)\n-----------------------\n堆\n-----------------------\n未初始 化的数据\n----------------------- 统称数据段\n初始化的数据\n-----------------------\n正 文段(代码段)\n----------------------- 最低内存地址 0x00000000\n\n\n内存低地址存数据的高位，内存的高地址存数据的低位。\n内存是由低到高增长，按照单个进程内的存储器地址由低到高分别为 代码段 数据段（全局变量+静态变量） 堆（动态分配内存） 栈（局部变量）\n\n如何验证本机是低位还是高位？不同的处理器有不同的大小端模式\n\n\n本地a字节序转成网络字节序-发送给b  b接收网络字节序 -b转成本地字节序 ，网络字节序为大端模式\n\n\n比如内存地址由低到高：0x01 0x02\n数据为12345678，数据的1234为高位，5678为低位。\n\n0x01存的是1234，内存低地址存数据高位，为大端。\n\n{% codeblock lang:c %}\n#include <stdio.h>\n\nint main(){\n\n\n  int num=0x12345678;\n\n  char *pnum = (char *)&num;\n\n  printf(\" sizeof pnum is %i\\n\",sizeof(pnum));\n\n  printf(\"first %p,value is %x\\n\",pnum,pnum[0]);\n\n  printf(\"second %p,value is %x\\n\",pnum+1,pnum[1]);\n  printf(\"third %p,value is %x\\n\",pnum+2,pnum[2]);\n  printf(\"fourth %p,value is %x\\n\",pnum+3,pnum[3]);\n\n\n}\n{% endcodeblock %}\n\n\n执行结果，可以看出，78存在了低地址位，所以是小端序。\n\n·\n```\nsizeof pnum is 4\nfirst 1703740,value is 78\nsecond 1703741,value is 56\nthird 1703742,value is 34\nfourth 1703743,value is 12\nPress any key to continue\n```\n\n结合php的PACK/unpack，可以得出一致结果:小端序\n\n\n```\n<?php\n\n\ndefine('BIG_ENDIAN', pack('L', 1) === pack('N', 1));\n\nif (BIG_ENDIAN)\n{\n  echo \"大端序\";\n}\nelse\n{\n  echo \"小端序\";\n}\n```\n","source":"_posts/big_small_binary.md","raw":"---\ntitle: 大端字节序与小端字节序\ndate: 2016-11-04 21:12:03\ncategories: C\ntags:\n- 大端字节序\n---\n\n大端字节序：数据的低位字节保存在内存的高地址端，等于内存的低位保存的是数据的高位地址\n小端字节序：数据的高位字节保存在内存的高地址端，\n网络字节序：tcpip是基于大端字节序\n <!-- more -->\n\n缘由：内存每个地址单元对应一个字节，就是8bit。现在为32或者64位cpu，寄存器的宽度在大于了一个字节之后，字节排放就需要有个顺序，就有了大端和小端。所以大端和小端指的是寄存器的排列顺序。所以只是在跨平台或者网络编程程序中会经常用到，一般情况不会用到。\n\n在c语言中，指针大小在32位机器上为4字节*8bit，64位机器上为8字节*8bit\n\n----------------------- 最高内存地址 0xffffffff\n栈底\n栈\n栈顶\n-----------------------\n\nNULL (空洞)\n-----------------------\n堆\n-----------------------\n未初始 化的数据\n----------------------- 统称数据段\n初始化的数据\n-----------------------\n正 文段(代码段)\n----------------------- 最低内存地址 0x00000000\n\n\n内存低地址存数据的高位，内存的高地址存数据的低位。\n内存是由低到高增长，按照单个进程内的存储器地址由低到高分别为 代码段 数据段（全局变量+静态变量） 堆（动态分配内存） 栈（局部变量）\n\n如何验证本机是低位还是高位？不同的处理器有不同的大小端模式\n\n\n本地a字节序转成网络字节序-发送给b  b接收网络字节序 -b转成本地字节序 ，网络字节序为大端模式\n\n\n比如内存地址由低到高：0x01 0x02\n数据为12345678，数据的1234为高位，5678为低位。\n\n0x01存的是1234，内存低地址存数据高位，为大端。\n\n{% codeblock lang:c %}\n#include <stdio.h>\n\nint main(){\n\n\n  int num=0x12345678;\n\n  char *pnum = (char *)&num;\n\n  printf(\" sizeof pnum is %i\\n\",sizeof(pnum));\n\n  printf(\"first %p,value is %x\\n\",pnum,pnum[0]);\n\n  printf(\"second %p,value is %x\\n\",pnum+1,pnum[1]);\n  printf(\"third %p,value is %x\\n\",pnum+2,pnum[2]);\n  printf(\"fourth %p,value is %x\\n\",pnum+3,pnum[3]);\n\n\n}\n{% endcodeblock %}\n\n\n执行结果，可以看出，78存在了低地址位，所以是小端序。\n\n·\n```\nsizeof pnum is 4\nfirst 1703740,value is 78\nsecond 1703741,value is 56\nthird 1703742,value is 34\nfourth 1703743,value is 12\nPress any key to continue\n```\n\n结合php的PACK/unpack，可以得出一致结果:小端序\n\n\n```\n<?php\n\n\ndefine('BIG_ENDIAN', pack('L', 1) === pack('N', 1));\n\nif (BIG_ENDIAN)\n{\n  echo \"大端序\";\n}\nelse\n{\n  echo \"小端序\";\n}\n```\n","slug":"big_small_binary","published":1,"updated":"2018-08-14T09:42:55.164Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjktlsbag0001egh3l5gn5gqx","content":"<p>大端字节序：数据的低位字节保存在内存的高地址端，等于内存的低位保存的是数据的高位地址<br>小端字节序：数据的高位字节保存在内存的高地址端，<br>网络字节序：tcpip是基于大端字节序<br> <a id=\"more\"></a></p>\n<p>缘由：内存每个地址单元对应一个字节，就是8bit。现在为32或者64位cpu，寄存器的宽度在大于了一个字节之后，字节排放就需要有个顺序，就有了大端和小端。所以大端和小端指的是寄存器的排列顺序。所以只是在跨平台或者网络编程程序中会经常用到，一般情况不会用到。</p>\n<p>在c语言中，指针大小在32位机器上为4字节<em>8bit，64位机器上为8字节</em>8bit</p>\n<p>———————– 最高内存地址 0xffffffff<br>栈底<br>栈</p>\n<h2 id=\"栈顶\"><a href=\"#栈顶\" class=\"headerlink\" title=\"栈顶\"></a>栈顶</h2><h2 id=\"NULL-空洞\"><a href=\"#NULL-空洞\" class=\"headerlink\" title=\"NULL (空洞)\"></a>NULL (空洞)</h2><h2 id=\"堆\"><a href=\"#堆\" class=\"headerlink\" title=\"堆\"></a>堆</h2><p>未初始 化的数据<br>———————– 统称数据段</p>\n<h2 id=\"初始化的数据\"><a href=\"#初始化的数据\" class=\"headerlink\" title=\"初始化的数据\"></a>初始化的数据</h2><p>正 文段(代码段)<br>———————– 最低内存地址 0x00000000</p>\n<p>内存低地址存数据的高位，内存的高地址存数据的低位。<br>内存是由低到高增长，按照单个进程内的存储器地址由低到高分别为 代码段 数据段（全局变量+静态变量） 堆（动态分配内存） 栈（局部变量）</p>\n<p>如何验证本机是低位还是高位？不同的处理器有不同的大小端模式</p>\n<p>本地a字节序转成网络字节序-发送给b  b接收网络字节序 -b转成本地字节序 ，网络字节序为大端模式</p>\n<p>比如内存地址由低到高：0x01 0x02<br>数据为12345678，数据的1234为高位，5678为低位。</p>\n<p>0x01存的是1234，内存低地址存数据高位，为大端。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">int</span> num=<span class=\"number\">0x12345678</span>;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">char</span> *pnum = (<span class=\"keyword\">char</span> *)&amp;num;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\" sizeof pnum is %i\\n\"</span>,<span class=\"keyword\">sizeof</span>(pnum));</div><div class=\"line\"></div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"first %p,value is %x\\n\"</span>,pnum,pnum[<span class=\"number\">0</span>]);</div><div class=\"line\"></div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"second %p,value is %x\\n\"</span>,pnum+<span class=\"number\">1</span>,pnum[<span class=\"number\">1</span>]);</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"third %p,value is %x\\n\"</span>,pnum+<span class=\"number\">2</span>,pnum[<span class=\"number\">2</span>]);</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"fourth %p,value is %x\\n\"</span>,pnum+<span class=\"number\">3</span>,pnum[<span class=\"number\">3</span>]);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>执行结果，可以看出，78存在了低地址位，所以是小端序。</p>\n<p>·<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">sizeof pnum is 4</div><div class=\"line\">first 1703740,value is 78</div><div class=\"line\">second 1703741,value is 56</div><div class=\"line\">third 1703742,value is 34</div><div class=\"line\">fourth 1703743,value is 12</div><div class=\"line\">Press any key to continue</div></pre></td></tr></table></figure></p>\n<p>结合php的PACK/unpack，可以得出一致结果:小端序</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">define(&apos;BIG_ENDIAN&apos;, pack(&apos;L&apos;, 1) === pack(&apos;N&apos;, 1));</div><div class=\"line\"></div><div class=\"line\">if (BIG_ENDIAN)</div><div class=\"line\">&#123;</div><div class=\"line\">  echo &quot;大端序&quot;;</div><div class=\"line\">&#125;</div><div class=\"line\">else</div><div class=\"line\">&#123;</div><div class=\"line\">  echo &quot;小端序&quot;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>大端字节序：数据的低位字节保存在内存的高地址端，等于内存的低位保存的是数据的高位地址<br>小端字节序：数据的高位字节保存在内存的高地址端，<br>网络字节序：tcpip是基于大端字节序<br>","more":"</p>\n<p>缘由：内存每个地址单元对应一个字节，就是8bit。现在为32或者64位cpu，寄存器的宽度在大于了一个字节之后，字节排放就需要有个顺序，就有了大端和小端。所以大端和小端指的是寄存器的排列顺序。所以只是在跨平台或者网络编程程序中会经常用到，一般情况不会用到。</p>\n<p>在c语言中，指针大小在32位机器上为4字节<em>8bit，64位机器上为8字节</em>8bit</p>\n<p>———————– 最高内存地址 0xffffffff<br>栈底<br>栈</p>\n<h2 id=\"栈顶\"><a href=\"#栈顶\" class=\"headerlink\" title=\"栈顶\"></a>栈顶</h2><h2 id=\"NULL-空洞\"><a href=\"#NULL-空洞\" class=\"headerlink\" title=\"NULL (空洞)\"></a>NULL (空洞)</h2><h2 id=\"堆\"><a href=\"#堆\" class=\"headerlink\" title=\"堆\"></a>堆</h2><p>未初始 化的数据<br>———————– 统称数据段</p>\n<h2 id=\"初始化的数据\"><a href=\"#初始化的数据\" class=\"headerlink\" title=\"初始化的数据\"></a>初始化的数据</h2><p>正 文段(代码段)<br>———————– 最低内存地址 0x00000000</p>\n<p>内存低地址存数据的高位，内存的高地址存数据的低位。<br>内存是由低到高增长，按照单个进程内的存储器地址由低到高分别为 代码段 数据段（全局变量+静态变量） 堆（动态分配内存） 栈（局部变量）</p>\n<p>如何验证本机是低位还是高位？不同的处理器有不同的大小端模式</p>\n<p>本地a字节序转成网络字节序-发送给b  b接收网络字节序 -b转成本地字节序 ，网络字节序为大端模式</p>\n<p>比如内存地址由低到高：0x01 0x02<br>数据为12345678，数据的1234为高位，5678为低位。</p>\n<p>0x01存的是1234，内存低地址存数据高位，为大端。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">int</span> num=<span class=\"number\">0x12345678</span>;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">char</span> *pnum = (<span class=\"keyword\">char</span> *)&amp;num;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\" sizeof pnum is %i\\n\"</span>,<span class=\"keyword\">sizeof</span>(pnum));</div><div class=\"line\"></div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"first %p,value is %x\\n\"</span>,pnum,pnum[<span class=\"number\">0</span>]);</div><div class=\"line\"></div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"second %p,value is %x\\n\"</span>,pnum+<span class=\"number\">1</span>,pnum[<span class=\"number\">1</span>]);</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"third %p,value is %x\\n\"</span>,pnum+<span class=\"number\">2</span>,pnum[<span class=\"number\">2</span>]);</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"fourth %p,value is %x\\n\"</span>,pnum+<span class=\"number\">3</span>,pnum[<span class=\"number\">3</span>]);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>执行结果，可以看出，78存在了低地址位，所以是小端序。</p>\n<p>·<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">sizeof pnum is 4</div><div class=\"line\">first 1703740,value is 78</div><div class=\"line\">second 1703741,value is 56</div><div class=\"line\">third 1703742,value is 34</div><div class=\"line\">fourth 1703743,value is 12</div><div class=\"line\">Press any key to continue</div></pre></td></tr></table></figure></p>\n<p>结合php的PACK/unpack，可以得出一致结果:小端序</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">define(&apos;BIG_ENDIAN&apos;, pack(&apos;L&apos;, 1) === pack(&apos;N&apos;, 1));</div><div class=\"line\"></div><div class=\"line\">if (BIG_ENDIAN)</div><div class=\"line\">&#123;</div><div class=\"line\">  echo &quot;大端序&quot;;</div><div class=\"line\">&#125;</div><div class=\"line\">else</div><div class=\"line\">&#123;</div><div class=\"line\">  echo &quot;小端序&quot;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"PHP_APP_RSA_AES实现服务器客户端双向加密","date":"2016-11-18T05:39:22.000Z","_content":"\n## 目的：实现和app端的双向加密解密功能##\n\n## 共有七个文件 ##\n其中包括三个类文件\n1. `lib_aes.php` aes对称加密解密类\n2. `server_rsa_crypt.php` 服务端RSA公钥私钥非对称加密解密类\n3. `client_rsa_crypt.php` 客户端RSA公钥私钥非对称加密解密类\n\n <!-- more -->\n\n四个过程文件,其中文件中有注释和exapmle数据\n\n- 第一步：客户端和服务端交换密钥（明文）-`service_client_exchange.php`\n- 第二步:客户端发起带参数请求（加密后）- `client_generate_aeskey.php`\n\n- 第三步：服务端解密客户端请求\n   并加密服务端数据（先解密，后加密）-`service_decrypt_client_001.php`\n\n- 第四步：客户端解密服务端数据（先解密，..加密）-`client_decrypt_server.php`\n\n[代码地址][1]\n----\n\nAnd So on...\n\n\n  [1]: https://github.com/tuber/PHP_APP_RSA_AES\n\n\n","source":"_posts/PHP-APP-RSA-AES.md","raw":"---\ntitle: PHP_APP_RSA_AES实现服务器客户端双向加密\ndate: 2016-11-18 13:39:22\ncategories: PHP\ntags:\n - RSA\n - AES\n - 双向加密解密\n---\n\n## 目的：实现和app端的双向加密解密功能##\n\n## 共有七个文件 ##\n其中包括三个类文件\n1. `lib_aes.php` aes对称加密解密类\n2. `server_rsa_crypt.php` 服务端RSA公钥私钥非对称加密解密类\n3. `client_rsa_crypt.php` 客户端RSA公钥私钥非对称加密解密类\n\n <!-- more -->\n\n四个过程文件,其中文件中有注释和exapmle数据\n\n- 第一步：客户端和服务端交换密钥（明文）-`service_client_exchange.php`\n- 第二步:客户端发起带参数请求（加密后）- `client_generate_aeskey.php`\n\n- 第三步：服务端解密客户端请求\n   并加密服务端数据（先解密，后加密）-`service_decrypt_client_001.php`\n\n- 第四步：客户端解密服务端数据（先解密，..加密）-`client_decrypt_server.php`\n\n[代码地址][1]\n----\n\nAnd So on...\n\n\n  [1]: https://github.com/tuber/PHP_APP_RSA_AES\n\n\n","slug":"PHP-APP-RSA-AES","published":1,"updated":"2018-08-14T09:42:55.161Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjktlsbai0004egh3irknco13","content":"<h2 id=\"目的：实现和app端的双向加密解密功能\"><a href=\"#目的：实现和app端的双向加密解密功能\" class=\"headerlink\" title=\"目的：实现和app端的双向加密解密功能\"></a>目的：实现和app端的双向加密解密功能</h2><h2 id=\"共有七个文件\"><a href=\"#共有七个文件\" class=\"headerlink\" title=\"共有七个文件\"></a>共有七个文件</h2><p>其中包括三个类文件</p>\n<ol>\n<li><code>lib_aes.php</code> aes对称加密解密类</li>\n<li><code>server_rsa_crypt.php</code> 服务端RSA公钥私钥非对称加密解密类</li>\n<li><p><code>client_rsa_crypt.php</code> 客户端RSA公钥私钥非对称加密解密类</p>\n<a id=\"more\"></a>\n</li>\n</ol>\n<p>四个过程文件,其中文件中有注释和exapmle数据</p>\n<ul>\n<li>第一步：客户端和服务端交换密钥（明文）-<code>service_client_exchange.php</code></li>\n<li><p>第二步:客户端发起带参数请求（加密后）- <code>client_generate_aeskey.php</code></p>\n</li>\n<li><p>第三步：服务端解密客户端请求<br> 并加密服务端数据（先解密，后加密）-<code>service_decrypt_client_001.php</code></p>\n</li>\n<li><p>第四步：客户端解密服务端数据（先解密，..加密）-<code>client_decrypt_server.php</code></p>\n</li>\n</ul>\n<h2 id=\"代码地址\"><a href=\"#代码地址\" class=\"headerlink\" title=\"代码地址\"></a><a href=\"https://github.com/tuber/PHP_APP_RSA_AES\" target=\"_blank\" rel=\"external\">代码地址</a></h2><p>And So on…</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"目的：实现和app端的双向加密解密功能\"><a href=\"#目的：实现和app端的双向加密解密功能\" class=\"headerlink\" title=\"目的：实现和app端的双向加密解密功能\"></a>目的：实现和app端的双向加密解密功能</h2><h2 id=\"共有七个文件\"><a href=\"#共有七个文件\" class=\"headerlink\" title=\"共有七个文件\"></a>共有七个文件</h2><p>其中包括三个类文件</p>\n<ol>\n<li><code>lib_aes.php</code> aes对称加密解密类</li>\n<li><code>server_rsa_crypt.php</code> 服务端RSA公钥私钥非对称加密解密类</li>\n<li><p><code>client_rsa_crypt.php</code> 客户端RSA公钥私钥非对称加密解密类</p>","more":"</li>\n</ol>\n<p>四个过程文件,其中文件中有注释和exapmle数据</p>\n<ul>\n<li>第一步：客户端和服务端交换密钥（明文）-<code>service_client_exchange.php</code></li>\n<li><p>第二步:客户端发起带参数请求（加密后）- <code>client_generate_aeskey.php</code></p>\n</li>\n<li><p>第三步：服务端解密客户端请求<br> 并加密服务端数据（先解密，后加密）-<code>service_decrypt_client_001.php</code></p>\n</li>\n<li><p>第四步：客户端解密服务端数据（先解密，..加密）-<code>client_decrypt_server.php</code></p>\n</li>\n</ul>\n<h2 id=\"代码地址\"><a href=\"#代码地址\" class=\"headerlink\" title=\"代码地址\"></a><a href=\"https://github.com/tuber/PHP_APP_RSA_AES\">代码地址</a></h2><p>And So on…</p>"},{"title":"在CI框架中加入生成api文档","date":"2017-01-20T06:18:59.000Z","_content":"\n先上图\n---\n**文档列表页面-1**\n\n![图片描述][1]\n\n**文档列表页面-2**\n\n<!-- more -->\n\n![图片描述][2]\n\n**文档详情页面**\n\n![图片描述][3]\n\n\n主要是抽取自[phalapi][4]\n------------------\n\n使用方法\n----\n1. 如果使用默认ci框架及结构目录，只需将`Controller/doc.php`,`views/doc/*`的两个模版文件放入项目即可。\n2. 如果其他项目引入，只需在`Controller/doc.php`中指定项目Controller目录，以及对应的文件夹名对应的类名方法即可。\n3. 文档注释方法可以参考代码中`doc.php`中的注释\n\n\n[GITHUB下载地址][5]\n\n\n  [1]: /img/php/api-doc-1.jpg\n  [2]: /img/php/api-doc-2.jpg\n  [3]: /img/php/api-doc-3.jpg\n  [4]: http://www.phalapi.net/\n  [5]: https://github.com/tuber/apidoc\n","source":"_posts/code-igniter-apidoc.md","raw":"---\ntitle: 在CI框架中加入生成api文档\ndate: 2017-01-20 14:18:59\ncategories: PHP\ntags:\n - PHP框架\n - CI框架\n - 接口文档\n---\n\n先上图\n---\n**文档列表页面-1**\n\n![图片描述][1]\n\n**文档列表页面-2**\n\n<!-- more -->\n\n![图片描述][2]\n\n**文档详情页面**\n\n![图片描述][3]\n\n\n主要是抽取自[phalapi][4]\n------------------\n\n使用方法\n----\n1. 如果使用默认ci框架及结构目录，只需将`Controller/doc.php`,`views/doc/*`的两个模版文件放入项目即可。\n2. 如果其他项目引入，只需在`Controller/doc.php`中指定项目Controller目录，以及对应的文件夹名对应的类名方法即可。\n3. 文档注释方法可以参考代码中`doc.php`中的注释\n\n\n[GITHUB下载地址][5]\n\n\n  [1]: /img/php/api-doc-1.jpg\n  [2]: /img/php/api-doc-2.jpg\n  [3]: /img/php/api-doc-3.jpg\n  [4]: http://www.phalapi.net/\n  [5]: https://github.com/tuber/apidoc\n","slug":"code-igniter-apidoc","published":1,"updated":"2018-08-14T09:42:55.165Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjktlsbaj0005egh3ctl0t9q9","content":"<h2 id=\"先上图\"><a href=\"#先上图\" class=\"headerlink\" title=\"先上图\"></a>先上图</h2><p><strong>文档列表页面-1</strong></p>\n<p><img src=\"/img/php/api-doc-1.jpg\" alt=\"图片描述\"></p>\n<p><strong>文档列表页面-2</strong></p>\n<a id=\"more\"></a>\n<p><img src=\"/img/php/api-doc-2.jpg\" alt=\"图片描述\"></p>\n<p><strong>文档详情页面</strong></p>\n<p><img src=\"/img/php/api-doc-3.jpg\" alt=\"图片描述\"></p>\n<h2 id=\"主要是抽取自phalapi\"><a href=\"#主要是抽取自phalapi\" class=\"headerlink\" title=\"主要是抽取自phalapi\"></a>主要是抽取自<a href=\"http://www.phalapi.net/\" target=\"_blank\" rel=\"external\">phalapi</a></h2><h2 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h2><ol>\n<li>如果使用默认ci框架及结构目录，只需将<code>Controller/doc.php</code>,<code>views/doc/*</code>的两个模版文件放入项目即可。</li>\n<li>如果其他项目引入，只需在<code>Controller/doc.php</code>中指定项目Controller目录，以及对应的文件夹名对应的类名方法即可。</li>\n<li>文档注释方法可以参考代码中<code>doc.php</code>中的注释</li>\n</ol>\n<p><a href=\"https://github.com/tuber/apidoc\" target=\"_blank\" rel=\"external\">GITHUB下载地址</a></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"先上图\"><a href=\"#先上图\" class=\"headerlink\" title=\"先上图\"></a>先上图</h2><p><strong>文档列表页面-1</strong></p>\n<p><img src=\"/img/php/api-doc-1.jpg\" alt=\"图片描述\"></p>\n<p><strong>文档列表页面-2</strong></p>","more":"<p><img src=\"/img/php/api-doc-2.jpg\" alt=\"图片描述\"></p>\n<p><strong>文档详情页面</strong></p>\n<p><img src=\"/img/php/api-doc-3.jpg\" alt=\"图片描述\"></p>\n<h2 id=\"主要是抽取自phalapi\"><a href=\"#主要是抽取自phalapi\" class=\"headerlink\" title=\"主要是抽取自phalapi\"></a>主要是抽取自<a href=\"http://www.phalapi.net/\">phalapi</a></h2><h2 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h2><ol>\n<li>如果使用默认ci框架及结构目录，只需将<code>Controller/doc.php</code>,<code>views/doc/*</code>的两个模版文件放入项目即可。</li>\n<li>如果其他项目引入，只需在<code>Controller/doc.php</code>中指定项目Controller目录，以及对应的文件夹名对应的类名方法即可。</li>\n<li>文档注释方法可以参考代码中<code>doc.php</code>中的注释</li>\n</ol>\n<p><a href=\"https://github.com/tuber/apidoc\">GITHUB下载地址</a></p>"},{"title":"硬盘中磁道、扇区基本概念","date":"2016-11-05T10:02:33.000Z","_content":"\n\n\n\n\n用`AIDA64 Extreme`工具看下我的low硬盘\n--------------------------\n\n![图片描述][1]\n\n柱面磁头扇区磁道？\n---------\n\n *WTF*?\n\n <!-- more -->\n\n\n一图胜千言\n-----\n![磁盘2][2]\n\n\n![磁盘3][3]\n\n 在看个二合一版的图\n\n![磁盘4][4]\n\n温习下英语\n-----\n\n  -  磁头（head）\n  -  磁道就是一个圈（track）\n  -  柱面就是多个磁道号相同的圈组成的（cylinder）\n  -  扇区（sector）\n  -  圆盘（platter）\n\n\n再回到我的low硬盘\n----------\n\n 存储容量 ＝ 磁头数 × 磁道(柱面)数 × 每道扇区数 × 每扇区字节数\n\n `248085*63*16*512/1000/1000 = 128 035.67616M`\n\n 注意512是Byte\n\n简单说一下\n-----\n\n 磁盘由N个盘片构成，每个盘片一般有两面，一面一个磁头，两面都可以存储数据\n\n 磁道号相同的组成一个柱面，柱面是我们硬盘分区时候最小单位。\n\n sector 扇区 磁道按512Byte分成若干扇区，计算机对硬盘读写，是按扇区为最小单位。\n 而一般文件系统中的BLOCK为KB，通常为4KB.（现在有的硬盘每个扇区有4K了）\n\n 可以这么说：即使读一个字节，也必须把这512字节全部读入内存\n\n在linux上看一把硬盘\n------------\n\n     root@lyh:~# fdisk -l\n     Disk /dev/xvda: 42.9 GB, 42949672960 bytes\n     255 heads, 63 sectors/track, 5221 cylinders, total 83886080 sectors\n\n  硬盘容量就是\n\n`heads*sectors*cylinders*512=255*63*5221*512/1000/1000/1000 = 42.94418688G`\n\n  [1]: /img/computer/cipan1.png\n  [2]: /img/computer/cipan2.gif\n  [3]: /img/computer/cipan3.gif\n  [4]: /img/computer/cipan4.png\n","source":"_posts/disk-basic.md","raw":"---\ntitle: 硬盘中磁道、扇区基本概念\ndate: 2016-11-05 18:02:33\ncategories: computer\ntags:\n- 硬盘\n- 扇区\n- 磁道\n\n---\n\n\n\n\n\n用`AIDA64 Extreme`工具看下我的low硬盘\n--------------------------\n\n![图片描述][1]\n\n柱面磁头扇区磁道？\n---------\n\n *WTF*?\n\n <!-- more -->\n\n\n一图胜千言\n-----\n![磁盘2][2]\n\n\n![磁盘3][3]\n\n 在看个二合一版的图\n\n![磁盘4][4]\n\n温习下英语\n-----\n\n  -  磁头（head）\n  -  磁道就是一个圈（track）\n  -  柱面就是多个磁道号相同的圈组成的（cylinder）\n  -  扇区（sector）\n  -  圆盘（platter）\n\n\n再回到我的low硬盘\n----------\n\n 存储容量 ＝ 磁头数 × 磁道(柱面)数 × 每道扇区数 × 每扇区字节数\n\n `248085*63*16*512/1000/1000 = 128 035.67616M`\n\n 注意512是Byte\n\n简单说一下\n-----\n\n 磁盘由N个盘片构成，每个盘片一般有两面，一面一个磁头，两面都可以存储数据\n\n 磁道号相同的组成一个柱面，柱面是我们硬盘分区时候最小单位。\n\n sector 扇区 磁道按512Byte分成若干扇区，计算机对硬盘读写，是按扇区为最小单位。\n 而一般文件系统中的BLOCK为KB，通常为4KB.（现在有的硬盘每个扇区有4K了）\n\n 可以这么说：即使读一个字节，也必须把这512字节全部读入内存\n\n在linux上看一把硬盘\n------------\n\n     root@lyh:~# fdisk -l\n     Disk /dev/xvda: 42.9 GB, 42949672960 bytes\n     255 heads, 63 sectors/track, 5221 cylinders, total 83886080 sectors\n\n  硬盘容量就是\n\n`heads*sectors*cylinders*512=255*63*5221*512/1000/1000/1000 = 42.94418688G`\n\n  [1]: /img/computer/cipan1.png\n  [2]: /img/computer/cipan2.gif\n  [3]: /img/computer/cipan3.gif\n  [4]: /img/computer/cipan4.png\n","slug":"disk-basic","published":1,"updated":"2018-08-14T09:42:55.169Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjktlsbak0006egh31h70ieq1","content":"<h2 id=\"用AIDA64-Extreme工具看下我的low硬盘\"><a href=\"#用AIDA64-Extreme工具看下我的low硬盘\" class=\"headerlink\" title=\"用AIDA64 Extreme工具看下我的low硬盘\"></a>用<code>AIDA64 Extreme</code>工具看下我的low硬盘</h2><p><img src=\"/img/computer/cipan1.png\" alt=\"图片描述\"></p>\n<h2 id=\"柱面磁头扇区磁道？\"><a href=\"#柱面磁头扇区磁道？\" class=\"headerlink\" title=\"柱面磁头扇区磁道？\"></a>柱面磁头扇区磁道？</h2><p> <em>WTF</em>?</p>\n <a id=\"more\"></a>\n<h2 id=\"一图胜千言\"><a href=\"#一图胜千言\" class=\"headerlink\" title=\"一图胜千言\"></a>一图胜千言</h2><p><img src=\"/img/computer/cipan2.gif\" alt=\"磁盘2\"></p>\n<p><img src=\"/img/computer/cipan3.gif\" alt=\"磁盘3\"></p>\n<p> 在看个二合一版的图</p>\n<p><img src=\"/img/computer/cipan4.png\" alt=\"磁盘4\"></p>\n<h2 id=\"温习下英语\"><a href=\"#温习下英语\" class=\"headerlink\" title=\"温习下英语\"></a>温习下英语</h2><ul>\n<li>磁头（head）</li>\n<li>磁道就是一个圈（track）</li>\n<li>柱面就是多个磁道号相同的圈组成的（cylinder）</li>\n<li>扇区（sector）</li>\n<li>圆盘（platter）</li>\n</ul>\n<h2 id=\"再回到我的low硬盘\"><a href=\"#再回到我的low硬盘\" class=\"headerlink\" title=\"再回到我的low硬盘\"></a>再回到我的low硬盘</h2><p> 存储容量 ＝ 磁头数 × 磁道(柱面)数 × 每道扇区数 × 每扇区字节数</p>\n<p> <code>248085*63*16*512/1000/1000 = 128 035.67616M</code></p>\n<p> 注意512是Byte</p>\n<h2 id=\"简单说一下\"><a href=\"#简单说一下\" class=\"headerlink\" title=\"简单说一下\"></a>简单说一下</h2><p> 磁盘由N个盘片构成，每个盘片一般有两面，一面一个磁头，两面都可以存储数据</p>\n<p> 磁道号相同的组成一个柱面，柱面是我们硬盘分区时候最小单位。</p>\n<p> sector 扇区 磁道按512Byte分成若干扇区，计算机对硬盘读写，是按扇区为最小单位。<br> 而一般文件系统中的BLOCK为KB，通常为4KB.（现在有的硬盘每个扇区有4K了）</p>\n<p> 可以这么说：即使读一个字节，也必须把这512字节全部读入内存</p>\n<h2 id=\"在linux上看一把硬盘\"><a href=\"#在linux上看一把硬盘\" class=\"headerlink\" title=\"在linux上看一把硬盘\"></a>在linux上看一把硬盘</h2><pre><code>root@lyh:~# fdisk -l\nDisk /dev/xvda: 42.9 GB, 42949672960 bytes\n255 heads, 63 sectors/track, 5221 cylinders, total 83886080 sectors\n</code></pre><p>  硬盘容量就是</p>\n<p><code>heads*sectors*cylinders*512=255*63*5221*512/1000/1000/1000 = 42.94418688G</code></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"用AIDA64-Extreme工具看下我的low硬盘\"><a href=\"#用AIDA64-Extreme工具看下我的low硬盘\" class=\"headerlink\" title=\"用AIDA64 Extreme工具看下我的low硬盘\"></a>用<code>AIDA64 Extreme</code>工具看下我的low硬盘</h2><p><img src=\"/img/computer/cipan1.png\" alt=\"图片描述\"></p>\n<h2 id=\"柱面磁头扇区磁道？\"><a href=\"#柱面磁头扇区磁道？\" class=\"headerlink\" title=\"柱面磁头扇区磁道？\"></a>柱面磁头扇区磁道？</h2><p> <em>WTF</em>?</p>","more":"<h2 id=\"一图胜千言\"><a href=\"#一图胜千言\" class=\"headerlink\" title=\"一图胜千言\"></a>一图胜千言</h2><p><img src=\"/img/computer/cipan2.gif\" alt=\"磁盘2\"></p>\n<p><img src=\"/img/computer/cipan3.gif\" alt=\"磁盘3\"></p>\n<p> 在看个二合一版的图</p>\n<p><img src=\"/img/computer/cipan4.png\" alt=\"磁盘4\"></p>\n<h2 id=\"温习下英语\"><a href=\"#温习下英语\" class=\"headerlink\" title=\"温习下英语\"></a>温习下英语</h2><ul>\n<li>磁头（head）</li>\n<li>磁道就是一个圈（track）</li>\n<li>柱面就是多个磁道号相同的圈组成的（cylinder）</li>\n<li>扇区（sector）</li>\n<li>圆盘（platter）</li>\n</ul>\n<h2 id=\"再回到我的low硬盘\"><a href=\"#再回到我的low硬盘\" class=\"headerlink\" title=\"再回到我的low硬盘\"></a>再回到我的low硬盘</h2><p> 存储容量 ＝ 磁头数 × 磁道(柱面)数 × 每道扇区数 × 每扇区字节数</p>\n<p> <code>248085*63*16*512/1000/1000 = 128 035.67616M</code></p>\n<p> 注意512是Byte</p>\n<h2 id=\"简单说一下\"><a href=\"#简单说一下\" class=\"headerlink\" title=\"简单说一下\"></a>简单说一下</h2><p> 磁盘由N个盘片构成，每个盘片一般有两面，一面一个磁头，两面都可以存储数据</p>\n<p> 磁道号相同的组成一个柱面，柱面是我们硬盘分区时候最小单位。</p>\n<p> sector 扇区 磁道按512Byte分成若干扇区，计算机对硬盘读写，是按扇区为最小单位。<br> 而一般文件系统中的BLOCK为KB，通常为4KB.（现在有的硬盘每个扇区有4K了）</p>\n<p> 可以这么说：即使读一个字节，也必须把这512字节全部读入内存</p>\n<h2 id=\"在linux上看一把硬盘\"><a href=\"#在linux上看一把硬盘\" class=\"headerlink\" title=\"在linux上看一把硬盘\"></a>在linux上看一把硬盘</h2><pre><code>root@lyh:~# fdisk -l\nDisk /dev/xvda: 42.9 GB, 42949672960 bytes\n255 heads, 63 sectors/track, 5221 cylinders, total 83886080 sectors\n</code></pre><p>  硬盘容量就是</p>\n<p><code>heads*sectors*cylinders*512=255*63*5221*512/1000/1000/1000 = 42.94418688G</code></p>"},{"title":"计算机科学CS分类","date":"2017-11-04T13:12:03.000Z","_content":"\n经常看到CS这个词，今天偶然下载了知乎刘洋的电子书。再此也敲一下。\n\n### 理论计算机科学\n#### 数据结构和算法\n#### 计算理论\n#### 信息论与编码理论\n#### 编程语言与编译器\n#### 形式化方法\n\n<!-- more -->\n\n### 计算机系统\n#### 计算机体系结构与计算机工程\n#### 操作系统\n#### 并发、并行与分布式系统\n#### 计算机网络\n#### 计算机安全密码学\n#### 数据库\n\n\n### 计算机应用技术\n#### 计算机图形学\n#### 科学计算\n#### 多媒体技术\n#### 数据挖掘\n#### 软件工程\n#### 人工智能\n##### 自助推理\n##### 机器学习\n##### 计算机视觉\n##### 自然语言处理\n\n\n\n\n","source":"_posts/computer-science-summary.md","raw":"######\ntitle: 计算机科学CS分类\ndate: 2017##11##04 21:12:03\ncategories: computer\ntags:\n- 计算机科学\n\n---\n\n经常看到CS这个词，今天偶然下载了知乎刘洋的电子书。再此也敲一下。\n\n### 理论计算机科学\n#### 数据结构和算法\n#### 计算理论\n#### 信息论与编码理论\n#### 编程语言与编译器\n#### 形式化方法\n\n<!-- more -->\n\n### 计算机系统\n#### 计算机体系结构与计算机工程\n#### 操作系统\n#### 并发、并行与分布式系统\n#### 计算机网络\n#### 计算机安全密码学\n#### 数据库\n\n\n### 计算机应用技术\n#### 计算机图形学\n#### 科学计算\n#### 多媒体技术\n#### 数据挖掘\n#### 软件工程\n#### 人工智能\n##### 自助推理\n##### 机器学习\n##### 计算机视觉\n##### 自然语言处理\n\n\n\n\n","slug":"computer-science-summary","published":1,"updated":"2018-08-14T09:42:55.167Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjktlsbal0009egh3nlj7p5dr","content":"<p>经常看到CS这个词，今天偶然下载了知乎刘洋的电子书。再此也敲一下。</p>\n<h3 id=\"理论计算机科学\"><a href=\"#理论计算机科学\" class=\"headerlink\" title=\"理论计算机科学\"></a>理论计算机科学</h3><h4 id=\"数据结构和算法\"><a href=\"#数据结构和算法\" class=\"headerlink\" title=\"数据结构和算法\"></a>数据结构和算法</h4><h4 id=\"计算理论\"><a href=\"#计算理论\" class=\"headerlink\" title=\"计算理论\"></a>计算理论</h4><h4 id=\"信息论与编码理论\"><a href=\"#信息论与编码理论\" class=\"headerlink\" title=\"信息论与编码理论\"></a>信息论与编码理论</h4><h4 id=\"编程语言与编译器\"><a href=\"#编程语言与编译器\" class=\"headerlink\" title=\"编程语言与编译器\"></a>编程语言与编译器</h4><h4 id=\"形式化方法\"><a href=\"#形式化方法\" class=\"headerlink\" title=\"形式化方法\"></a>形式化方法</h4><a id=\"more\"></a>\n<h3 id=\"计算机系统\"><a href=\"#计算机系统\" class=\"headerlink\" title=\"计算机系统\"></a>计算机系统</h3><h4 id=\"计算机体系结构与计算机工程\"><a href=\"#计算机体系结构与计算机工程\" class=\"headerlink\" title=\"计算机体系结构与计算机工程\"></a>计算机体系结构与计算机工程</h4><h4 id=\"操作系统\"><a href=\"#操作系统\" class=\"headerlink\" title=\"操作系统\"></a>操作系统</h4><h4 id=\"并发、并行与分布式系统\"><a href=\"#并发、并行与分布式系统\" class=\"headerlink\" title=\"并发、并行与分布式系统\"></a>并发、并行与分布式系统</h4><h4 id=\"计算机网络\"><a href=\"#计算机网络\" class=\"headerlink\" title=\"计算机网络\"></a>计算机网络</h4><h4 id=\"计算机安全密码学\"><a href=\"#计算机安全密码学\" class=\"headerlink\" title=\"计算机安全密码学\"></a>计算机安全密码学</h4><h4 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a>数据库</h4><h3 id=\"计算机应用技术\"><a href=\"#计算机应用技术\" class=\"headerlink\" title=\"计算机应用技术\"></a>计算机应用技术</h3><h4 id=\"计算机图形学\"><a href=\"#计算机图形学\" class=\"headerlink\" title=\"计算机图形学\"></a>计算机图形学</h4><h4 id=\"科学计算\"><a href=\"#科学计算\" class=\"headerlink\" title=\"科学计算\"></a>科学计算</h4><h4 id=\"多媒体技术\"><a href=\"#多媒体技术\" class=\"headerlink\" title=\"多媒体技术\"></a>多媒体技术</h4><h4 id=\"数据挖掘\"><a href=\"#数据挖掘\" class=\"headerlink\" title=\"数据挖掘\"></a>数据挖掘</h4><h4 id=\"软件工程\"><a href=\"#软件工程\" class=\"headerlink\" title=\"软件工程\"></a>软件工程</h4><h4 id=\"人工智能\"><a href=\"#人工智能\" class=\"headerlink\" title=\"人工智能\"></a>人工智能</h4><h5 id=\"自助推理\"><a href=\"#自助推理\" class=\"headerlink\" title=\"自助推理\"></a>自助推理</h5><h5 id=\"机器学习\"><a href=\"#机器学习\" class=\"headerlink\" title=\"机器学习\"></a>机器学习</h5><h5 id=\"计算机视觉\"><a href=\"#计算机视觉\" class=\"headerlink\" title=\"计算机视觉\"></a>计算机视觉</h5><h5 id=\"自然语言处理\"><a href=\"#自然语言处理\" class=\"headerlink\" title=\"自然语言处理\"></a>自然语言处理</h5>","site":{"data":{}},"excerpt":"<p>经常看到CS这个词，今天偶然下载了知乎刘洋的电子书。再此也敲一下。</p>\n<h3 id=\"理论计算机科学\"><a href=\"#理论计算机科学\" class=\"headerlink\" title=\"理论计算机科学\"></a>理论计算机科学</h3><h4 id=\"数据结构和算法\"><a href=\"#数据结构和算法\" class=\"headerlink\" title=\"数据结构和算法\"></a>数据结构和算法</h4><h4 id=\"计算理论\"><a href=\"#计算理论\" class=\"headerlink\" title=\"计算理论\"></a>计算理论</h4><h4 id=\"信息论与编码理论\"><a href=\"#信息论与编码理论\" class=\"headerlink\" title=\"信息论与编码理论\"></a>信息论与编码理论</h4><h4 id=\"编程语言与编译器\"><a href=\"#编程语言与编译器\" class=\"headerlink\" title=\"编程语言与编译器\"></a>编程语言与编译器</h4><h4 id=\"形式化方法\"><a href=\"#形式化方法\" class=\"headerlink\" title=\"形式化方法\"></a>形式化方法</h4>","more":"<h3 id=\"计算机系统\"><a href=\"#计算机系统\" class=\"headerlink\" title=\"计算机系统\"></a>计算机系统</h3><h4 id=\"计算机体系结构与计算机工程\"><a href=\"#计算机体系结构与计算机工程\" class=\"headerlink\" title=\"计算机体系结构与计算机工程\"></a>计算机体系结构与计算机工程</h4><h4 id=\"操作系统\"><a href=\"#操作系统\" class=\"headerlink\" title=\"操作系统\"></a>操作系统</h4><h4 id=\"并发、并行与分布式系统\"><a href=\"#并发、并行与分布式系统\" class=\"headerlink\" title=\"并发、并行与分布式系统\"></a>并发、并行与分布式系统</h4><h4 id=\"计算机网络\"><a href=\"#计算机网络\" class=\"headerlink\" title=\"计算机网络\"></a>计算机网络</h4><h4 id=\"计算机安全密码学\"><a href=\"#计算机安全密码学\" class=\"headerlink\" title=\"计算机安全密码学\"></a>计算机安全密码学</h4><h4 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a>数据库</h4><h3 id=\"计算机应用技术\"><a href=\"#计算机应用技术\" class=\"headerlink\" title=\"计算机应用技术\"></a>计算机应用技术</h3><h4 id=\"计算机图形学\"><a href=\"#计算机图形学\" class=\"headerlink\" title=\"计算机图形学\"></a>计算机图形学</h4><h4 id=\"科学计算\"><a href=\"#科学计算\" class=\"headerlink\" title=\"科学计算\"></a>科学计算</h4><h4 id=\"多媒体技术\"><a href=\"#多媒体技术\" class=\"headerlink\" title=\"多媒体技术\"></a>多媒体技术</h4><h4 id=\"数据挖掘\"><a href=\"#数据挖掘\" class=\"headerlink\" title=\"数据挖掘\"></a>数据挖掘</h4><h4 id=\"软件工程\"><a href=\"#软件工程\" class=\"headerlink\" title=\"软件工程\"></a>软件工程</h4><h4 id=\"人工智能\"><a href=\"#人工智能\" class=\"headerlink\" title=\"人工智能\"></a>人工智能</h4><h5 id=\"自助推理\"><a href=\"#自助推理\" class=\"headerlink\" title=\"自助推理\"></a>自助推理</h5><h5 id=\"机器学习\"><a href=\"#机器学习\" class=\"headerlink\" title=\"机器学习\"></a>机器学习</h5><h5 id=\"计算机视觉\"><a href=\"#计算机视觉\" class=\"headerlink\" title=\"计算机视觉\"></a>计算机视觉</h5><h5 id=\"自然语言处理\"><a href=\"#自然语言处理\" class=\"headerlink\" title=\"自然语言处理\"></a>自然语言处理</h5>"},{"title":"C根据标准输入解析为json","date":"2017-11-26T07:25:03.000Z","_content":"\n\n## 知识点：\n标准输入读入以及`scanf`返回值及其参数的使用\n<!-- more -->\n\n\n## 原书版本\n{% codeblock lang:c %}\n// volvo1.cpp: 定义控制台应用程序的入口点。\n#include \"stdafx.h\"\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n//head frist c page 106\nint main() {\n\tfloat latitude;\n\tfloat longitude;\n\tchar info[80];\n\tint started = 0;\n\n\tputs(\"data=[\");\n\twhile (scanf(\"%f,%f,%79[^\\n]\", &latitude, &longitude, info) == 3) {\n\t\tif (started) {\n\t\t\tprintf(\",\\n\");\n\t\t}\n\t\t\t\n\t\telse {\n\t\t\tstarted = 1;\n\t\t}\n\t\t\t\n\t\tprintf(\"{latitude: %f, longitude: %f, info: '%s'}\", latitude, longitude, info);\n\t}\n\tputs(\"\\n]\");\n\treturn 0;\n}\n{% endcodeblock %}\n\n## 结果：\n\n```\ndata=[\n12321.123,21321.123,asdffd\n{latitude: 12321.123047, longitude: 21321.123047, info: 'asdffd'}12312.12,213123.213,sdafsdf\n,\n{latitude: 12312.120117, longitude: 213123.218750, info: 'sdafsdf'}^D\n\n]\n请按任意键继续. . .\n\n```\n\n## 我的版本：\n{% codeblock lang:c %}\n// volvo1.cpp: 定义控制台应用程序的入口点。\n\n\n#include \"stdafx.h\"\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n//head frist c page 106\nint main() {\n\n\tchar name[40];\n\tchar album[40];\n\tint year;\n\tchar comments[90];\n\tint startd = 0;\n\tputs(\"data=[\");\n\twhile (scanf(\"%[^,], %[^,], %i, %89[^\\n]\", name, album, &year, comments) == 4) {\n\t\tif (startd) {\n\t\t\tprintf(\"，\\n\");\n\t\t}\n\t\telse {\n\t\t\tstartd = 1;\n\t\t}\n\t   printf(\"{歌曲名称:'%s', 所属专辑：'%s',出品日期:%i，歌词: '%s'}\", name, album, year, comments);\n\t}\n\tputs(\"\\n]\");\n\treturn 0;\n}\n\n{% endcodeblock %}\n\n## 结果：\n\n```\ndata=[\n简单爱,范特西,2012,我想就这样...\n{歌曲名称:'简单爱', 所属专辑：'范特西',出品日期:2012，歌词: '我想就这样...'}简单爱,范特西,2012,我想就这样...\n，\n{歌曲名称:'\n简单爱', 所属专辑：'范特西',出品日期:2012，歌词: '我想就这样...'}简单爱,范特西,2012,我想就这样...\n，\n{歌曲名称:'\n\n简单爱', 所属专辑：'范特西',出品日期:2012，歌词: '我想就这样...'},,\n\n]\n请按任意键继续. . .\n\n```\n\n## 结论：\n\nscanf参数真多。。先体会体会~\n\n\n{% codeblock lang:c %}\n#include <stdio.h>  \nbool skip(){  \n    scanf(\"%*[^0-9]\");  \n    return true;  \n}  \n  \nint main()  \n{  \n    int n;  \n    while(skip() && scanf(\"%d\", &n)!=EOF)  \n        printf(\"%d\\n\", n);  \n    return 0;  \n}  \n{% endcodeblock %}\n\n\n\n\n\n\n","source":"_posts/head_first_c_106.md","raw":"---\ntitle: C根据标准输入解析为json\ndate: 2017-11-26 15:25:03\ncategories: C\ntags:\n- HEAD_FIRST_C\n---\n\n\n## 知识点：\n标准输入读入以及`scanf`返回值及其参数的使用\n<!-- more -->\n\n\n## 原书版本\n{% codeblock lang:c %}\n// volvo1.cpp: 定义控制台应用程序的入口点。\n#include \"stdafx.h\"\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n//head frist c page 106\nint main() {\n\tfloat latitude;\n\tfloat longitude;\n\tchar info[80];\n\tint started = 0;\n\n\tputs(\"data=[\");\n\twhile (scanf(\"%f,%f,%79[^\\n]\", &latitude, &longitude, info) == 3) {\n\t\tif (started) {\n\t\t\tprintf(\",\\n\");\n\t\t}\n\t\t\t\n\t\telse {\n\t\t\tstarted = 1;\n\t\t}\n\t\t\t\n\t\tprintf(\"{latitude: %f, longitude: %f, info: '%s'}\", latitude, longitude, info);\n\t}\n\tputs(\"\\n]\");\n\treturn 0;\n}\n{% endcodeblock %}\n\n## 结果：\n\n```\ndata=[\n12321.123,21321.123,asdffd\n{latitude: 12321.123047, longitude: 21321.123047, info: 'asdffd'}12312.12,213123.213,sdafsdf\n,\n{latitude: 12312.120117, longitude: 213123.218750, info: 'sdafsdf'}^D\n\n]\n请按任意键继续. . .\n\n```\n\n## 我的版本：\n{% codeblock lang:c %}\n// volvo1.cpp: 定义控制台应用程序的入口点。\n\n\n#include \"stdafx.h\"\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n//head frist c page 106\nint main() {\n\n\tchar name[40];\n\tchar album[40];\n\tint year;\n\tchar comments[90];\n\tint startd = 0;\n\tputs(\"data=[\");\n\twhile (scanf(\"%[^,], %[^,], %i, %89[^\\n]\", name, album, &year, comments) == 4) {\n\t\tif (startd) {\n\t\t\tprintf(\"，\\n\");\n\t\t}\n\t\telse {\n\t\t\tstartd = 1;\n\t\t}\n\t   printf(\"{歌曲名称:'%s', 所属专辑：'%s',出品日期:%i，歌词: '%s'}\", name, album, year, comments);\n\t}\n\tputs(\"\\n]\");\n\treturn 0;\n}\n\n{% endcodeblock %}\n\n## 结果：\n\n```\ndata=[\n简单爱,范特西,2012,我想就这样...\n{歌曲名称:'简单爱', 所属专辑：'范特西',出品日期:2012，歌词: '我想就这样...'}简单爱,范特西,2012,我想就这样...\n，\n{歌曲名称:'\n简单爱', 所属专辑：'范特西',出品日期:2012，歌词: '我想就这样...'}简单爱,范特西,2012,我想就这样...\n，\n{歌曲名称:'\n\n简单爱', 所属专辑：'范特西',出品日期:2012，歌词: '我想就这样...'},,\n\n]\n请按任意键继续. . .\n\n```\n\n## 结论：\n\nscanf参数真多。。先体会体会~\n\n\n{% codeblock lang:c %}\n#include <stdio.h>  \nbool skip(){  \n    scanf(\"%*[^0-9]\");  \n    return true;  \n}  \n  \nint main()  \n{  \n    int n;  \n    while(skip() && scanf(\"%d\", &n)!=EOF)  \n        printf(\"%d\\n\", n);  \n    return 0;  \n}  \n{% endcodeblock %}\n\n\n\n\n\n\n","slug":"head_first_c_106","published":1,"updated":"2018-08-14T09:42:55.172Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjktlsbam000begh3wgle2qhz","content":"<h2 id=\"知识点：\"><a href=\"#知识点：\" class=\"headerlink\" title=\"知识点：\"></a>知识点：</h2><p>标准输入读入以及<code>scanf</code>返回值及其参数的使用<br><a id=\"more\"></a></p>\n<h2 id=\"原书版本\"><a href=\"#原书版本\" class=\"headerlink\" title=\"原书版本\"></a>原书版本</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// volvo1.cpp: 定义控制台应用程序的入口点。</span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"stdafx.h\"</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string.h&gt;</span></span></div><div class=\"line\"><span class=\"comment\">//head frist c page 106</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">float</span> latitude;</div><div class=\"line\">\t<span class=\"keyword\">float</span> longitude;</div><div class=\"line\">\t<span class=\"keyword\">char</span> info[<span class=\"number\">80</span>];</div><div class=\"line\">\t<span class=\"keyword\">int</span> started = <span class=\"number\">0</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"data=[\"</span>);</div><div class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%f,%f,%79[^\\n]\"</span>, &amp;latitude, &amp;longitude, info) == <span class=\"number\">3</span>) &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (started) &#123;</div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\",\\n\"</span>);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\tstarted = <span class=\"number\">1</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"&#123;latitude: %f, longitude: %f, info: '%s'&#125;\"</span>, latitude, longitude, info);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"\\n]\"</span>);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"结果：\"><a href=\"#结果：\" class=\"headerlink\" title=\"结果：\"></a>结果：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">data=[</div><div class=\"line\">12321.123,21321.123,asdffd</div><div class=\"line\">&#123;latitude: 12321.123047, longitude: 21321.123047, info: &apos;asdffd&apos;&#125;12312.12,213123.213,sdafsdf</div><div class=\"line\">,</div><div class=\"line\">&#123;latitude: 12312.120117, longitude: 213123.218750, info: &apos;sdafsdf&apos;&#125;^D</div><div class=\"line\"></div><div class=\"line\">]</div><div class=\"line\">请按任意键继续. . .</div></pre></td></tr></table></figure>\n<h2 id=\"我的版本：\"><a href=\"#我的版本：\" class=\"headerlink\" title=\"我的版本：\"></a>我的版本：</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// volvo1.cpp: 定义控制台应用程序的入口点。</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"stdafx.h\"</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string.h&gt;</span></span></div><div class=\"line\"><span class=\"comment\">//head frist c page 106</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">char</span> name[<span class=\"number\">40</span>];</div><div class=\"line\">\t<span class=\"keyword\">char</span> album[<span class=\"number\">40</span>];</div><div class=\"line\">\t<span class=\"keyword\">int</span> year;</div><div class=\"line\">\t<span class=\"keyword\">char</span> comments[<span class=\"number\">90</span>];</div><div class=\"line\">\t<span class=\"keyword\">int</span> startd = <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"data=[\"</span>);</div><div class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%[^,], %[^,], %i, %89[^\\n]\"</span>, name, album, &amp;year, comments) == <span class=\"number\">4</span>) &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (startd) &#123;</div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"，\\n\"</span>);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\tstartd = <span class=\"number\">1</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t   <span class=\"built_in\">printf</span>(<span class=\"string\">\"&#123;歌曲名称:'%s', 所属专辑：'%s',出品日期:%i，歌词: '%s'&#125;\"</span>, name, album, year, comments);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"\\n]\"</span>);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div></pre></td></tr></table></figure>\n<h2 id=\"结果：-1\"><a href=\"#结果：-1\" class=\"headerlink\" title=\"结果：\"></a>结果：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">data=[</div><div class=\"line\">简单爱,范特西,2012,我想就这样...</div><div class=\"line\">&#123;歌曲名称:&apos;简单爱&apos;, 所属专辑：&apos;范特西&apos;,出品日期:2012，歌词: &apos;我想就这样...&apos;&#125;简单爱,范特西,2012,我想就这样...</div><div class=\"line\">，</div><div class=\"line\">&#123;歌曲名称:&apos;</div><div class=\"line\">简单爱&apos;, 所属专辑：&apos;范特西&apos;,出品日期:2012，歌词: &apos;我想就这样...&apos;&#125;简单爱,范特西,2012,我想就这样...</div><div class=\"line\">，</div><div class=\"line\">&#123;歌曲名称:&apos;</div><div class=\"line\"></div><div class=\"line\">简单爱&apos;, 所属专辑：&apos;范特西&apos;,出品日期:2012，歌词: &apos;我想就这样...&apos;&#125;,,</div><div class=\"line\"></div><div class=\"line\">]</div><div class=\"line\">请按任意键继续. . .</div></pre></td></tr></table></figure>\n<h2 id=\"结论：\"><a href=\"#结论：\" class=\"headerlink\" title=\"结论：\"></a>结论：</h2><p>scanf参数真多。。先体会体会~</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span>  </span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">skip</span><span class=\"params\">()</span></span>&#123;  </div><div class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%*[^0-9]\"</span>);  </div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;  </div><div class=\"line\">&#125;  </div><div class=\"line\">  </div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span>  </span></div><div class=\"line\">&#123;  </div><div class=\"line\">    <span class=\"keyword\">int</span> n;  </div><div class=\"line\">    <span class=\"keyword\">while</span>(skip() &amp;&amp; <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;n)!=EOF)  </div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>, n);  </div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </div><div class=\"line\">&#125;  </div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"知识点：\"><a href=\"#知识点：\" class=\"headerlink\" title=\"知识点：\"></a>知识点：</h2><p>标准输入读入以及<code>scanf</code>返回值及其参数的使用<br>","more":"</p>\n<h2 id=\"原书版本\"><a href=\"#原书版本\" class=\"headerlink\" title=\"原书版本\"></a>原书版本</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// volvo1.cpp: 定义控制台应用程序的入口点。</span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"stdafx.h\"</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string.h&gt;</span></span></div><div class=\"line\"><span class=\"comment\">//head frist c page 106</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">float</span> latitude;</div><div class=\"line\">\t<span class=\"keyword\">float</span> longitude;</div><div class=\"line\">\t<span class=\"keyword\">char</span> info[<span class=\"number\">80</span>];</div><div class=\"line\">\t<span class=\"keyword\">int</span> started = <span class=\"number\">0</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"data=[\"</span>);</div><div class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%f,%f,%79[^\\n]\"</span>, &amp;latitude, &amp;longitude, info) == <span class=\"number\">3</span>) &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (started) &#123;</div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\",\\n\"</span>);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\tstarted = <span class=\"number\">1</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"&#123;latitude: %f, longitude: %f, info: '%s'&#125;\"</span>, latitude, longitude, info);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"\\n]\"</span>);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"结果：\"><a href=\"#结果：\" class=\"headerlink\" title=\"结果：\"></a>结果：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">data=[</div><div class=\"line\">12321.123,21321.123,asdffd</div><div class=\"line\">&#123;latitude: 12321.123047, longitude: 21321.123047, info: &apos;asdffd&apos;&#125;12312.12,213123.213,sdafsdf</div><div class=\"line\">,</div><div class=\"line\">&#123;latitude: 12312.120117, longitude: 213123.218750, info: &apos;sdafsdf&apos;&#125;^D</div><div class=\"line\"></div><div class=\"line\">]</div><div class=\"line\">请按任意键继续. . .</div></pre></td></tr></table></figure>\n<h2 id=\"我的版本：\"><a href=\"#我的版本：\" class=\"headerlink\" title=\"我的版本：\"></a>我的版本：</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// volvo1.cpp: 定义控制台应用程序的入口点。</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"stdafx.h\"</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string.h&gt;</span></span></div><div class=\"line\"><span class=\"comment\">//head frist c page 106</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">char</span> name[<span class=\"number\">40</span>];</div><div class=\"line\">\t<span class=\"keyword\">char</span> album[<span class=\"number\">40</span>];</div><div class=\"line\">\t<span class=\"keyword\">int</span> year;</div><div class=\"line\">\t<span class=\"keyword\">char</span> comments[<span class=\"number\">90</span>];</div><div class=\"line\">\t<span class=\"keyword\">int</span> startd = <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"data=[\"</span>);</div><div class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%[^,], %[^,], %i, %89[^\\n]\"</span>, name, album, &amp;year, comments) == <span class=\"number\">4</span>) &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (startd) &#123;</div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"，\\n\"</span>);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\tstartd = <span class=\"number\">1</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t   <span class=\"built_in\">printf</span>(<span class=\"string\">\"&#123;歌曲名称:'%s', 所属专辑：'%s',出品日期:%i，歌词: '%s'&#125;\"</span>, name, album, year, comments);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"\\n]\"</span>);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div></pre></td></tr></table></figure>\n<h2 id=\"结果：-1\"><a href=\"#结果：-1\" class=\"headerlink\" title=\"结果：\"></a>结果：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">data=[</div><div class=\"line\">简单爱,范特西,2012,我想就这样...</div><div class=\"line\">&#123;歌曲名称:&apos;简单爱&apos;, 所属专辑：&apos;范特西&apos;,出品日期:2012，歌词: &apos;我想就这样...&apos;&#125;简单爱,范特西,2012,我想就这样...</div><div class=\"line\">，</div><div class=\"line\">&#123;歌曲名称:&apos;</div><div class=\"line\">简单爱&apos;, 所属专辑：&apos;范特西&apos;,出品日期:2012，歌词: &apos;我想就这样...&apos;&#125;简单爱,范特西,2012,我想就这样...</div><div class=\"line\">，</div><div class=\"line\">&#123;歌曲名称:&apos;</div><div class=\"line\"></div><div class=\"line\">简单爱&apos;, 所属专辑：&apos;范特西&apos;,出品日期:2012，歌词: &apos;我想就这样...&apos;&#125;,,</div><div class=\"line\"></div><div class=\"line\">]</div><div class=\"line\">请按任意键继续. . .</div></pre></td></tr></table></figure>\n<h2 id=\"结论：\"><a href=\"#结论：\" class=\"headerlink\" title=\"结论：\"></a>结论：</h2><p>scanf参数真多。。先体会体会~</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span>  </span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">skip</span><span class=\"params\">()</span></span>&#123;  </div><div class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%*[^0-9]\"</span>);  </div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;  </div><div class=\"line\">&#125;  </div><div class=\"line\">  </div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span>  </div><div class=\"line\"></span>&#123;  </div><div class=\"line\">    <span class=\"keyword\">int</span> n;  </div><div class=\"line\">    <span class=\"keyword\">while</span>(skip() &amp;&amp; <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;n)!=EOF)  </div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>, n);  </div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </div><div class=\"line\">&#125;  </div></pre></td></tr></table></figure>"},{"title":"字符数组+1与指针+1","date":"2017-11-04T13:12:03.000Z","_content":"\n\n\n## 字符数组+1代码\n\n{% codeblock lang:c %}\n#include <stdio.h>\n\nint main(){\n\n  char mystr[]=\"Abcef\";\n  printf(\"size of mystr=%i\\n\",sizeof(mystr));\n\n  printf(\"mystr[0]，他的值为%c:\\n\",mystr[0]);\n  printf(\"&mystr[0]，他的内存地址值为%i:\\n\",&mystr);\n\n  printf(\"mystr[1]，他的值为%c:\\n\",mystr[1]);\n  printf(\"&mystr[1]，他的内存地址值为%i:\\n\",&mystr+1);\n\n  printf(\"mystr[2]，他的值为%c:\\n\",mystr[2]);\n  printf(\"&mystr[2]，他的内存地址值为%i:\\n\",&mystr+2);\n\n  printf(\"mystr[3]，他的值为%c:\\n\",mystr[3]);\n  printf(\"&mystr[3]，他的内存地址值为%i:\\n\",&mystr+3);\n\n  return 0;\n}\n{% endcodeblock %}\n <!-- more -->\n\n## 字符数组+1代码 结果\n\n```\nsize of mystr=6\nmystr[0]，他的值为A:\n&mystr[0]，他的内存地址值为1703736:\nmystr[1]，他的值为b:\n&mystr[1]，他的内存地址值为1703742:\nmystr[2]，他的值为c:\n&mystr[2]，他的内存地址值为1703748:\nmystr[3]，他的值为e:\n&mystr[3]，他的内存地址值为1703754:\nPress any key to continue\n```\n\n## 指针+1代码\n\n{% codeblock lang:c %}\n\n#include <stdio.h>\n\nint main(){\n  char *mystr=\"ABC\";\n  printf(\"size of mystr=%i\\n\",sizeof(mystr));\n  printf(\"mystr[0]，他的值为%c:\\n\",mystr[0]);\n  printf(\"&mystr[0]，他的内存地址值为%i:\\n\",&mystr);\n  printf(\"mystr[1]，他的值为%c:\\n\",mystr[1]);\n  printf(\"&mystr[1]，他的内存地址值为%i:\\n\",&mystr+1);\n  printf(\"mystr[2]，他的值为%c:\\n\",mystr[2]);\n  printf(\"&mystr[2]，他的内存地址值为%i:\\n\",&mystr+2);\n  printf(\"mystr[3]，他的值为%c:\\n\",mystr[3]);\n  printf(\"&mystr[3]，他的内存地址值为%i:\\n\",&mystr+3);\n  return 0;\n}\n{% endcodeblock %}\n## 指针+1代码 结果\n```\nsize of mystr=4\nmystr[0]，他的值为A:\n&mystr[0]，他的内存地址值为1703740:\nmystr[1]，他的值为B:\n&mystr[1]，他的内存地址值为1703744:\nmystr[2]，他的值为C:\n&mystr[2]，他的内存地址值为1703748:\nmystr[3]，他的值为\n```\n## 结论：\n指针的+1，只对当前指针所占字节数的+1\n字符数组的+1，是对当前数组指针的sizeof+1\n","source":"_posts/head_first_c_.md","raw":"---\ntitle: 字符数组+1与指针+1\ndate: 2017-11-04 21:12:03\ncategories: C\ntags:\n- 数组与指针\n---\n\n\n\n## 字符数组+1代码\n\n{% codeblock lang:c %}\n#include <stdio.h>\n\nint main(){\n\n  char mystr[]=\"Abcef\";\n  printf(\"size of mystr=%i\\n\",sizeof(mystr));\n\n  printf(\"mystr[0]，他的值为%c:\\n\",mystr[0]);\n  printf(\"&mystr[0]，他的内存地址值为%i:\\n\",&mystr);\n\n  printf(\"mystr[1]，他的值为%c:\\n\",mystr[1]);\n  printf(\"&mystr[1]，他的内存地址值为%i:\\n\",&mystr+1);\n\n  printf(\"mystr[2]，他的值为%c:\\n\",mystr[2]);\n  printf(\"&mystr[2]，他的内存地址值为%i:\\n\",&mystr+2);\n\n  printf(\"mystr[3]，他的值为%c:\\n\",mystr[3]);\n  printf(\"&mystr[3]，他的内存地址值为%i:\\n\",&mystr+3);\n\n  return 0;\n}\n{% endcodeblock %}\n <!-- more -->\n\n## 字符数组+1代码 结果\n\n```\nsize of mystr=6\nmystr[0]，他的值为A:\n&mystr[0]，他的内存地址值为1703736:\nmystr[1]，他的值为b:\n&mystr[1]，他的内存地址值为1703742:\nmystr[2]，他的值为c:\n&mystr[2]，他的内存地址值为1703748:\nmystr[3]，他的值为e:\n&mystr[3]，他的内存地址值为1703754:\nPress any key to continue\n```\n\n## 指针+1代码\n\n{% codeblock lang:c %}\n\n#include <stdio.h>\n\nint main(){\n  char *mystr=\"ABC\";\n  printf(\"size of mystr=%i\\n\",sizeof(mystr));\n  printf(\"mystr[0]，他的值为%c:\\n\",mystr[0]);\n  printf(\"&mystr[0]，他的内存地址值为%i:\\n\",&mystr);\n  printf(\"mystr[1]，他的值为%c:\\n\",mystr[1]);\n  printf(\"&mystr[1]，他的内存地址值为%i:\\n\",&mystr+1);\n  printf(\"mystr[2]，他的值为%c:\\n\",mystr[2]);\n  printf(\"&mystr[2]，他的内存地址值为%i:\\n\",&mystr+2);\n  printf(\"mystr[3]，他的值为%c:\\n\",mystr[3]);\n  printf(\"&mystr[3]，他的内存地址值为%i:\\n\",&mystr+3);\n  return 0;\n}\n{% endcodeblock %}\n## 指针+1代码 结果\n```\nsize of mystr=4\nmystr[0]，他的值为A:\n&mystr[0]，他的内存地址值为1703740:\nmystr[1]，他的值为B:\n&mystr[1]，他的内存地址值为1703744:\nmystr[2]，他的值为C:\n&mystr[2]，他的内存地址值为1703748:\nmystr[3]，他的值为\n```\n## 结论：\n指针的+1，只对当前指针所占字节数的+1\n字符数组的+1，是对当前数组指针的sizeof+1\n","slug":"head_first_c_","published":1,"updated":"2018-08-14T09:42:55.170Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjktlsban000fegh3woe0q0xt","content":"<h2 id=\"字符数组-1代码\"><a href=\"#字符数组-1代码\" class=\"headerlink\" title=\"字符数组+1代码\"></a>字符数组+1代码</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">char</span> mystr[]=<span class=\"string\">\"Abcef\"</span>;</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"size of mystr=%i\\n\"</span>,<span class=\"keyword\">sizeof</span>(mystr));</div><div class=\"line\"></div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"mystr[0]，他的值为%c:\\n\"</span>,mystr[<span class=\"number\">0</span>]);</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"&amp;mystr[0]，他的内存地址值为%i:\\n\"</span>,&amp;mystr);</div><div class=\"line\"></div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"mystr[1]，他的值为%c:\\n\"</span>,mystr[<span class=\"number\">1</span>]);</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"&amp;mystr[1]，他的内存地址值为%i:\\n\"</span>,&amp;mystr+<span class=\"number\">1</span>);</div><div class=\"line\"></div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"mystr[2]，他的值为%c:\\n\"</span>,mystr[<span class=\"number\">2</span>]);</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"&amp;mystr[2]，他的内存地址值为%i:\\n\"</span>,&amp;mystr+<span class=\"number\">2</span>);</div><div class=\"line\"></div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"mystr[3]，他的值为%c:\\n\"</span>,mystr[<span class=\"number\">3</span>]);</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"&amp;mystr[3]，他的内存地址值为%i:\\n\"</span>,&amp;mystr+<span class=\"number\">3</span>);</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n <a id=\"more\"></a>\n<h2 id=\"字符数组-1代码-结果\"><a href=\"#字符数组-1代码-结果\" class=\"headerlink\" title=\"字符数组+1代码 结果\"></a>字符数组+1代码 结果</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">size of mystr=6</div><div class=\"line\">mystr[0]，他的值为A:</div><div class=\"line\">&amp;mystr[0]，他的内存地址值为1703736:</div><div class=\"line\">mystr[1]，他的值为b:</div><div class=\"line\">&amp;mystr[1]，他的内存地址值为1703742:</div><div class=\"line\">mystr[2]，他的值为c:</div><div class=\"line\">&amp;mystr[2]，他的内存地址值为1703748:</div><div class=\"line\">mystr[3]，他的值为e:</div><div class=\"line\">&amp;mystr[3]，他的内存地址值为1703754:</div><div class=\"line\">Press any key to continue</div></pre></td></tr></table></figure>\n<h2 id=\"指针-1代码\"><a href=\"#指针-1代码\" class=\"headerlink\" title=\"指针+1代码\"></a>指针+1代码</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">  <span class=\"keyword\">char</span> *mystr=<span class=\"string\">\"ABC\"</span>;</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"size of mystr=%i\\n\"</span>,<span class=\"keyword\">sizeof</span>(mystr));</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"mystr[0]，他的值为%c:\\n\"</span>,mystr[<span class=\"number\">0</span>]);</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"&amp;mystr[0]，他的内存地址值为%i:\\n\"</span>,&amp;mystr);</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"mystr[1]，他的值为%c:\\n\"</span>,mystr[<span class=\"number\">1</span>]);</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"&amp;mystr[1]，他的内存地址值为%i:\\n\"</span>,&amp;mystr+<span class=\"number\">1</span>);</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"mystr[2]，他的值为%c:\\n\"</span>,mystr[<span class=\"number\">2</span>]);</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"&amp;mystr[2]，他的内存地址值为%i:\\n\"</span>,&amp;mystr+<span class=\"number\">2</span>);</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"mystr[3]，他的值为%c:\\n\"</span>,mystr[<span class=\"number\">3</span>]);</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"&amp;mystr[3]，他的内存地址值为%i:\\n\"</span>,&amp;mystr+<span class=\"number\">3</span>);</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"指针-1代码-结果\"><a href=\"#指针-1代码-结果\" class=\"headerlink\" title=\"指针+1代码 结果\"></a>指针+1代码 结果</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">size of mystr=4</div><div class=\"line\">mystr[0]，他的值为A:</div><div class=\"line\">&amp;mystr[0]，他的内存地址值为1703740:</div><div class=\"line\">mystr[1]，他的值为B:</div><div class=\"line\">&amp;mystr[1]，他的内存地址值为1703744:</div><div class=\"line\">mystr[2]，他的值为C:</div><div class=\"line\">&amp;mystr[2]，他的内存地址值为1703748:</div><div class=\"line\">mystr[3]，他的值为</div></pre></td></tr></table></figure>\n<h2 id=\"结论：\"><a href=\"#结论：\" class=\"headerlink\" title=\"结论：\"></a>结论：</h2><p>指针的+1，只对当前指针所占字节数的+1<br>字符数组的+1，是对当前数组指针的sizeof+1</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"字符数组-1代码\"><a href=\"#字符数组-1代码\" class=\"headerlink\" title=\"字符数组+1代码\"></a>字符数组+1代码</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">char</span> mystr[]=<span class=\"string\">\"Abcef\"</span>;</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"size of mystr=%i\\n\"</span>,<span class=\"keyword\">sizeof</span>(mystr));</div><div class=\"line\"></div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"mystr[0]，他的值为%c:\\n\"</span>,mystr[<span class=\"number\">0</span>]);</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"&amp;mystr[0]，他的内存地址值为%i:\\n\"</span>,&amp;mystr);</div><div class=\"line\"></div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"mystr[1]，他的值为%c:\\n\"</span>,mystr[<span class=\"number\">1</span>]);</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"&amp;mystr[1]，他的内存地址值为%i:\\n\"</span>,&amp;mystr+<span class=\"number\">1</span>);</div><div class=\"line\"></div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"mystr[2]，他的值为%c:\\n\"</span>,mystr[<span class=\"number\">2</span>]);</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"&amp;mystr[2]，他的内存地址值为%i:\\n\"</span>,&amp;mystr+<span class=\"number\">2</span>);</div><div class=\"line\"></div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"mystr[3]，他的值为%c:\\n\"</span>,mystr[<span class=\"number\">3</span>]);</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"&amp;mystr[3]，他的内存地址值为%i:\\n\"</span>,&amp;mystr+<span class=\"number\">3</span>);</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","more":"<h2 id=\"字符数组-1代码-结果\"><a href=\"#字符数组-1代码-结果\" class=\"headerlink\" title=\"字符数组+1代码 结果\"></a>字符数组+1代码 结果</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">size of mystr=6</div><div class=\"line\">mystr[0]，他的值为A:</div><div class=\"line\">&amp;mystr[0]，他的内存地址值为1703736:</div><div class=\"line\">mystr[1]，他的值为b:</div><div class=\"line\">&amp;mystr[1]，他的内存地址值为1703742:</div><div class=\"line\">mystr[2]，他的值为c:</div><div class=\"line\">&amp;mystr[2]，他的内存地址值为1703748:</div><div class=\"line\">mystr[3]，他的值为e:</div><div class=\"line\">&amp;mystr[3]，他的内存地址值为1703754:</div><div class=\"line\">Press any key to continue</div></pre></td></tr></table></figure>\n<h2 id=\"指针-1代码\"><a href=\"#指针-1代码\" class=\"headerlink\" title=\"指针+1代码\"></a>指针+1代码</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">  <span class=\"keyword\">char</span> *mystr=<span class=\"string\">\"ABC\"</span>;</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"size of mystr=%i\\n\"</span>,<span class=\"keyword\">sizeof</span>(mystr));</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"mystr[0]，他的值为%c:\\n\"</span>,mystr[<span class=\"number\">0</span>]);</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"&amp;mystr[0]，他的内存地址值为%i:\\n\"</span>,&amp;mystr);</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"mystr[1]，他的值为%c:\\n\"</span>,mystr[<span class=\"number\">1</span>]);</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"&amp;mystr[1]，他的内存地址值为%i:\\n\"</span>,&amp;mystr+<span class=\"number\">1</span>);</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"mystr[2]，他的值为%c:\\n\"</span>,mystr[<span class=\"number\">2</span>]);</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"&amp;mystr[2]，他的内存地址值为%i:\\n\"</span>,&amp;mystr+<span class=\"number\">2</span>);</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"mystr[3]，他的值为%c:\\n\"</span>,mystr[<span class=\"number\">3</span>]);</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"&amp;mystr[3]，他的内存地址值为%i:\\n\"</span>,&amp;mystr+<span class=\"number\">3</span>);</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"指针-1代码-结果\"><a href=\"#指针-1代码-结果\" class=\"headerlink\" title=\"指针+1代码 结果\"></a>指针+1代码 结果</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">size of mystr=4</div><div class=\"line\">mystr[0]，他的值为A:</div><div class=\"line\">&amp;mystr[0]，他的内存地址值为1703740:</div><div class=\"line\">mystr[1]，他的值为B:</div><div class=\"line\">&amp;mystr[1]，他的内存地址值为1703744:</div><div class=\"line\">mystr[2]，他的值为C:</div><div class=\"line\">&amp;mystr[2]，他的内存地址值为1703748:</div><div class=\"line\">mystr[3]，他的值为</div></pre></td></tr></table></figure>\n<h2 id=\"结论：\"><a href=\"#结论：\" class=\"headerlink\" title=\"结论：\"></a>结论：</h2><p>指针的+1，只对当前指针所占字节数的+1<br>字符数组的+1，是对当前数组指针的sizeof+1</p>"},{"title":"C语言str_reverse实例","date":"2017-11-25T00:25:03.000Z","_content":"## 知识点：\n字符数组的字符串指针反转\n<!-- more -->\n\n{% codeblock lang:c %}\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\n//head frist c page 98\n\nvoid print_reverse(char *s) {\n\n\tsize_t len = strlen(s);\n\t//指针相加，t为s对应指针的最后一个\n\tchar *t = s + len - 1;\n\n\t//最后一个肯定大于第一个s指针指向的位置，\n\twhile (t >= s) {\n\t\tprintf(\"%c\",*t);\n\t\tt = t - 1;\n\t}\n\t//puts(\"\") 类似于printf(\"%s\\n\",s);pust在字符末尾会自动输出一个回车符\n\tputs(\"我隔开了\");\n\tputs (\"\");\n}\nint main()\n{\n\tchar letter[] = \"abcd\";\n\tprint_reverse(letter);\n\treturn 0;\n}\n\n{% endcodeblock %}\n\n## 结果：\n\n```\ndcba我隔开了\n\n请按任意键继续. . .\n\n```\n","source":"_posts/head_firstc_str_reverse_98.md","raw":"\n---\ntitle: C语言str_reverse实例\ndate: 2017-11-25 08:25:03\ncategories: C\ntags:\n- HEAD_FIRST_C\n---\n## 知识点：\n字符数组的字符串指针反转\n<!-- more -->\n\n{% codeblock lang:c %}\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\n//head frist c page 98\n\nvoid print_reverse(char *s) {\n\n\tsize_t len = strlen(s);\n\t//指针相加，t为s对应指针的最后一个\n\tchar *t = s + len - 1;\n\n\t//最后一个肯定大于第一个s指针指向的位置，\n\twhile (t >= s) {\n\t\tprintf(\"%c\",*t);\n\t\tt = t - 1;\n\t}\n\t//puts(\"\") 类似于printf(\"%s\\n\",s);pust在字符末尾会自动输出一个回车符\n\tputs(\"我隔开了\");\n\tputs (\"\");\n}\nint main()\n{\n\tchar letter[] = \"abcd\";\n\tprint_reverse(letter);\n\treturn 0;\n}\n\n{% endcodeblock %}\n\n## 结果：\n\n```\ndcba我隔开了\n\n请按任意键继续. . .\n\n```\n","slug":"head_firstc_str_reverse_98","published":1,"updated":"2018-08-14T09:42:55.174Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjktlsbao000iegh3m3p8inul","content":"<h2 id=\"知识点：\"><a href=\"#知识点：\" class=\"headerlink\" title=\"知识点：\"></a>知识点：</h2><p>字符数组的字符串指针反转<br><a id=\"more\"></a></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//head frist c page 98</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">print_reverse</span><span class=\"params\">(<span class=\"keyword\">char</span> *s)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">size_t</span> len = <span class=\"built_in\">strlen</span>(s);</div><div class=\"line\">\t<span class=\"comment\">//指针相加，t为s对应指针的最后一个</span></div><div class=\"line\">\t<span class=\"keyword\">char</span> *t = s + len - <span class=\"number\">1</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//最后一个肯定大于第一个s指针指向的位置，</span></div><div class=\"line\">\t<span class=\"keyword\">while</span> (t &gt;= s) &#123;</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%c\"</span>,*t);</div><div class=\"line\">\t\tt = t - <span class=\"number\">1</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">//puts(\"\") 类似于printf(\"%s\\n\",s);pust在字符末尾会自动输出一个回车符</span></div><div class=\"line\">\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"我隔开了\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">puts</span> (<span class=\"string\">\"\"</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"keyword\">char</span> letter[] = <span class=\"string\">\"abcd\"</span>;</div><div class=\"line\">\tprint_reverse(letter);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div></pre></td></tr></table></figure>\n<h2 id=\"结果：\"><a href=\"#结果：\" class=\"headerlink\" title=\"结果：\"></a>结果：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">dcba我隔开了</div><div class=\"line\"></div><div class=\"line\">请按任意键继续. . .</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"知识点：\"><a href=\"#知识点：\" class=\"headerlink\" title=\"知识点：\"></a>知识点：</h2><p>字符数组的字符串指针反转<br>","more":"</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//head frist c page 98</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">print_reverse</span><span class=\"params\">(<span class=\"keyword\">char</span> *s)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">size_t</span> len = <span class=\"built_in\">strlen</span>(s);</div><div class=\"line\">\t<span class=\"comment\">//指针相加，t为s对应指针的最后一个</span></div><div class=\"line\">\t<span class=\"keyword\">char</span> *t = s + len - <span class=\"number\">1</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//最后一个肯定大于第一个s指针指向的位置，</span></div><div class=\"line\">\t<span class=\"keyword\">while</span> (t &gt;= s) &#123;</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%c\"</span>,*t);</div><div class=\"line\">\t\tt = t - <span class=\"number\">1</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">//puts(\"\") 类似于printf(\"%s\\n\",s);pust在字符末尾会自动输出一个回车符</span></div><div class=\"line\">\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"我隔开了\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">puts</span> (<span class=\"string\">\"\"</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">char</span> letter[] = <span class=\"string\">\"abcd\"</span>;</div><div class=\"line\">\tprint_reverse(letter);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div></pre></td></tr></table></figure>\n<h2 id=\"结果：\"><a href=\"#结果：\" class=\"headerlink\" title=\"结果：\"></a>结果：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">dcba我隔开了</div><div class=\"line\"></div><div class=\"line\">请按任意键继续. . .</div></pre></td></tr></table></figure>"},{"title":"字符指针与字符数组","date":"2017-11-20T00:12:03.000Z","_content":"\n{% codeblock lang:c %}\nint main()\n{\n\tchar masked_raider[] = \"Alived\";\n\n\tchar *jimmy = masked_raider;\n\n\tprintf(\"masked_raider is %s,jimmy is %s\\n\", masked_raider, jimmy);\n\n\tmasked_raider[0] = 'd';\n\tmasked_raider[1] = 'e';\n\tmasked_raider[2] = 'a';\n\tmasked_raider[3] = 'd';\n\tmasked_raider[4] = 'e';\n\tmasked_raider[5] = 'd';\n\tprintf(\"masked_raider is %s,jimmy is %s\\n\", masked_raider, jimmy);\n\t\n    return 0;\n}\n{% endcodeblock %}\n<!-- more -->\n\n## 知识点：\n\n\tjimmy和masked_raider 是一个存储器地址的两个别名\n\t字符串字面值保存在只读存储器中\n\t如果要修改字符串，需要在新的数组中创建副本\n\n\tchar masked_raider[] = \"Alived\";\n\n\t程序会在栈上创建一个maskd_raider的数组，并把右值设置为 Alived\n\n\t\n\tchar *jimmy =\"Alived\";\n\n\t程序会把常量值放在常量存储区，常量存储期是只读的。\n\t接着在栈上创建了jimmy变量，是局部变量\n\t然后把栈上的jimmy变量设置为alived的地址\n\tconst char *jimmy = \"Alived\";\n\tjimmy[0] = 'd'\n\t因为常量存储区是只读的，所以用jimmy[0]='d'的时候，会报错，jimmy为不可修改的左值\n","source":"_posts/head_frist_c_78.md","raw":"---\ntitle: 字符指针与字符数组\ndate: 2017-11-20 08:12:03\ncategories: C\ntags:\n- HEAD_FIRST_C\n---\n\n{% codeblock lang:c %}\nint main()\n{\n\tchar masked_raider[] = \"Alived\";\n\n\tchar *jimmy = masked_raider;\n\n\tprintf(\"masked_raider is %s,jimmy is %s\\n\", masked_raider, jimmy);\n\n\tmasked_raider[0] = 'd';\n\tmasked_raider[1] = 'e';\n\tmasked_raider[2] = 'a';\n\tmasked_raider[3] = 'd';\n\tmasked_raider[4] = 'e';\n\tmasked_raider[5] = 'd';\n\tprintf(\"masked_raider is %s,jimmy is %s\\n\", masked_raider, jimmy);\n\t\n    return 0;\n}\n{% endcodeblock %}\n<!-- more -->\n\n## 知识点：\n\n\tjimmy和masked_raider 是一个存储器地址的两个别名\n\t字符串字面值保存在只读存储器中\n\t如果要修改字符串，需要在新的数组中创建副本\n\n\tchar masked_raider[] = \"Alived\";\n\n\t程序会在栈上创建一个maskd_raider的数组，并把右值设置为 Alived\n\n\t\n\tchar *jimmy =\"Alived\";\n\n\t程序会把常量值放在常量存储区，常量存储期是只读的。\n\t接着在栈上创建了jimmy变量，是局部变量\n\t然后把栈上的jimmy变量设置为alived的地址\n\tconst char *jimmy = \"Alived\";\n\tjimmy[0] = 'd'\n\t因为常量存储区是只读的，所以用jimmy[0]='d'的时候，会报错，jimmy为不可修改的左值\n","slug":"head_frist_c_78","published":1,"updated":"2018-08-14T09:42:55.178Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjktlsbaq000negh3x592yjfy","content":"<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"keyword\">char</span> masked_raider[] = <span class=\"string\">\"Alived\"</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">char</span> *jimmy = masked_raider;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"masked_raider is %s,jimmy is %s\\n\"</span>, masked_raider, jimmy);</div><div class=\"line\"></div><div class=\"line\">\tmasked_raider[<span class=\"number\">0</span>] = <span class=\"string\">'d'</span>;</div><div class=\"line\">\tmasked_raider[<span class=\"number\">1</span>] = <span class=\"string\">'e'</span>;</div><div class=\"line\">\tmasked_raider[<span class=\"number\">2</span>] = <span class=\"string\">'a'</span>;</div><div class=\"line\">\tmasked_raider[<span class=\"number\">3</span>] = <span class=\"string\">'d'</span>;</div><div class=\"line\">\tmasked_raider[<span class=\"number\">4</span>] = <span class=\"string\">'e'</span>;</div><div class=\"line\">\tmasked_raider[<span class=\"number\">5</span>] = <span class=\"string\">'d'</span>;</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"masked_raider is %s,jimmy is %s\\n\"</span>, masked_raider, jimmy);</div><div class=\"line\">\t</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"知识点：\"><a href=\"#知识点：\" class=\"headerlink\" title=\"知识点：\"></a>知识点：</h2><pre><code>jimmy和masked_raider 是一个存储器地址的两个别名\n字符串字面值保存在只读存储器中\n如果要修改字符串，需要在新的数组中创建副本\n\nchar masked_raider[] = &quot;Alived&quot;;\n\n程序会在栈上创建一个maskd_raider的数组，并把右值设置为 Alived\n\n\nchar *jimmy =&quot;Alived&quot;;\n\n程序会把常量值放在常量存储区，常量存储期是只读的。\n接着在栈上创建了jimmy变量，是局部变量\n然后把栈上的jimmy变量设置为alived的地址\nconst char *jimmy = &quot;Alived&quot;;\njimmy[0] = &apos;d&apos;\n因为常量存储区是只读的，所以用jimmy[0]=&apos;d&apos;的时候，会报错，jimmy为不可修改的左值\n</code></pre>","site":{"data":{}},"excerpt":"<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">char</span> masked_raider[] = <span class=\"string\">\"Alived\"</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">char</span> *jimmy = masked_raider;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"masked_raider is %s,jimmy is %s\\n\"</span>, masked_raider, jimmy);</div><div class=\"line\"></div><div class=\"line\">\tmasked_raider[<span class=\"number\">0</span>] = <span class=\"string\">'d'</span>;</div><div class=\"line\">\tmasked_raider[<span class=\"number\">1</span>] = <span class=\"string\">'e'</span>;</div><div class=\"line\">\tmasked_raider[<span class=\"number\">2</span>] = <span class=\"string\">'a'</span>;</div><div class=\"line\">\tmasked_raider[<span class=\"number\">3</span>] = <span class=\"string\">'d'</span>;</div><div class=\"line\">\tmasked_raider[<span class=\"number\">4</span>] = <span class=\"string\">'e'</span>;</div><div class=\"line\">\tmasked_raider[<span class=\"number\">5</span>] = <span class=\"string\">'d'</span>;</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"masked_raider is %s,jimmy is %s\\n\"</span>, masked_raider, jimmy);</div><div class=\"line\">\t</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","more":"<h2 id=\"知识点：\"><a href=\"#知识点：\" class=\"headerlink\" title=\"知识点：\"></a>知识点：</h2><pre><code>jimmy和masked_raider 是一个存储器地址的两个别名\n字符串字面值保存在只读存储器中\n如果要修改字符串，需要在新的数组中创建副本\n\nchar masked_raider[] = &quot;Alived&quot;;\n\n程序会在栈上创建一个maskd_raider的数组，并把右值设置为 Alived\n\n\nchar *jimmy =&quot;Alived&quot;;\n\n程序会把常量值放在常量存储区，常量存储期是只读的。\n接着在栈上创建了jimmy变量，是局部变量\n然后把栈上的jimmy变量设置为alived的地址\nconst char *jimmy = &quot;Alived&quot;;\njimmy[0] = &apos;d&apos;\n因为常量存储区是只读的，所以用jimmy[0]=&apos;d&apos;的时候，会报错，jimmy为不可修改的左值\n</code></pre>"},{"title":"C语言STRSTR实例","date":"2017-11-25T00:12:03.000Z","_content":"## 知识点：\n`strstr()`函数会在第一个字符串中查找第二个字符串，如果找到，他会返回第二个字符串在存储器中的位置。\n\n<!-- more -->\n\n{% codeblock lang:c %}\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\n//head frist c page 94\n\nchar tracks [][80] = {\n\t\t\"给我一首歌的时间\",\n\t\t\"七里香\",\n\t\t\"威廉古堡\",\n\t\t\"简单爱\",\n\t\t\"东风破\",\n\t\t\"叶惠美\",\n};\n\nvoid find_track(char search_for[]) {\n\tint i;\n\tfor (i = 0; i < 6; i++) {\n\t\tif (strstr(tracks[i], search_for)) {\n\t\t\tprintf(\"find track %i:%s\\n\", i,tracks[i]);\n\t\t}else{\n\t\t\t// printf(\"your search is %s,not in %s\\n\",search_for,tracks[i]);\n\t\t}\t\n\t}\n}\n\nint main()\n{\n\tchar search_for[80];\n\tprintf(\"search for :\");\n\tfgets(search_for, 80, stdin);\n\n\t//由于fgets接收有换行符号+\\0，所以把换行符换成结束符\n\tsearch_for[strlen(search_for)-1]='\\0';\n\tfind_track(search_for);\n\treturn 0;\t\n}\n\n{% endcodeblock %}\n\n## 结果：\n\n```\nsearch for :爱\nfind track 3:简单爱\n请按任意键继续. . .\n\n```\n","source":"_posts/head_firstc_strstr_94.md","raw":"\n---\ntitle: C语言STRSTR实例\ndate: 2017-11-25 08:12:03\ncategories: C\ntags:\n- HEAD_FIRST_C\n---\n## 知识点：\n`strstr()`函数会在第一个字符串中查找第二个字符串，如果找到，他会返回第二个字符串在存储器中的位置。\n\n<!-- more -->\n\n{% codeblock lang:c %}\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\n//head frist c page 94\n\nchar tracks [][80] = {\n\t\t\"给我一首歌的时间\",\n\t\t\"七里香\",\n\t\t\"威廉古堡\",\n\t\t\"简单爱\",\n\t\t\"东风破\",\n\t\t\"叶惠美\",\n};\n\nvoid find_track(char search_for[]) {\n\tint i;\n\tfor (i = 0; i < 6; i++) {\n\t\tif (strstr(tracks[i], search_for)) {\n\t\t\tprintf(\"find track %i:%s\\n\", i,tracks[i]);\n\t\t}else{\n\t\t\t// printf(\"your search is %s,not in %s\\n\",search_for,tracks[i]);\n\t\t}\t\n\t}\n}\n\nint main()\n{\n\tchar search_for[80];\n\tprintf(\"search for :\");\n\tfgets(search_for, 80, stdin);\n\n\t//由于fgets接收有换行符号+\\0，所以把换行符换成结束符\n\tsearch_for[strlen(search_for)-1]='\\0';\n\tfind_track(search_for);\n\treturn 0;\t\n}\n\n{% endcodeblock %}\n\n## 结果：\n\n```\nsearch for :爱\nfind track 3:简单爱\n请按任意键继续. . .\n\n```\n","slug":"head_firstc_strstr_94","published":1,"updated":"2018-08-14T09:42:55.176Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjktlsbas000qegh3s76wz8a3","content":"<h2 id=\"知识点：\"><a href=\"#知识点：\" class=\"headerlink\" title=\"知识点：\"></a>知识点：</h2><p><code>strstr()</code>函数会在第一个字符串中查找第二个字符串，如果找到，他会返回第二个字符串在存储器中的位置。</p>\n<a id=\"more\"></a>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//head frist c page 94</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">char</span> tracks [][<span class=\"number\">80</span>] = &#123;</div><div class=\"line\">\t\t<span class=\"string\">\"给我一首歌的时间\"</span>,</div><div class=\"line\">\t\t<span class=\"string\">\"七里香\"</span>,</div><div class=\"line\">\t\t<span class=\"string\">\"威廉古堡\"</span>,</div><div class=\"line\">\t\t<span class=\"string\">\"简单爱\"</span>,</div><div class=\"line\">\t\t<span class=\"string\">\"东风破\"</span>,</div><div class=\"line\">\t\t<span class=\"string\">\"叶惠美\"</span>,</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">find_track</span><span class=\"params\">(<span class=\"keyword\">char</span> search_for[])</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> i;</div><div class=\"line\">\t<span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">6</span>; i++) &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"built_in\">strstr</span>(tracks[i], search_for)) &#123;</div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"find track %i:%s\\n\"</span>, i,tracks[i]);</div><div class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// printf(\"your search is %s,not in %s\\n\",search_for,tracks[i]);</span></div><div class=\"line\">\t\t&#125;\t</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> main()</div><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"keyword\">char</span> search_for[<span class=\"number\">80</span>];</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"search for :\"</span>);</div><div class=\"line\">\tfgets(search_for, <span class=\"number\">80</span>, <span class=\"built_in\">stdin</span>);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//由于fgets接收有换行符号+\\0，所以把换行符换成结束符</span></div><div class=\"line\">\tsearch_for[<span class=\"built_in\">strlen</span>(search_for)<span class=\"number\">-1</span>]=<span class=\"string\">'\\0'</span>;</div><div class=\"line\">\tfind_track(search_for);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;\t</div><div class=\"line\">&#125;</div><div class=\"line\"></div></pre></td></tr></table></figure>\n<h2 id=\"结果：\"><a href=\"#结果：\" class=\"headerlink\" title=\"结果：\"></a>结果：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">search for :爱</div><div class=\"line\">find track 3:简单爱</div><div class=\"line\">请按任意键继续. . .</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"知识点：\"><a href=\"#知识点：\" class=\"headerlink\" title=\"知识点：\"></a>知识点：</h2><p><code>strstr()</code>函数会在第一个字符串中查找第二个字符串，如果找到，他会返回第二个字符串在存储器中的位置。</p>","more":"<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//head frist c page 94</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">char</span> tracks [][<span class=\"number\">80</span>] = &#123;</div><div class=\"line\">\t\t<span class=\"string\">\"给我一首歌的时间\"</span>,</div><div class=\"line\">\t\t<span class=\"string\">\"七里香\"</span>,</div><div class=\"line\">\t\t<span class=\"string\">\"威廉古堡\"</span>,</div><div class=\"line\">\t\t<span class=\"string\">\"简单爱\"</span>,</div><div class=\"line\">\t\t<span class=\"string\">\"东风破\"</span>,</div><div class=\"line\">\t\t<span class=\"string\">\"叶惠美\"</span>,</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">find_track</span><span class=\"params\">(<span class=\"keyword\">char</span> search_for[])</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> i;</div><div class=\"line\">\t<span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">6</span>; i++) &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"built_in\">strstr</span>(tracks[i], search_for)) &#123;</div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"find track %i:%s\\n\"</span>, i,tracks[i]);</div><div class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// printf(\"your search is %s,not in %s\\n\",search_for,tracks[i]);</span></div><div class=\"line\">\t\t&#125;\t</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> main()</div><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"keyword\">char</span> search_for[<span class=\"number\">80</span>];</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"search for :\"</span>);</div><div class=\"line\">\tfgets(search_for, <span class=\"number\">80</span>, <span class=\"built_in\">stdin</span>);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//由于fgets接收有换行符号+\\0，所以把换行符换成结束符</span></div><div class=\"line\">\tsearch_for[<span class=\"built_in\">strlen</span>(search_for)<span class=\"number\">-1</span>]=<span class=\"string\">'\\0'</span>;</div><div class=\"line\">\tfind_track(search_for);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;\t</div><div class=\"line\">&#125;</div><div class=\"line\"></div></pre></td></tr></table></figure>\n<h2 id=\"结果：\"><a href=\"#结果：\" class=\"headerlink\" title=\"结果：\"></a>结果：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">search for :爱</div><div class=\"line\">find track 3:简单爱</div><div class=\"line\">请按任意键继续. . .</div></pre></td></tr></table></figure>"},{"title":"JAVA 装饰模式-2016软件设计师下半年考试真题","date":"2016-11-15T03:18:37.000Z","_content":"\n## 题目要求：打印发票头、内容、底部的要求 ##\n\n#### BTW,八成这次软考又挂了... ####\n\n<!-- more -->\n\n```java\n    class Invoice{\n      public void printInvoice(){\n        System.out.println(\"this is content\");\n      }\n    }\n\n    class Decorator extends Invoice{\n      protected Invoice ticket;\n      public Decorator (Invoice t){\n        ticket=t;\n      }\n      public void printInvoice(){\n        if(ticket!=null){\n          ticket.printInvoice();\n        }\n      }\n    }\n\n    class HeaderDecorator extends Decorator{\n\n      public HeaderDecorator(Invoice t){\n        super(t);\n      }\n      public void printInvoice(){\n        System.out.println(\"this is the header\");\n        super.printInvoice();\n      }\n\n    }\n\n    class FooterDecorator extends Decorator{\n\n      public FooterDecorator(Invoice t){\n        super(t);\n      }\n      public void printInvoice(){\n\n        super.printInvoice();\n        System.out.println(\"this is the footer\");\n      }\n\n    }\n\n\n\n    public class zhuangshi {\n\n      public static void main(String[] args){\n        Invoice t =new Invoice();\n        Invoice ticket;\n        ticket=new FooterDecorator(new HeaderDecorator(t));\n        ticket.printInvoice();\n        System.out.println(\"=====================\");\n        ticket=new FooterDecorator(new HeaderDecorator(new Decorator(null)));\n        ticket.printInvoice();\n      }\n\n    }\n\n```\n## 这么写也行 ，不知道哪个算标准答案##\n```java\n     Invoice t =new Invoice();\n      Invoice ticket;\n      ticket=new HeaderDecorator(new FooterDecorator(t));\n      ticket.printInvoice();\n      System.out.println(\"=====================\");\n      ticket=new HeaderDecorator(new FooterDecorator(null));\n      ticket.printInvoice();\n```\n\n## 结果 ##\n![图片描述][1]\n\n\n  [1]: /img/patterndesign/zhuangshi.png\n","source":"_posts/java-2016-decorator.md","raw":"---\ntitle: JAVA 装饰模式-2016软件设计师下半年考试真题\ndate: 2016-11-15 11:18:37\ntags:\n - 装饰模式\n - 软件设计师\n - JAVA\n---\n\n## 题目要求：打印发票头、内容、底部的要求 ##\n\n#### BTW,八成这次软考又挂了... ####\n\n<!-- more -->\n\n```java\n    class Invoice{\n      public void printInvoice(){\n        System.out.println(\"this is content\");\n      }\n    }\n\n    class Decorator extends Invoice{\n      protected Invoice ticket;\n      public Decorator (Invoice t){\n        ticket=t;\n      }\n      public void printInvoice(){\n        if(ticket!=null){\n          ticket.printInvoice();\n        }\n      }\n    }\n\n    class HeaderDecorator extends Decorator{\n\n      public HeaderDecorator(Invoice t){\n        super(t);\n      }\n      public void printInvoice(){\n        System.out.println(\"this is the header\");\n        super.printInvoice();\n      }\n\n    }\n\n    class FooterDecorator extends Decorator{\n\n      public FooterDecorator(Invoice t){\n        super(t);\n      }\n      public void printInvoice(){\n\n        super.printInvoice();\n        System.out.println(\"this is the footer\");\n      }\n\n    }\n\n\n\n    public class zhuangshi {\n\n      public static void main(String[] args){\n        Invoice t =new Invoice();\n        Invoice ticket;\n        ticket=new FooterDecorator(new HeaderDecorator(t));\n        ticket.printInvoice();\n        System.out.println(\"=====================\");\n        ticket=new FooterDecorator(new HeaderDecorator(new Decorator(null)));\n        ticket.printInvoice();\n      }\n\n    }\n\n```\n## 这么写也行 ，不知道哪个算标准答案##\n```java\n     Invoice t =new Invoice();\n      Invoice ticket;\n      ticket=new HeaderDecorator(new FooterDecorator(t));\n      ticket.printInvoice();\n      System.out.println(\"=====================\");\n      ticket=new HeaderDecorator(new FooterDecorator(null));\n      ticket.printInvoice();\n```\n\n## 结果 ##\n![图片描述][1]\n\n\n  [1]: /img/patterndesign/zhuangshi.png\n","slug":"java-2016-decorator","published":1,"updated":"2018-08-14T09:42:55.183Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjktlsbat000tegh3kanh2jfh","content":"<h2 id=\"题目要求：打印发票头、内容、底部的要求\"><a href=\"#题目要求：打印发票头、内容、底部的要求\" class=\"headerlink\" title=\"题目要求：打印发票头、内容、底部的要求\"></a>题目要求：打印发票头、内容、底部的要求</h2><h4 id=\"BTW-八成这次软考又挂了…\"><a href=\"#BTW-八成这次软考又挂了…\" class=\"headerlink\" title=\"BTW,八成这次软考又挂了…\"></a>BTW,八成这次软考又挂了…</h4><a id=\"more\"></a>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Invoice</span></span>&#123;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">printInvoice</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    System.out.println(<span class=\"string\">\"this is content\"</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Decorator</span> <span class=\"keyword\">extends</span> <span class=\"title\">Invoice</span></span>&#123;</div><div class=\"line\">  <span class=\"keyword\">protected</span> Invoice ticket;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Decorator</span> <span class=\"params\">(Invoice t)</span></span>&#123;</div><div class=\"line\">    ticket=t;</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">printInvoice</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(ticket!=<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">      ticket.printInvoice();</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HeaderDecorator</span> <span class=\"keyword\">extends</span> <span class=\"title\">Decorator</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">HeaderDecorator</span><span class=\"params\">(Invoice t)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>(t);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">printInvoice</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    System.out.println(<span class=\"string\">\"this is the header\"</span>);</div><div class=\"line\">    <span class=\"keyword\">super</span>.printInvoice();</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooterDecorator</span> <span class=\"keyword\">extends</span> <span class=\"title\">Decorator</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">FooterDecorator</span><span class=\"params\">(Invoice t)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>(t);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">printInvoice</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">super</span>.printInvoice();</div><div class=\"line\">    System.out.println(<span class=\"string\">\"this is the footer\"</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">zhuangshi</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">    Invoice t =<span class=\"keyword\">new</span> Invoice();</div><div class=\"line\">    Invoice ticket;</div><div class=\"line\">    ticket=<span class=\"keyword\">new</span> FooterDecorator(<span class=\"keyword\">new</span> HeaderDecorator(t));</div><div class=\"line\">    ticket.printInvoice();</div><div class=\"line\">    System.out.println(<span class=\"string\">\"=====================\"</span>);</div><div class=\"line\">    ticket=<span class=\"keyword\">new</span> FooterDecorator(<span class=\"keyword\">new</span> HeaderDecorator(<span class=\"keyword\">new</span> Decorator(<span class=\"keyword\">null</span>)));</div><div class=\"line\">    ticket.printInvoice();</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"这么写也行-，不知道哪个算标准答案\"><a href=\"#这么写也行-，不知道哪个算标准答案\" class=\"headerlink\" title=\"这么写也行 ，不知道哪个算标准答案\"></a>这么写也行 ，不知道哪个算标准答案</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">Invoice t =<span class=\"keyword\">new</span> Invoice();</div><div class=\"line\"> Invoice ticket;</div><div class=\"line\"> ticket=<span class=\"keyword\">new</span> HeaderDecorator(<span class=\"keyword\">new</span> FooterDecorator(t));</div><div class=\"line\"> ticket.printInvoice();</div><div class=\"line\"> System.out.println(<span class=\"string\">\"=====================\"</span>);</div><div class=\"line\"> ticket=<span class=\"keyword\">new</span> HeaderDecorator(<span class=\"keyword\">new</span> FooterDecorator(<span class=\"keyword\">null</span>));</div><div class=\"line\"> ticket.printInvoice();</div></pre></td></tr></table></figure>\n<h2 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h2><p><img src=\"/img/patterndesign/zhuangshi.png\" alt=\"图片描述\"></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"题目要求：打印发票头、内容、底部的要求\"><a href=\"#题目要求：打印发票头、内容、底部的要求\" class=\"headerlink\" title=\"题目要求：打印发票头、内容、底部的要求\"></a>题目要求：打印发票头、内容、底部的要求</h2><h4 id=\"BTW-八成这次软考又挂了…\"><a href=\"#BTW-八成这次软考又挂了…\" class=\"headerlink\" title=\"BTW,八成这次软考又挂了…\"></a>BTW,八成这次软考又挂了…</h4>","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Invoice</span></span>&#123;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">printInvoice</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    System.out.println(<span class=\"string\">\"this is content\"</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Decorator</span> <span class=\"keyword\">extends</span> <span class=\"title\">Invoice</span></span>&#123;</div><div class=\"line\">  <span class=\"keyword\">protected</span> Invoice ticket;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Decorator</span> <span class=\"params\">(Invoice t)</span></span>&#123;</div><div class=\"line\">    ticket=t;</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">printInvoice</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(ticket!=<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">      ticket.printInvoice();</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HeaderDecorator</span> <span class=\"keyword\">extends</span> <span class=\"title\">Decorator</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">HeaderDecorator</span><span class=\"params\">(Invoice t)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>(t);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">printInvoice</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    System.out.println(<span class=\"string\">\"this is the header\"</span>);</div><div class=\"line\">    <span class=\"keyword\">super</span>.printInvoice();</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooterDecorator</span> <span class=\"keyword\">extends</span> <span class=\"title\">Decorator</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">FooterDecorator</span><span class=\"params\">(Invoice t)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>(t);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">printInvoice</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">super</span>.printInvoice();</div><div class=\"line\">    System.out.println(<span class=\"string\">\"this is the footer\"</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">zhuangshi</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">    Invoice t =<span class=\"keyword\">new</span> Invoice();</div><div class=\"line\">    Invoice ticket;</div><div class=\"line\">    ticket=<span class=\"keyword\">new</span> FooterDecorator(<span class=\"keyword\">new</span> HeaderDecorator(t));</div><div class=\"line\">    ticket.printInvoice();</div><div class=\"line\">    System.out.println(<span class=\"string\">\"=====================\"</span>);</div><div class=\"line\">    ticket=<span class=\"keyword\">new</span> FooterDecorator(<span class=\"keyword\">new</span> HeaderDecorator(<span class=\"keyword\">new</span> Decorator(<span class=\"keyword\">null</span>)));</div><div class=\"line\">    ticket.printInvoice();</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"这么写也行-，不知道哪个算标准答案\"><a href=\"#这么写也行-，不知道哪个算标准答案\" class=\"headerlink\" title=\"这么写也行 ，不知道哪个算标准答案\"></a>这么写也行 ，不知道哪个算标准答案</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">Invoice t =<span class=\"keyword\">new</span> Invoice();</div><div class=\"line\"> Invoice ticket;</div><div class=\"line\"> ticket=<span class=\"keyword\">new</span> HeaderDecorator(<span class=\"keyword\">new</span> FooterDecorator(t));</div><div class=\"line\"> ticket.printInvoice();</div><div class=\"line\"> System.out.println(<span class=\"string\">\"=====================\"</span>);</div><div class=\"line\"> ticket=<span class=\"keyword\">new</span> HeaderDecorator(<span class=\"keyword\">new</span> FooterDecorator(<span class=\"keyword\">null</span>));</div><div class=\"line\"> ticket.printInvoice();</div></pre></td></tr></table></figure>\n<h2 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h2><p><img src=\"/img/patterndesign/zhuangshi.png\" alt=\"图片描述\"></p>"},{"title":"HTTP-CAHCE中的CACHE-CONTROL、Etag、Modify","date":"2017-03-07T05:41:11.000Z","_content":"\n用世界上最好的语言演示一下etag\n-------------\n\n```\n<?php\n\n// apache 服务器，如果您是nginx请自行配置读取header等信息，同时下面会有nginx测试\n\n$file = 'etag.txt';\n$etag = md5_file($file);\n$headers = apache_request_headers();\n\nif (isset($headers['If-None-Match']) && trim($headers[\"If-None-Match\"]) == $etag) {\n    header(\"HTTP/1.1 304 Not Modified\");\n} else {\n    $content = file_get_contents($file);\n    header(\"Etag: $etag\");\n    echo $content;\n}\n\n```\n第一次请求，服务器返回200.我分别列下请求头【RequsetHeaders】和响应头【ResponseHeaders】\n\n请求头\n```\nAccept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Encoding:gzip, deflate, sdch\nAccept-Language:zh-CN,zh;q=0.8,en;q=0.6\nCache-Control:no-cache\nConnection:keep-alive\nHost:kache.com\nPragma:no-cache\nUpgrade-Insecure-Requests:1\nUser-Agent:Mozilla/5.\n```\n<!-- more -->\n \n响应头\n\n```\nRequest URL:http://kache.com/etag.php\nRequest Method:GET\nStatus Code:200 OK\nRemote Address:127.0.0.1:80\n\nConnection:Keep-Alive\nContent-Type:text/html\nDate:Tue, 07 Mar 2017 13:02:13 GMT\nEtag:966aa4bd5183fd9358fd222647c5c6a3\nKeep-Alive:timeout=5, max=99\nServer:Apache/2.4.10 (Win32) OpenSSL/0.9.8zb mod_fcgid/2.3.9\nTransfer-Encoding:chunked\nX-Powered-By:PHP/5.4.33\n```\n需要注意第一次请求头没有If-None-Match:，注意第一次响应头有Etag:这个标签,注意第一次是200\n\n\n----------\n\n\n第二次请求\n\n请求头：\n\n```\nAccept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Encoding:gzip, deflate, sdch\nAccept-Language:zh-CN,zh;q=0.8,en;q=0.6\nCache-Control:max-age=0\nConnection:keep-alive\nHost:kache.com\nIf-None-Match:966aa4bd5183fd9358fd222647c5c6a3\nUpgrade-Insecure-Requests:1\nUser-Agent:Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36\n```\n\n响应头:\n\n```\nRequest URL:http://kache.com/etag.php\nRequest Method:GET\nStatus Code:304 Not Modified\nRemote Address:127.0.0.1:80\n\nConnection:Keep-Alive\nDate:Tue, 07 Mar 2017 13:02:16 GMT\nKeep-Alive:timeout=5, max=98\nServer:Apache/2.4.10 (Win32) OpenSSL/0.9.8zb mod_fcgid/2.3.9\n```\n需要注意第二次请求头有If-None-Match:，注意第二次响应为304\n\n----------\n\n再用php语言演示一下Last-Modified\n------------------------\n\n```\n<?php\n/**\n *If-Modified-Since[request] & Last-Modified [response]\n *减少网络字节传输\n */\n$headers = apache_request_headers();\n$file = 'modified.txt';\n\nif (isset($headers['If-Modified-Since']) && (strtotime($headers['If-Modified-Since']) == filemtime($file))) {\n\n    header('Last-Modified: ' . gmdate('D, d M Y H:i:s', filemtime($file)) . ' GMT', true, 304);\n\n} else {\n    header('Last-Modified: ' . gmdate('D, d M Y H:i:s', filemtime($file)) . ' GMT', true, 200);\n\n    $content = file_get_contents($file);\n    echo $content;\n}\n\n```\nIf-Modified-Since[请求头的] 和 Last-Modified [响应头的]这一对关系的HADER头我这里就不贴了。稍后的ppt里有比较详细的说明\n\n----------\n\n我们常用的就是Last-Modified和Etag一起来用，上php代码\n------------------------------------\n\n```\n<?php\n\n$file='etag_modify.txt';\n\n$last_modified_time=filemtime($file);\n\n$etag = md5_file($file);\n\n$headers = apache_request_headers();\n\n\nif (@strtotime($headers['If-Modified-Since']) == $last_modified_time ||\n    @trim($headers['If-None-Match']) == $etag) {\n  header('Content-Length: '.filesize($file));\n    header(\"HTTP/1.1 304 Not Modified\");\n\n}else{\n\n  header(\"Etag: $etag\");\n  header('Last-Modified: '.gmdate('D, d M Y H:i:s', $last_modified_time).' GMT', true, 200);\n  header('Content-Length: '.filesize($file));\n  $content=file_get_contents($file);\n  echo $content;\n\n}\n\n```\n这样做的好处是双重验证，同时满足两者条件才会缓存失效，弥补了modify的粒度最多为秒的问题以及modify的打开关闭即更改时间的问题。当然etag也会有坑，不同物理机可能会导致相同文件不同结果（没实验过）\n\n\n----------\n\n直接上NGINX配置示例\n------------\n毕竟php做服务端水平有限，大家可以参考  swoole framework OR workerman中对etag和modify的处理。\n\n不多说，上NGINX配置段，为了演示modify ，可以在/etc/nginx/nginx.conf中把etag关闭\n\n```\nhttp {\n\n        ##\n        # Basic Settings\n        ##\n        etag  off;\n        ...\n```\n\n关于其他静态文件缓存的设置\n\n```\nlocation ~* \\.(?:css)$ {\n  #expires 1y;\n  add_header  Cache-Control max-age=5;\n  add_header Cache-Control \"public\";\n  add_header  Last-Modified \"\";\n}\n\n```\n简单对以上括号内代码说明：\n1. expires 1y; 是http协议1.0写法，1.1对应的是cache-contorl:max-age='';前者为GMT绝对时间，后者为相对时间。\n2. add_header  Cache-Control max-age=5; 缓存5秒，如果没有Last-Modified（即设置了 add_header  Last-Modified \"\";） ，期间会一直直接请求服务器，服务器一直返回200，如果有设置Last-Modified，5秒后会请求一次服务器，5秒前会返回304.\n\n简单归纳Last-Modified和max-age（expires）关系\n\n1. 如果设置了max-age=0，而没有启用modify，那么不会缓存\n\n2. 如果单单启用modify，而没有max-age==0.也会缓存\n\n3. 如果启用了modify，并且 max-age=0，那么不会缓存\n\n4. 如果设置了max-age=1000，但没有启用modify ，不会缓存\n\n再此说明上面配置导致的结果：5秒内如果文件有变化，那么客户端不会有任何感知。5秒后将会重新发起请求，得到200响应。然后再缓存5秒【注意没有开启etag】\n\n----------\n下面这个例子和上面一样，是针对图片等，缓存1一个月，即使服务端删除了，1个月内也会正常显示（除非ctrl+f5，或者服务端重启了）public代表任何代理服务器都可以缓存，对应的为private，只允许客户端浏览器缓存。\n\n```\nlocation ~* \\.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {\n  expires 1M;\n  add_header Cache-Control \"public\";\n  add_header  Last-Modified \"\";\n}\n\n```\n----------\n\n那需要有更改就更新，怎么办？\n--------------\n\n```\nlocation ~* \\.(?:css)$ {\n  expires 1y;\n # add_header  Cache-Control max-age=5;\n # add_header Cache-Control \"public\";\n # add_header  Last-Modified \"\";\n}\n```\n以上配置虽然过期时间是一年，但是服务端会返回Last-Modified，来确认，意思为你就vim了一下xx.css,即使没有做任何更改，浏览器也会重新发起请求。你要是没改，那八成就一年后见了。\n\n那我就不想缓存怎么办？\n-----------\n用cache-control：控制\n用no-cahce【浏览器端等可以缓存，但是没有什么卵用】\n用no-store【浏览器端等不用缓存，不用费劲。每次都跟我服务端请求】\n用must-revalidate，浏览器端别整没用的，到期了就马上跟我请求。麻溜的必须。防止的就是代理服务器等自作聪明，认为没有过期。\n\n```\nlocation ~* \\.(?:js)$ {\n  add_header  Cache-Control no-cache;\n  add_header  Cache-Control must-revalidate;\n}\n```\n\n[测试代码和PPT在这里][1]\n-----------\n\n\n  [1]: https://github.com/tuber/HTTP_CACHE\n","source":"_posts/http-cache.md","raw":"---\ntitle: HTTP-CAHCE中的CACHE-CONTROL、Etag、Modify\ndate: 2017-03-07 13:41:11\ncategories: PHP\ntags:\n - HTTP\n - CACHE\n - PHP\n - NGINX\n---\n\n用世界上最好的语言演示一下etag\n-------------\n\n```\n<?php\n\n// apache 服务器，如果您是nginx请自行配置读取header等信息，同时下面会有nginx测试\n\n$file = 'etag.txt';\n$etag = md5_file($file);\n$headers = apache_request_headers();\n\nif (isset($headers['If-None-Match']) && trim($headers[\"If-None-Match\"]) == $etag) {\n    header(\"HTTP/1.1 304 Not Modified\");\n} else {\n    $content = file_get_contents($file);\n    header(\"Etag: $etag\");\n    echo $content;\n}\n\n```\n第一次请求，服务器返回200.我分别列下请求头【RequsetHeaders】和响应头【ResponseHeaders】\n\n请求头\n```\nAccept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Encoding:gzip, deflate, sdch\nAccept-Language:zh-CN,zh;q=0.8,en;q=0.6\nCache-Control:no-cache\nConnection:keep-alive\nHost:kache.com\nPragma:no-cache\nUpgrade-Insecure-Requests:1\nUser-Agent:Mozilla/5.\n```\n<!-- more -->\n \n响应头\n\n```\nRequest URL:http://kache.com/etag.php\nRequest Method:GET\nStatus Code:200 OK\nRemote Address:127.0.0.1:80\n\nConnection:Keep-Alive\nContent-Type:text/html\nDate:Tue, 07 Mar 2017 13:02:13 GMT\nEtag:966aa4bd5183fd9358fd222647c5c6a3\nKeep-Alive:timeout=5, max=99\nServer:Apache/2.4.10 (Win32) OpenSSL/0.9.8zb mod_fcgid/2.3.9\nTransfer-Encoding:chunked\nX-Powered-By:PHP/5.4.33\n```\n需要注意第一次请求头没有If-None-Match:，注意第一次响应头有Etag:这个标签,注意第一次是200\n\n\n----------\n\n\n第二次请求\n\n请求头：\n\n```\nAccept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Encoding:gzip, deflate, sdch\nAccept-Language:zh-CN,zh;q=0.8,en;q=0.6\nCache-Control:max-age=0\nConnection:keep-alive\nHost:kache.com\nIf-None-Match:966aa4bd5183fd9358fd222647c5c6a3\nUpgrade-Insecure-Requests:1\nUser-Agent:Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36\n```\n\n响应头:\n\n```\nRequest URL:http://kache.com/etag.php\nRequest Method:GET\nStatus Code:304 Not Modified\nRemote Address:127.0.0.1:80\n\nConnection:Keep-Alive\nDate:Tue, 07 Mar 2017 13:02:16 GMT\nKeep-Alive:timeout=5, max=98\nServer:Apache/2.4.10 (Win32) OpenSSL/0.9.8zb mod_fcgid/2.3.9\n```\n需要注意第二次请求头有If-None-Match:，注意第二次响应为304\n\n----------\n\n再用php语言演示一下Last-Modified\n------------------------\n\n```\n<?php\n/**\n *If-Modified-Since[request] & Last-Modified [response]\n *减少网络字节传输\n */\n$headers = apache_request_headers();\n$file = 'modified.txt';\n\nif (isset($headers['If-Modified-Since']) && (strtotime($headers['If-Modified-Since']) == filemtime($file))) {\n\n    header('Last-Modified: ' . gmdate('D, d M Y H:i:s', filemtime($file)) . ' GMT', true, 304);\n\n} else {\n    header('Last-Modified: ' . gmdate('D, d M Y H:i:s', filemtime($file)) . ' GMT', true, 200);\n\n    $content = file_get_contents($file);\n    echo $content;\n}\n\n```\nIf-Modified-Since[请求头的] 和 Last-Modified [响应头的]这一对关系的HADER头我这里就不贴了。稍后的ppt里有比较详细的说明\n\n----------\n\n我们常用的就是Last-Modified和Etag一起来用，上php代码\n------------------------------------\n\n```\n<?php\n\n$file='etag_modify.txt';\n\n$last_modified_time=filemtime($file);\n\n$etag = md5_file($file);\n\n$headers = apache_request_headers();\n\n\nif (@strtotime($headers['If-Modified-Since']) == $last_modified_time ||\n    @trim($headers['If-None-Match']) == $etag) {\n  header('Content-Length: '.filesize($file));\n    header(\"HTTP/1.1 304 Not Modified\");\n\n}else{\n\n  header(\"Etag: $etag\");\n  header('Last-Modified: '.gmdate('D, d M Y H:i:s', $last_modified_time).' GMT', true, 200);\n  header('Content-Length: '.filesize($file));\n  $content=file_get_contents($file);\n  echo $content;\n\n}\n\n```\n这样做的好处是双重验证，同时满足两者条件才会缓存失效，弥补了modify的粒度最多为秒的问题以及modify的打开关闭即更改时间的问题。当然etag也会有坑，不同物理机可能会导致相同文件不同结果（没实验过）\n\n\n----------\n\n直接上NGINX配置示例\n------------\n毕竟php做服务端水平有限，大家可以参考  swoole framework OR workerman中对etag和modify的处理。\n\n不多说，上NGINX配置段，为了演示modify ，可以在/etc/nginx/nginx.conf中把etag关闭\n\n```\nhttp {\n\n        ##\n        # Basic Settings\n        ##\n        etag  off;\n        ...\n```\n\n关于其他静态文件缓存的设置\n\n```\nlocation ~* \\.(?:css)$ {\n  #expires 1y;\n  add_header  Cache-Control max-age=5;\n  add_header Cache-Control \"public\";\n  add_header  Last-Modified \"\";\n}\n\n```\n简单对以上括号内代码说明：\n1. expires 1y; 是http协议1.0写法，1.1对应的是cache-contorl:max-age='';前者为GMT绝对时间，后者为相对时间。\n2. add_header  Cache-Control max-age=5; 缓存5秒，如果没有Last-Modified（即设置了 add_header  Last-Modified \"\";） ，期间会一直直接请求服务器，服务器一直返回200，如果有设置Last-Modified，5秒后会请求一次服务器，5秒前会返回304.\n\n简单归纳Last-Modified和max-age（expires）关系\n\n1. 如果设置了max-age=0，而没有启用modify，那么不会缓存\n\n2. 如果单单启用modify，而没有max-age==0.也会缓存\n\n3. 如果启用了modify，并且 max-age=0，那么不会缓存\n\n4. 如果设置了max-age=1000，但没有启用modify ，不会缓存\n\n再此说明上面配置导致的结果：5秒内如果文件有变化，那么客户端不会有任何感知。5秒后将会重新发起请求，得到200响应。然后再缓存5秒【注意没有开启etag】\n\n----------\n下面这个例子和上面一样，是针对图片等，缓存1一个月，即使服务端删除了，1个月内也会正常显示（除非ctrl+f5，或者服务端重启了）public代表任何代理服务器都可以缓存，对应的为private，只允许客户端浏览器缓存。\n\n```\nlocation ~* \\.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {\n  expires 1M;\n  add_header Cache-Control \"public\";\n  add_header  Last-Modified \"\";\n}\n\n```\n----------\n\n那需要有更改就更新，怎么办？\n--------------\n\n```\nlocation ~* \\.(?:css)$ {\n  expires 1y;\n # add_header  Cache-Control max-age=5;\n # add_header Cache-Control \"public\";\n # add_header  Last-Modified \"\";\n}\n```\n以上配置虽然过期时间是一年，但是服务端会返回Last-Modified，来确认，意思为你就vim了一下xx.css,即使没有做任何更改，浏览器也会重新发起请求。你要是没改，那八成就一年后见了。\n\n那我就不想缓存怎么办？\n-----------\n用cache-control：控制\n用no-cahce【浏览器端等可以缓存，但是没有什么卵用】\n用no-store【浏览器端等不用缓存，不用费劲。每次都跟我服务端请求】\n用must-revalidate，浏览器端别整没用的，到期了就马上跟我请求。麻溜的必须。防止的就是代理服务器等自作聪明，认为没有过期。\n\n```\nlocation ~* \\.(?:js)$ {\n  add_header  Cache-Control no-cache;\n  add_header  Cache-Control must-revalidate;\n}\n```\n\n[测试代码和PPT在这里][1]\n-----------\n\n\n  [1]: https://github.com/tuber/HTTP_CACHE\n","slug":"http-cache","published":1,"updated":"2018-08-14T09:42:55.180Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjktlsbau000vegh3quek79u0","content":"<h2 id=\"用世界上最好的语言演示一下etag\"><a href=\"#用世界上最好的语言演示一下etag\" class=\"headerlink\" title=\"用世界上最好的语言演示一下etag\"></a>用世界上最好的语言演示一下etag</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\"></div><div class=\"line\">// apache 服务器，如果您是nginx请自行配置读取header等信息，同时下面会有nginx测试</div><div class=\"line\"></div><div class=\"line\">$file = &apos;etag.txt&apos;;</div><div class=\"line\">$etag = md5_file($file);</div><div class=\"line\">$headers = apache_request_headers();</div><div class=\"line\"></div><div class=\"line\">if (isset($headers[&apos;If-None-Match&apos;]) &amp;&amp; trim($headers[&quot;If-None-Match&quot;]) == $etag) &#123;</div><div class=\"line\">    header(&quot;HTTP/1.1 304 Not Modified&quot;);</div><div class=\"line\">&#125; else &#123;</div><div class=\"line\">    $content = file_get_contents($file);</div><div class=\"line\">    header(&quot;Etag: $etag&quot;);</div><div class=\"line\">    echo $content;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>第一次请求，服务器返回200.我分别列下请求头【RequsetHeaders】和响应头【ResponseHeaders】</p>\n<p>请求头<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div><div class=\"line\">Accept-Encoding:gzip, deflate, sdch</div><div class=\"line\">Accept-Language:zh-CN,zh;q=0.8,en;q=0.6</div><div class=\"line\">Cache-Control:no-cache</div><div class=\"line\">Connection:keep-alive</div><div class=\"line\">Host:kache.com</div><div class=\"line\">Pragma:no-cache</div><div class=\"line\">Upgrade-Insecure-Requests:1</div><div class=\"line\">User-Agent:Mozilla/5.</div></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<p>响应头</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">Request URL:http://kache.com/etag.php</div><div class=\"line\">Request Method:GET</div><div class=\"line\">Status Code:200 OK</div><div class=\"line\">Remote Address:127.0.0.1:80</div><div class=\"line\"></div><div class=\"line\">Connection:Keep-Alive</div><div class=\"line\">Content-Type:text/html</div><div class=\"line\">Date:Tue, 07 Mar 2017 13:02:13 GMT</div><div class=\"line\">Etag:966aa4bd5183fd9358fd222647c5c6a3</div><div class=\"line\">Keep-Alive:timeout=5, max=99</div><div class=\"line\">Server:Apache/2.4.10 (Win32) OpenSSL/0.9.8zb mod_fcgid/2.3.9</div><div class=\"line\">Transfer-Encoding:chunked</div><div class=\"line\">X-Powered-By:PHP/5.4.33</div></pre></td></tr></table></figure>\n<p>需要注意第一次请求头没有If-None-Match:，注意第一次响应头有Etag:这个标签,注意第一次是200</p>\n<hr>\n<p>第二次请求</p>\n<p>请求头：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div><div class=\"line\">Accept-Encoding:gzip, deflate, sdch</div><div class=\"line\">Accept-Language:zh-CN,zh;q=0.8,en;q=0.6</div><div class=\"line\">Cache-Control:max-age=0</div><div class=\"line\">Connection:keep-alive</div><div class=\"line\">Host:kache.com</div><div class=\"line\">If-None-Match:966aa4bd5183fd9358fd222647c5c6a3</div><div class=\"line\">Upgrade-Insecure-Requests:1</div><div class=\"line\">User-Agent:Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36</div></pre></td></tr></table></figure>\n<p>响应头:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">Request URL:http://kache.com/etag.php</div><div class=\"line\">Request Method:GET</div><div class=\"line\">Status Code:304 Not Modified</div><div class=\"line\">Remote Address:127.0.0.1:80</div><div class=\"line\"></div><div class=\"line\">Connection:Keep-Alive</div><div class=\"line\">Date:Tue, 07 Mar 2017 13:02:16 GMT</div><div class=\"line\">Keep-Alive:timeout=5, max=98</div><div class=\"line\">Server:Apache/2.4.10 (Win32) OpenSSL/0.9.8zb mod_fcgid/2.3.9</div></pre></td></tr></table></figure>\n<p>需要注意第二次请求头有If-None-Match:，注意第二次响应为304</p>\n<hr>\n<h2 id=\"再用php语言演示一下Last-Modified\"><a href=\"#再用php语言演示一下Last-Modified\" class=\"headerlink\" title=\"再用php语言演示一下Last-Modified\"></a>再用php语言演示一下Last-Modified</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">/**</div><div class=\"line\"> *If-Modified-Since[request] &amp; Last-Modified [response]</div><div class=\"line\"> *减少网络字节传输</div><div class=\"line\"> */</div><div class=\"line\">$headers = apache_request_headers();</div><div class=\"line\">$file = &apos;modified.txt&apos;;</div><div class=\"line\"></div><div class=\"line\">if (isset($headers[&apos;If-Modified-Since&apos;]) &amp;&amp; (strtotime($headers[&apos;If-Modified-Since&apos;]) == filemtime($file))) &#123;</div><div class=\"line\"></div><div class=\"line\">    header(&apos;Last-Modified: &apos; . gmdate(&apos;D, d M Y H:i:s&apos;, filemtime($file)) . &apos; GMT&apos;, true, 304);</div><div class=\"line\"></div><div class=\"line\">&#125; else &#123;</div><div class=\"line\">    header(&apos;Last-Modified: &apos; . gmdate(&apos;D, d M Y H:i:s&apos;, filemtime($file)) . &apos; GMT&apos;, true, 200);</div><div class=\"line\"></div><div class=\"line\">    $content = file_get_contents($file);</div><div class=\"line\">    echo $content;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>If-Modified-Since[请求头的] 和 Last-Modified [响应头的]这一对关系的HADER头我这里就不贴了。稍后的ppt里有比较详细的说明</p>\n<hr>\n<h2 id=\"我们常用的就是Last-Modified和Etag一起来用，上php代码\"><a href=\"#我们常用的就是Last-Modified和Etag一起来用，上php代码\" class=\"headerlink\" title=\"我们常用的就是Last-Modified和Etag一起来用，上php代码\"></a>我们常用的就是Last-Modified和Etag一起来用，上php代码</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\"></div><div class=\"line\">$file=&apos;etag_modify.txt&apos;;</div><div class=\"line\"></div><div class=\"line\">$last_modified_time=filemtime($file);</div><div class=\"line\"></div><div class=\"line\">$etag = md5_file($file);</div><div class=\"line\"></div><div class=\"line\">$headers = apache_request_headers();</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">if (@strtotime($headers[&apos;If-Modified-Since&apos;]) == $last_modified_time ||</div><div class=\"line\">    @trim($headers[&apos;If-None-Match&apos;]) == $etag) &#123;</div><div class=\"line\">  header(&apos;Content-Length: &apos;.filesize($file));</div><div class=\"line\">    header(&quot;HTTP/1.1 304 Not Modified&quot;);</div><div class=\"line\"></div><div class=\"line\">&#125;else&#123;</div><div class=\"line\"></div><div class=\"line\">  header(&quot;Etag: $etag&quot;);</div><div class=\"line\">  header(&apos;Last-Modified: &apos;.gmdate(&apos;D, d M Y H:i:s&apos;, $last_modified_time).&apos; GMT&apos;, true, 200);</div><div class=\"line\">  header(&apos;Content-Length: &apos;.filesize($file));</div><div class=\"line\">  $content=file_get_contents($file);</div><div class=\"line\">  echo $content;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>这样做的好处是双重验证，同时满足两者条件才会缓存失效，弥补了modify的粒度最多为秒的问题以及modify的打开关闭即更改时间的问题。当然etag也会有坑，不同物理机可能会导致相同文件不同结果（没实验过）</p>\n<hr>\n<h2 id=\"直接上NGINX配置示例\"><a href=\"#直接上NGINX配置示例\" class=\"headerlink\" title=\"直接上NGINX配置示例\"></a>直接上NGINX配置示例</h2><p>毕竟php做服务端水平有限，大家可以参考  swoole framework OR workerman中对etag和modify的处理。</p>\n<p>不多说，上NGINX配置段，为了演示modify ，可以在/etc/nginx/nginx.conf中把etag关闭</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">http &#123;</div><div class=\"line\"></div><div class=\"line\">        ##</div><div class=\"line\">        # Basic Settings</div><div class=\"line\">        ##</div><div class=\"line\">        etag  off;</div><div class=\"line\">        ...</div></pre></td></tr></table></figure>\n<p>关于其他静态文件缓存的设置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">location ~* \\.(?:css)$ &#123;</div><div class=\"line\">  #expires 1y;</div><div class=\"line\">  add_header  Cache-Control max-age=5;</div><div class=\"line\">  add_header Cache-Control &quot;public&quot;;</div><div class=\"line\">  add_header  Last-Modified &quot;&quot;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>简单对以上括号内代码说明：</p>\n<ol>\n<li>expires 1y; 是http协议1.0写法，1.1对应的是cache-contorl:max-age=’’;前者为GMT绝对时间，后者为相对时间。</li>\n<li>add_header  Cache-Control max-age=5; 缓存5秒，如果没有Last-Modified（即设置了 add_header  Last-Modified “”;） ，期间会一直直接请求服务器，服务器一直返回200，如果有设置Last-Modified，5秒后会请求一次服务器，5秒前会返回304.</li>\n</ol>\n<p>简单归纳Last-Modified和max-age（expires）关系</p>\n<ol>\n<li><p>如果设置了max-age=0，而没有启用modify，那么不会缓存</p>\n</li>\n<li><p>如果单单启用modify，而没有max-age==0.也会缓存</p>\n</li>\n<li><p>如果启用了modify，并且 max-age=0，那么不会缓存</p>\n</li>\n<li><p>如果设置了max-age=1000，但没有启用modify ，不会缓存</p>\n</li>\n</ol>\n<p>再此说明上面配置导致的结果：5秒内如果文件有变化，那么客户端不会有任何感知。5秒后将会重新发起请求，得到200响应。然后再缓存5秒【注意没有开启etag】</p>\n<hr>\n<p>下面这个例子和上面一样，是针对图片等，缓存1一个月，即使服务端删除了，1个月内也会正常显示（除非ctrl+f5，或者服务端重启了）public代表任何代理服务器都可以缓存，对应的为private，只允许客户端浏览器缓存。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">location ~* \\.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ &#123;</div><div class=\"line\">  expires 1M;</div><div class=\"line\">  add_header Cache-Control &quot;public&quot;;</div><div class=\"line\">  add_header  Last-Modified &quot;&quot;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"那需要有更改就更新，怎么办？\"><a href=\"#那需要有更改就更新，怎么办？\" class=\"headerlink\" title=\"那需要有更改就更新，怎么办？\"></a>那需要有更改就更新，怎么办？</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">location ~* \\.(?:css)$ &#123;</div><div class=\"line\">  expires 1y;</div><div class=\"line\"> # add_header  Cache-Control max-age=5;</div><div class=\"line\"> # add_header Cache-Control &quot;public&quot;;</div><div class=\"line\"> # add_header  Last-Modified &quot;&quot;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>以上配置虽然过期时间是一年，但是服务端会返回Last-Modified，来确认，意思为你就vim了一下xx.css,即使没有做任何更改，浏览器也会重新发起请求。你要是没改，那八成就一年后见了。</p>\n<h2 id=\"那我就不想缓存怎么办？\"><a href=\"#那我就不想缓存怎么办？\" class=\"headerlink\" title=\"那我就不想缓存怎么办？\"></a>那我就不想缓存怎么办？</h2><p>用cache-control：控制<br>用no-cahce【浏览器端等可以缓存，但是没有什么卵用】<br>用no-store【浏览器端等不用缓存，不用费劲。每次都跟我服务端请求】<br>用must-revalidate，浏览器端别整没用的，到期了就马上跟我请求。麻溜的必须。防止的就是代理服务器等自作聪明，认为没有过期。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">location ~* \\.(?:js)$ &#123;</div><div class=\"line\">  add_header  Cache-Control no-cache;</div><div class=\"line\">  add_header  Cache-Control must-revalidate;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"测试代码和PPT在这里\"><a href=\"#测试代码和PPT在这里\" class=\"headerlink\" title=\"测试代码和PPT在这里\"></a><a href=\"https://github.com/tuber/HTTP_CACHE\" target=\"_blank\" rel=\"external\">测试代码和PPT在这里</a></h2>","site":{"data":{}},"excerpt":"<h2 id=\"用世界上最好的语言演示一下etag\"><a href=\"#用世界上最好的语言演示一下etag\" class=\"headerlink\" title=\"用世界上最好的语言演示一下etag\"></a>用世界上最好的语言演示一下etag</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\"></div><div class=\"line\">// apache 服务器，如果您是nginx请自行配置读取header等信息，同时下面会有nginx测试</div><div class=\"line\"></div><div class=\"line\">$file = &apos;etag.txt&apos;;</div><div class=\"line\">$etag = md5_file($file);</div><div class=\"line\">$headers = apache_request_headers();</div><div class=\"line\"></div><div class=\"line\">if (isset($headers[&apos;If-None-Match&apos;]) &amp;&amp; trim($headers[&quot;If-None-Match&quot;]) == $etag) &#123;</div><div class=\"line\">    header(&quot;HTTP/1.1 304 Not Modified&quot;);</div><div class=\"line\">&#125; else &#123;</div><div class=\"line\">    $content = file_get_contents($file);</div><div class=\"line\">    header(&quot;Etag: $etag&quot;);</div><div class=\"line\">    echo $content;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>第一次请求，服务器返回200.我分别列下请求头【RequsetHeaders】和响应头【ResponseHeaders】</p>\n<p>请求头<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div><div class=\"line\">Accept-Encoding:gzip, deflate, sdch</div><div class=\"line\">Accept-Language:zh-CN,zh;q=0.8,en;q=0.6</div><div class=\"line\">Cache-Control:no-cache</div><div class=\"line\">Connection:keep-alive</div><div class=\"line\">Host:kache.com</div><div class=\"line\">Pragma:no-cache</div><div class=\"line\">Upgrade-Insecure-Requests:1</div><div class=\"line\">User-Agent:Mozilla/5.</div></pre></td></tr></table></figure></p>","more":"<p>响应头</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">Request URL:http://kache.com/etag.php</div><div class=\"line\">Request Method:GET</div><div class=\"line\">Status Code:200 OK</div><div class=\"line\">Remote Address:127.0.0.1:80</div><div class=\"line\"></div><div class=\"line\">Connection:Keep-Alive</div><div class=\"line\">Content-Type:text/html</div><div class=\"line\">Date:Tue, 07 Mar 2017 13:02:13 GMT</div><div class=\"line\">Etag:966aa4bd5183fd9358fd222647c5c6a3</div><div class=\"line\">Keep-Alive:timeout=5, max=99</div><div class=\"line\">Server:Apache/2.4.10 (Win32) OpenSSL/0.9.8zb mod_fcgid/2.3.9</div><div class=\"line\">Transfer-Encoding:chunked</div><div class=\"line\">X-Powered-By:PHP/5.4.33</div></pre></td></tr></table></figure>\n<p>需要注意第一次请求头没有If-None-Match:，注意第一次响应头有Etag:这个标签,注意第一次是200</p>\n<hr>\n<p>第二次请求</p>\n<p>请求头：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div><div class=\"line\">Accept-Encoding:gzip, deflate, sdch</div><div class=\"line\">Accept-Language:zh-CN,zh;q=0.8,en;q=0.6</div><div class=\"line\">Cache-Control:max-age=0</div><div class=\"line\">Connection:keep-alive</div><div class=\"line\">Host:kache.com</div><div class=\"line\">If-None-Match:966aa4bd5183fd9358fd222647c5c6a3</div><div class=\"line\">Upgrade-Insecure-Requests:1</div><div class=\"line\">User-Agent:Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36</div></pre></td></tr></table></figure>\n<p>响应头:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">Request URL:http://kache.com/etag.php</div><div class=\"line\">Request Method:GET</div><div class=\"line\">Status Code:304 Not Modified</div><div class=\"line\">Remote Address:127.0.0.1:80</div><div class=\"line\"></div><div class=\"line\">Connection:Keep-Alive</div><div class=\"line\">Date:Tue, 07 Mar 2017 13:02:16 GMT</div><div class=\"line\">Keep-Alive:timeout=5, max=98</div><div class=\"line\">Server:Apache/2.4.10 (Win32) OpenSSL/0.9.8zb mod_fcgid/2.3.9</div></pre></td></tr></table></figure>\n<p>需要注意第二次请求头有If-None-Match:，注意第二次响应为304</p>\n<hr>\n<h2 id=\"再用php语言演示一下Last-Modified\"><a href=\"#再用php语言演示一下Last-Modified\" class=\"headerlink\" title=\"再用php语言演示一下Last-Modified\"></a>再用php语言演示一下Last-Modified</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">/**</div><div class=\"line\"> *If-Modified-Since[request] &amp; Last-Modified [response]</div><div class=\"line\"> *减少网络字节传输</div><div class=\"line\"> */</div><div class=\"line\">$headers = apache_request_headers();</div><div class=\"line\">$file = &apos;modified.txt&apos;;</div><div class=\"line\"></div><div class=\"line\">if (isset($headers[&apos;If-Modified-Since&apos;]) &amp;&amp; (strtotime($headers[&apos;If-Modified-Since&apos;]) == filemtime($file))) &#123;</div><div class=\"line\"></div><div class=\"line\">    header(&apos;Last-Modified: &apos; . gmdate(&apos;D, d M Y H:i:s&apos;, filemtime($file)) . &apos; GMT&apos;, true, 304);</div><div class=\"line\"></div><div class=\"line\">&#125; else &#123;</div><div class=\"line\">    header(&apos;Last-Modified: &apos; . gmdate(&apos;D, d M Y H:i:s&apos;, filemtime($file)) . &apos; GMT&apos;, true, 200);</div><div class=\"line\"></div><div class=\"line\">    $content = file_get_contents($file);</div><div class=\"line\">    echo $content;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>If-Modified-Since[请求头的] 和 Last-Modified [响应头的]这一对关系的HADER头我这里就不贴了。稍后的ppt里有比较详细的说明</p>\n<hr>\n<h2 id=\"我们常用的就是Last-Modified和Etag一起来用，上php代码\"><a href=\"#我们常用的就是Last-Modified和Etag一起来用，上php代码\" class=\"headerlink\" title=\"我们常用的就是Last-Modified和Etag一起来用，上php代码\"></a>我们常用的就是Last-Modified和Etag一起来用，上php代码</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\"></div><div class=\"line\">$file=&apos;etag_modify.txt&apos;;</div><div class=\"line\"></div><div class=\"line\">$last_modified_time=filemtime($file);</div><div class=\"line\"></div><div class=\"line\">$etag = md5_file($file);</div><div class=\"line\"></div><div class=\"line\">$headers = apache_request_headers();</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">if (@strtotime($headers[&apos;If-Modified-Since&apos;]) == $last_modified_time ||</div><div class=\"line\">    @trim($headers[&apos;If-None-Match&apos;]) == $etag) &#123;</div><div class=\"line\">  header(&apos;Content-Length: &apos;.filesize($file));</div><div class=\"line\">    header(&quot;HTTP/1.1 304 Not Modified&quot;);</div><div class=\"line\"></div><div class=\"line\">&#125;else&#123;</div><div class=\"line\"></div><div class=\"line\">  header(&quot;Etag: $etag&quot;);</div><div class=\"line\">  header(&apos;Last-Modified: &apos;.gmdate(&apos;D, d M Y H:i:s&apos;, $last_modified_time).&apos; GMT&apos;, true, 200);</div><div class=\"line\">  header(&apos;Content-Length: &apos;.filesize($file));</div><div class=\"line\">  $content=file_get_contents($file);</div><div class=\"line\">  echo $content;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>这样做的好处是双重验证，同时满足两者条件才会缓存失效，弥补了modify的粒度最多为秒的问题以及modify的打开关闭即更改时间的问题。当然etag也会有坑，不同物理机可能会导致相同文件不同结果（没实验过）</p>\n<hr>\n<h2 id=\"直接上NGINX配置示例\"><a href=\"#直接上NGINX配置示例\" class=\"headerlink\" title=\"直接上NGINX配置示例\"></a>直接上NGINX配置示例</h2><p>毕竟php做服务端水平有限，大家可以参考  swoole framework OR workerman中对etag和modify的处理。</p>\n<p>不多说，上NGINX配置段，为了演示modify ，可以在/etc/nginx/nginx.conf中把etag关闭</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">http &#123;</div><div class=\"line\"></div><div class=\"line\">        ##</div><div class=\"line\">        # Basic Settings</div><div class=\"line\">        ##</div><div class=\"line\">        etag  off;</div><div class=\"line\">        ...</div></pre></td></tr></table></figure>\n<p>关于其他静态文件缓存的设置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">location ~* \\.(?:css)$ &#123;</div><div class=\"line\">  #expires 1y;</div><div class=\"line\">  add_header  Cache-Control max-age=5;</div><div class=\"line\">  add_header Cache-Control &quot;public&quot;;</div><div class=\"line\">  add_header  Last-Modified &quot;&quot;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>简单对以上括号内代码说明：</p>\n<ol>\n<li>expires 1y; 是http协议1.0写法，1.1对应的是cache-contorl:max-age=’’;前者为GMT绝对时间，后者为相对时间。</li>\n<li>add_header  Cache-Control max-age=5; 缓存5秒，如果没有Last-Modified（即设置了 add_header  Last-Modified “”;） ，期间会一直直接请求服务器，服务器一直返回200，如果有设置Last-Modified，5秒后会请求一次服务器，5秒前会返回304.</li>\n</ol>\n<p>简单归纳Last-Modified和max-age（expires）关系</p>\n<ol>\n<li><p>如果设置了max-age=0，而没有启用modify，那么不会缓存</p>\n</li>\n<li><p>如果单单启用modify，而没有max-age==0.也会缓存</p>\n</li>\n<li><p>如果启用了modify，并且 max-age=0，那么不会缓存</p>\n</li>\n<li><p>如果设置了max-age=1000，但没有启用modify ，不会缓存</p>\n</li>\n</ol>\n<p>再此说明上面配置导致的结果：5秒内如果文件有变化，那么客户端不会有任何感知。5秒后将会重新发起请求，得到200响应。然后再缓存5秒【注意没有开启etag】</p>\n<hr>\n<p>下面这个例子和上面一样，是针对图片等，缓存1一个月，即使服务端删除了，1个月内也会正常显示（除非ctrl+f5，或者服务端重启了）public代表任何代理服务器都可以缓存，对应的为private，只允许客户端浏览器缓存。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">location ~* \\.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ &#123;</div><div class=\"line\">  expires 1M;</div><div class=\"line\">  add_header Cache-Control &quot;public&quot;;</div><div class=\"line\">  add_header  Last-Modified &quot;&quot;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"那需要有更改就更新，怎么办？\"><a href=\"#那需要有更改就更新，怎么办？\" class=\"headerlink\" title=\"那需要有更改就更新，怎么办？\"></a>那需要有更改就更新，怎么办？</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">location ~* \\.(?:css)$ &#123;</div><div class=\"line\">  expires 1y;</div><div class=\"line\"> # add_header  Cache-Control max-age=5;</div><div class=\"line\"> # add_header Cache-Control &quot;public&quot;;</div><div class=\"line\"> # add_header  Last-Modified &quot;&quot;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>以上配置虽然过期时间是一年，但是服务端会返回Last-Modified，来确认，意思为你就vim了一下xx.css,即使没有做任何更改，浏览器也会重新发起请求。你要是没改，那八成就一年后见了。</p>\n<h2 id=\"那我就不想缓存怎么办？\"><a href=\"#那我就不想缓存怎么办？\" class=\"headerlink\" title=\"那我就不想缓存怎么办？\"></a>那我就不想缓存怎么办？</h2><p>用cache-control：控制<br>用no-cahce【浏览器端等可以缓存，但是没有什么卵用】<br>用no-store【浏览器端等不用缓存，不用费劲。每次都跟我服务端请求】<br>用must-revalidate，浏览器端别整没用的，到期了就马上跟我请求。麻溜的必须。防止的就是代理服务器等自作聪明，认为没有过期。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">location ~* \\.(?:js)$ &#123;</div><div class=\"line\">  add_header  Cache-Control no-cache;</div><div class=\"line\">  add_header  Cache-Control must-revalidate;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"测试代码和PPT在这里\"><a href=\"#测试代码和PPT在这里\" class=\"headerlink\" title=\"测试代码和PPT在这里\"></a><a href=\"https://github.com/tuber/HTTP_CACHE\">测试代码和PPT在这里</a></h2>"},{"title":"接口调用安全性","date":"2016-12-05T08:42:23.000Z","_content":"\n一些接口调用中，为了安全原因，会加入一些token或者是签名。\n以下是个简单例子：根据post给被调用方的key和value数组，\n其中先根据数组做ksort，然后对value的值做（递归）拼接得到$string。\n<!-- more -->\n返回后用key.$string，调用方和被调用方按照此规则，对传递过来的额外post字段中的sign做验证，另外也可以结合一些非对称加密和对称加密，交换固定的字段和值来生成token，（此token也是固定的，可以随着时间等变化来变化），这样达到一定的安全性。\n\n```php\nfunction getSign($data, $key = '')\n{\n    if(is_array($data)){\n        ksort($data);//按照键值排序\n    }\n\n    $string = getPostString($data);\n    return $string;\n    // return md5($string.$key);\n}\n/**\n * 数组系列化成字符串\n */\nfunction getPostString(&$post)\n{\n    $string = '';\n    if(is_array($post))\n    {\n        foreach($post as $item)\n        {\n            if(is_array($item))\n                $string .= getPostString($item);\n            else\n                $string .= $item;\n        }\n    }\n    else\n    {\n        $string = $post;\n    }\n\n    return $string;\n}\n$params=[\n'mobile'=>'18618824588',\n'code'=>'114360',\n'hid'=>'2700',\n'name'=>'tb',\n'city_serial_id'=>'bj2700',\n];\n\nvar_dump(ksort($params));\nvar_dump($params);\necho getSign($params);\n```\n","source":"_posts/interface_security.md","raw":"---\ntitle: 接口调用安全性\ndate: 2016-12-05 16:42:23\ncategories: PHP\ntags:\n - 接口调用\n - 安全性\n - sign&token\n---\n\n一些接口调用中，为了安全原因，会加入一些token或者是签名。\n以下是个简单例子：根据post给被调用方的key和value数组，\n其中先根据数组做ksort，然后对value的值做（递归）拼接得到$string。\n<!-- more -->\n返回后用key.$string，调用方和被调用方按照此规则，对传递过来的额外post字段中的sign做验证，另外也可以结合一些非对称加密和对称加密，交换固定的字段和值来生成token，（此token也是固定的，可以随着时间等变化来变化），这样达到一定的安全性。\n\n```php\nfunction getSign($data, $key = '')\n{\n    if(is_array($data)){\n        ksort($data);//按照键值排序\n    }\n\n    $string = getPostString($data);\n    return $string;\n    // return md5($string.$key);\n}\n/**\n * 数组系列化成字符串\n */\nfunction getPostString(&$post)\n{\n    $string = '';\n    if(is_array($post))\n    {\n        foreach($post as $item)\n        {\n            if(is_array($item))\n                $string .= getPostString($item);\n            else\n                $string .= $item;\n        }\n    }\n    else\n    {\n        $string = $post;\n    }\n\n    return $string;\n}\n$params=[\n'mobile'=>'18618824588',\n'code'=>'114360',\n'hid'=>'2700',\n'name'=>'tb',\n'city_serial_id'=>'bj2700',\n];\n\nvar_dump(ksort($params));\nvar_dump($params);\necho getSign($params);\n```\n","slug":"interface_security","published":1,"updated":"2018-08-14T09:42:55.182Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjktlsbav000xegh3knfgk1iq","content":"<p>一些接口调用中，为了安全原因，会加入一些token或者是签名。<br>以下是个简单例子：根据post给被调用方的key和value数组，<br>其中先根据数组做ksort，然后对value的值做（递归）拼接得到$string。<br><a id=\"more\"></a><br>返回后用key.$string，调用方和被调用方按照此规则，对传递过来的额外post字段中的sign做验证，另外也可以结合一些非对称加密和对称加密，交换固定的字段和值来生成token，（此token也是固定的，可以随着时间等变化来变化），这样达到一定的安全性。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getSign</span><span class=\"params\">($data, $key = <span class=\"string\">''</span>)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(is_array($data))&#123;</div><div class=\"line\">        ksort($data);<span class=\"comment\">//按照键值排序</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    $string = getPostString($data);</div><div class=\"line\">    <span class=\"keyword\">return</span> $string;</div><div class=\"line\">    <span class=\"comment\">// return md5($string.$key);</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 数组系列化成字符串</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getPostString</span><span class=\"params\">(&amp;$post)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    $string = <span class=\"string\">''</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span>(is_array($post))</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">foreach</span>($post <span class=\"keyword\">as</span> $item)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(is_array($item))</div><div class=\"line\">                $string .= getPostString($item);</div><div class=\"line\">            <span class=\"keyword\">else</span></div><div class=\"line\">                $string .= $item;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">else</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        $string = $post;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> $string;</div><div class=\"line\">&#125;</div><div class=\"line\">$params=[</div><div class=\"line\"><span class=\"string\">'mobile'</span>=&gt;<span class=\"string\">'18618824588'</span>,</div><div class=\"line\"><span class=\"string\">'code'</span>=&gt;<span class=\"string\">'114360'</span>,</div><div class=\"line\"><span class=\"string\">'hid'</span>=&gt;<span class=\"string\">'2700'</span>,</div><div class=\"line\"><span class=\"string\">'name'</span>=&gt;<span class=\"string\">'tb'</span>,</div><div class=\"line\"><span class=\"string\">'city_serial_id'</span>=&gt;<span class=\"string\">'bj2700'</span>,</div><div class=\"line\">];</div><div class=\"line\"></div><div class=\"line\">var_dump(ksort($params));</div><div class=\"line\">var_dump($params);</div><div class=\"line\"><span class=\"keyword\">echo</span> getSign($params);</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>一些接口调用中，为了安全原因，会加入一些token或者是签名。<br>以下是个简单例子：根据post给被调用方的key和value数组，<br>其中先根据数组做ksort，然后对value的值做（递归）拼接得到$string。<br>","more":"<br>返回后用key.$string，调用方和被调用方按照此规则，对传递过来的额外post字段中的sign做验证，另外也可以结合一些非对称加密和对称加密，交换固定的字段和值来生成token，（此token也是固定的，可以随着时间等变化来变化），这样达到一定的安全性。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getSign</span><span class=\"params\">($data, $key = <span class=\"string\">''</span>)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(is_array($data))&#123;</div><div class=\"line\">        ksort($data);<span class=\"comment\">//按照键值排序</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    $string = getPostString($data);</div><div class=\"line\">    <span class=\"keyword\">return</span> $string;</div><div class=\"line\">    <span class=\"comment\">// return md5($string.$key);</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 数组系列化成字符串</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getPostString</span><span class=\"params\">(&amp;$post)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    $string = <span class=\"string\">''</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span>(is_array($post))</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">foreach</span>($post <span class=\"keyword\">as</span> $item)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(is_array($item))</div><div class=\"line\">                $string .= getPostString($item);</div><div class=\"line\">            <span class=\"keyword\">else</span></div><div class=\"line\">                $string .= $item;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">else</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        $string = $post;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> $string;</div><div class=\"line\">&#125;</div><div class=\"line\">$params=[</div><div class=\"line\"><span class=\"string\">'mobile'</span>=&gt;<span class=\"string\">'18618824588'</span>,</div><div class=\"line\"><span class=\"string\">'code'</span>=&gt;<span class=\"string\">'114360'</span>,</div><div class=\"line\"><span class=\"string\">'hid'</span>=&gt;<span class=\"string\">'2700'</span>,</div><div class=\"line\"><span class=\"string\">'name'</span>=&gt;<span class=\"string\">'tb'</span>,</div><div class=\"line\"><span class=\"string\">'city_serial_id'</span>=&gt;<span class=\"string\">'bj2700'</span>,</div><div class=\"line\">];</div><div class=\"line\"></div><div class=\"line\">var_dump(ksort($params));</div><div class=\"line\">var_dump($params);</div><div class=\"line\"><span class=\"keyword\">echo</span> getSign($params);</div></pre></td></tr></table></figure>"},{"title":"JAVA适配器模式-2016年上半半年考试真题","date":"2016-11-07T04:28:59.000Z","_content":" ### 地址信息类 要求扩展 Dutch（荷兰）语言###\n-----------------\n ### 现采用适配器模式（adapter）实现该要求： ###\n\n\n <!-- more -->\n\n```java\nclass Address{\n  public void street(){System.out.println(\"正常街道\");}\n  public void zip(){System.out.println(\"正常邮编\");}\n  public void city(){System.out.println(\"正常地方\");}\n}\n\nclass DutchAddress{\n\n  public void straat(){System.out.println(\"荷兰语街道\");}\n  public void postcode(){System.out.println(\"荷兰语邮编\");}\n  public void plaats(){System.out.println(\"荷兰语地方\");}\n}\n\nclass DutchAddressAdapter extends DutchAddress{\n  private Address address;\n  public DutchAddressAdapter(Address addr){\n    this.address=addr;\n  }\n\n  public void straat(){\n    this.address.street();\n  }\n  public void postcode(){\n    this.address.zip();\n  }\n  public void plaats(){\n    this.address.city();\n  }\n\n}\n\n\npublic class Test {\n  public static void main(String[] args){\n    Address addr=new Address();\n    DutchAddress addrAdapter=new DutchAddressAdapter(addr);\n    System.out.println(\"\\n THE DUCTH ADDRESS\\n\");\n    testDutch(addrAdapter);\n  }\n\n  static void testDutch(DutchAddress addr){\n    addr.straat();\n    addr.postcode();\n    addr.plaats();\n  }\n\n}\n```\n### 类图 ###\n\n![适配器模式][1]\n\n\n[1]: /img/patterndesign/adapter.png\n","source":"_posts/java-adapter.md","raw":"\n---\ntitle: JAVA适配器模式-2016年上半半年考试真题\ndate: 2016-11-07 12:28:59\ncategories: 设计模式\ntags:\n - 适配器模式\n - 软件设计师\n - JAVA\n---\n ### 地址信息类 要求扩展 Dutch（荷兰）语言###\n-----------------\n ### 现采用适配器模式（adapter）实现该要求： ###\n\n\n <!-- more -->\n\n```java\nclass Address{\n  public void street(){System.out.println(\"正常街道\");}\n  public void zip(){System.out.println(\"正常邮编\");}\n  public void city(){System.out.println(\"正常地方\");}\n}\n\nclass DutchAddress{\n\n  public void straat(){System.out.println(\"荷兰语街道\");}\n  public void postcode(){System.out.println(\"荷兰语邮编\");}\n  public void plaats(){System.out.println(\"荷兰语地方\");}\n}\n\nclass DutchAddressAdapter extends DutchAddress{\n  private Address address;\n  public DutchAddressAdapter(Address addr){\n    this.address=addr;\n  }\n\n  public void straat(){\n    this.address.street();\n  }\n  public void postcode(){\n    this.address.zip();\n  }\n  public void plaats(){\n    this.address.city();\n  }\n\n}\n\n\npublic class Test {\n  public static void main(String[] args){\n    Address addr=new Address();\n    DutchAddress addrAdapter=new DutchAddressAdapter(addr);\n    System.out.println(\"\\n THE DUCTH ADDRESS\\n\");\n    testDutch(addrAdapter);\n  }\n\n  static void testDutch(DutchAddress addr){\n    addr.straat();\n    addr.postcode();\n    addr.plaats();\n  }\n\n}\n```\n### 类图 ###\n\n![适配器模式][1]\n\n\n[1]: /img/patterndesign/adapter.png\n","slug":"java-adapter","published":1,"updated":"2018-08-14T09:42:55.185Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjktlsbav0010egh36tm2vc5m","content":"<h3 id=\"地址信息类-要求扩展-Dutch（荷兰）语言\"><a href=\"#地址信息类-要求扩展-Dutch（荷兰）语言\" class=\"headerlink\" title=\"地址信息类 要求扩展 Dutch（荷兰）语言\"></a>地址信息类 要求扩展 Dutch（荷兰）语言</h3><hr>\n<h3 id=\"现采用适配器模式（adapter）实现该要求：\"><a href=\"#现采用适配器模式（adapter）实现该要求：\" class=\"headerlink\" title=\"现采用适配器模式（adapter）实现该要求：\"></a>现采用适配器模式（adapter）实现该要求：</h3> <a id=\"more\"></a>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Address</span></span>&#123;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">street</span><span class=\"params\">()</span></span>&#123;System.out.println(<span class=\"string\">\"正常街道\"</span>);&#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">zip</span><span class=\"params\">()</span></span>&#123;System.out.println(<span class=\"string\">\"正常邮编\"</span>);&#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">city</span><span class=\"params\">()</span></span>&#123;System.out.println(<span class=\"string\">\"正常地方\"</span>);&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DutchAddress</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">straat</span><span class=\"params\">()</span></span>&#123;System.out.println(<span class=\"string\">\"荷兰语街道\"</span>);&#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">postcode</span><span class=\"params\">()</span></span>&#123;System.out.println(<span class=\"string\">\"荷兰语邮编\"</span>);&#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">plaats</span><span class=\"params\">()</span></span>&#123;System.out.println(<span class=\"string\">\"荷兰语地方\"</span>);&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DutchAddressAdapter</span> <span class=\"keyword\">extends</span> <span class=\"title\">DutchAddress</span></span>&#123;</div><div class=\"line\">  <span class=\"keyword\">private</span> Address address;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">DutchAddressAdapter</span><span class=\"params\">(Address addr)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.address=addr;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">straat</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.address.street();</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">postcode</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.address.zip();</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">plaats</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.address.city();</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">    Address addr=<span class=\"keyword\">new</span> Address();</div><div class=\"line\">    DutchAddress addrAdapter=<span class=\"keyword\">new</span> DutchAddressAdapter(addr);</div><div class=\"line\">    System.out.println(<span class=\"string\">\"\\n THE DUCTH ADDRESS\\n\"</span>);</div><div class=\"line\">    testDutch(addrAdapter);</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">testDutch</span><span class=\"params\">(DutchAddress addr)</span></span>&#123;</div><div class=\"line\">    addr.straat();</div><div class=\"line\">    addr.postcode();</div><div class=\"line\">    addr.plaats();</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h3><p><img src=\"/img/patterndesign/adapter.png\" alt=\"适配器模式\"></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"地址信息类-要求扩展-Dutch（荷兰）语言\"><a href=\"#地址信息类-要求扩展-Dutch（荷兰）语言\" class=\"headerlink\" title=\"地址信息类 要求扩展 Dutch（荷兰）语言\"></a>地址信息类 要求扩展 Dutch（荷兰）语言</h3><hr>\n<h3 id=\"现采用适配器模式（adapter）实现该要求：\"><a href=\"#现采用适配器模式（adapter）实现该要求：\" class=\"headerlink\" title=\"现采用适配器模式（adapter）实现该要求：\"></a>现采用适配器模式（adapter）实现该要求：</h3>","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Address</span></span>&#123;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">street</span><span class=\"params\">()</span></span>&#123;System.out.println(<span class=\"string\">\"正常街道\"</span>);&#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">zip</span><span class=\"params\">()</span></span>&#123;System.out.println(<span class=\"string\">\"正常邮编\"</span>);&#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">city</span><span class=\"params\">()</span></span>&#123;System.out.println(<span class=\"string\">\"正常地方\"</span>);&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DutchAddress</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">straat</span><span class=\"params\">()</span></span>&#123;System.out.println(<span class=\"string\">\"荷兰语街道\"</span>);&#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">postcode</span><span class=\"params\">()</span></span>&#123;System.out.println(<span class=\"string\">\"荷兰语邮编\"</span>);&#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">plaats</span><span class=\"params\">()</span></span>&#123;System.out.println(<span class=\"string\">\"荷兰语地方\"</span>);&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DutchAddressAdapter</span> <span class=\"keyword\">extends</span> <span class=\"title\">DutchAddress</span></span>&#123;</div><div class=\"line\">  <span class=\"keyword\">private</span> Address address;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">DutchAddressAdapter</span><span class=\"params\">(Address addr)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.address=addr;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">straat</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.address.street();</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">postcode</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.address.zip();</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">plaats</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.address.city();</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">    Address addr=<span class=\"keyword\">new</span> Address();</div><div class=\"line\">    DutchAddress addrAdapter=<span class=\"keyword\">new</span> DutchAddressAdapter(addr);</div><div class=\"line\">    System.out.println(<span class=\"string\">\"\\n THE DUCTH ADDRESS\\n\"</span>);</div><div class=\"line\">    testDutch(addrAdapter);</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">testDutch</span><span class=\"params\">(DutchAddress addr)</span></span>&#123;</div><div class=\"line\">    addr.straat();</div><div class=\"line\">    addr.postcode();</div><div class=\"line\">    addr.plaats();</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h3><p><img src=\"/img/patterndesign/adapter.png\" alt=\"适配器模式\"></p>"},{"title":"java桥接模式-软件设计师考试2013下半年","date":"2016-11-11T01:22:03.000Z","_content":"### 类图及题目要求 ###\n\n![桥接模式][1]\n\n\n[1]: /img/patterndesign/qiaojie.png\n\n<!-- more -->\n\n\n### 代码可以运行 ###\n\n```java\n\n\n\ninterface Drawing{\n  public void drawLine(double x1,double y1,double x2,double y2);\n  public void drawCircle(double x,double y,double r);\n}\n\nclass V1Drawing implements Drawing{\n  public void drawLine(double x1,double y1,double x2,double y2){DP1.draw_a_line(x1,y1,x2,y2);}\n  public void drawCircle(double x,double y,double r){DP1.draw_a_circle(x, y, r);}\n}\nclass V2Drawing implements Drawing{\n  public void drawLine(double x1,double x2,double y1,double y2){DP2.drawLine(x1,y1,x2,y2);}\n  public void drawCircle(double x,double y,double r){DP2.drawcircle(x, y, r);}\n}\n\nclass DP1{\n  static public void draw_a_line(double x1,double y1,double x2,double y2){\n    System.out.println(\"DP1 画的线\");\n  }\n  static public void draw_a_circle(double x,double y,double r){\n    System.out.println(\"DP1 画的圆\");\n  }\n}\nclass DP2{\n  static public void drawLine(double x1,double y1,double x2,double y2){\n    System.out.println(\"DP2 画的线\");\n  }\n  static public void drawcircle(double x,double y,double r){\n    System.out.println(\"DP2 画的圆\");\n  }\n}\n\n\n\nabstract class Shape{\n\n  private Drawing _dp;\n\n  public Shape(Drawing dp){\n    this._dp=dp;\n  }\n\n  abstract public void draw();\n\n  public void drawLine(double x1,double y1,double x2,double y2){\n\n    this._dp.drawLine(x1,x2,y1,y2);\n  }\n  public void drawCircle(double x,double y,double r){this._dp.drawCircle(x,y,r);}\n\n}\nclass Rectangle extends Shape{\n\n  private double _x1,_x2,_y1,_y2;\n\n\n  public Rectangle(Drawing dp,double x1,double x2,double y1,double y2){\n    super(dp);\n    this._x1=x1;\n    this._x2=x2;\n    this._y1=y1;\n    this._y2=y2;\n\n  }\n  public void draw(){\n    System.out.println(\"画长方形\"+this._x1+this._x2+this._y1+this._y2);\n    drawLine(_x1,_x2,_y1,_y2);\n    }\n}\nclass Circle extends Shape{\n  private double _x,_y,_r;\n  public Circle (Drawing dp,double x,double y,double r){\n    super(dp);\n  }\n  public void draw(){drawCircle(_x,_y,_r);}\n}\n\npublic class qiaojie {\n\n  public static void main(String[] args){\n    V1Drawing v1=new V1Drawing();\n    V2Drawing v2=new V2Drawing();\n    Rectangle r1=new Rectangle(v1,1.0,2.0,3.0,4.0);\n    r1.draw();\n    v2.drawCircle(2.1, 4.5, 5.6);\n    v2.drawLine(2.4, 3.3 ,4.2, 5.1);\n\n  }\n}\n```\n","source":"_posts/java-bridge.md","raw":"---\ntitle: java桥接模式-软件设计师考试2013下半年\ndate: 2016-11-11 09:22:03\ncategories: 设计模式\ntags:\n - 桥接模式\n - 软件设计师\n - JAVA\n---\n### 类图及题目要求 ###\n\n![桥接模式][1]\n\n\n[1]: /img/patterndesign/qiaojie.png\n\n<!-- more -->\n\n\n### 代码可以运行 ###\n\n```java\n\n\n\ninterface Drawing{\n  public void drawLine(double x1,double y1,double x2,double y2);\n  public void drawCircle(double x,double y,double r);\n}\n\nclass V1Drawing implements Drawing{\n  public void drawLine(double x1,double y1,double x2,double y2){DP1.draw_a_line(x1,y1,x2,y2);}\n  public void drawCircle(double x,double y,double r){DP1.draw_a_circle(x, y, r);}\n}\nclass V2Drawing implements Drawing{\n  public void drawLine(double x1,double x2,double y1,double y2){DP2.drawLine(x1,y1,x2,y2);}\n  public void drawCircle(double x,double y,double r){DP2.drawcircle(x, y, r);}\n}\n\nclass DP1{\n  static public void draw_a_line(double x1,double y1,double x2,double y2){\n    System.out.println(\"DP1 画的线\");\n  }\n  static public void draw_a_circle(double x,double y,double r){\n    System.out.println(\"DP1 画的圆\");\n  }\n}\nclass DP2{\n  static public void drawLine(double x1,double y1,double x2,double y2){\n    System.out.println(\"DP2 画的线\");\n  }\n  static public void drawcircle(double x,double y,double r){\n    System.out.println(\"DP2 画的圆\");\n  }\n}\n\n\n\nabstract class Shape{\n\n  private Drawing _dp;\n\n  public Shape(Drawing dp){\n    this._dp=dp;\n  }\n\n  abstract public void draw();\n\n  public void drawLine(double x1,double y1,double x2,double y2){\n\n    this._dp.drawLine(x1,x2,y1,y2);\n  }\n  public void drawCircle(double x,double y,double r){this._dp.drawCircle(x,y,r);}\n\n}\nclass Rectangle extends Shape{\n\n  private double _x1,_x2,_y1,_y2;\n\n\n  public Rectangle(Drawing dp,double x1,double x2,double y1,double y2){\n    super(dp);\n    this._x1=x1;\n    this._x2=x2;\n    this._y1=y1;\n    this._y2=y2;\n\n  }\n  public void draw(){\n    System.out.println(\"画长方形\"+this._x1+this._x2+this._y1+this._y2);\n    drawLine(_x1,_x2,_y1,_y2);\n    }\n}\nclass Circle extends Shape{\n  private double _x,_y,_r;\n  public Circle (Drawing dp,double x,double y,double r){\n    super(dp);\n  }\n  public void draw(){drawCircle(_x,_y,_r);}\n}\n\npublic class qiaojie {\n\n  public static void main(String[] args){\n    V1Drawing v1=new V1Drawing();\n    V2Drawing v2=new V2Drawing();\n    Rectangle r1=new Rectangle(v1,1.0,2.0,3.0,4.0);\n    r1.draw();\n    v2.drawCircle(2.1, 4.5, 5.6);\n    v2.drawLine(2.4, 3.3 ,4.2, 5.1);\n\n  }\n}\n```\n","slug":"java-bridge","published":1,"updated":"2018-08-14T09:42:55.187Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjktlsbaw0012egh37yzd9n64","content":"<h3 id=\"类图及题目要求\"><a href=\"#类图及题目要求\" class=\"headerlink\" title=\"类图及题目要求\"></a>类图及题目要求</h3><p><img src=\"/img/patterndesign/qiaojie.png\" alt=\"桥接模式\"></p>\n<a id=\"more\"></a>\n<h3 id=\"代码可以运行\"><a href=\"#代码可以运行\" class=\"headerlink\" title=\"代码可以运行\"></a>代码可以运行</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Drawing</span></span>&#123;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">drawLine</span><span class=\"params\">(<span class=\"keyword\">double</span> x1,<span class=\"keyword\">double</span> y1,<span class=\"keyword\">double</span> x2,<span class=\"keyword\">double</span> y2)</span></span>;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">drawCircle</span><span class=\"params\">(<span class=\"keyword\">double</span> x,<span class=\"keyword\">double</span> y,<span class=\"keyword\">double</span> r)</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">V1Drawing</span> <span class=\"keyword\">implements</span> <span class=\"title\">Drawing</span></span>&#123;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">drawLine</span><span class=\"params\">(<span class=\"keyword\">double</span> x1,<span class=\"keyword\">double</span> y1,<span class=\"keyword\">double</span> x2,<span class=\"keyword\">double</span> y2)</span></span>&#123;DP1.draw_a_line(x1,y1,x2,y2);&#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">drawCircle</span><span class=\"params\">(<span class=\"keyword\">double</span> x,<span class=\"keyword\">double</span> y,<span class=\"keyword\">double</span> r)</span></span>&#123;DP1.draw_a_circle(x, y, r);&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">V2Drawing</span> <span class=\"keyword\">implements</span> <span class=\"title\">Drawing</span></span>&#123;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">drawLine</span><span class=\"params\">(<span class=\"keyword\">double</span> x1,<span class=\"keyword\">double</span> x2,<span class=\"keyword\">double</span> y1,<span class=\"keyword\">double</span> y2)</span></span>&#123;DP2.drawLine(x1,y1,x2,y2);&#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">drawCircle</span><span class=\"params\">(<span class=\"keyword\">double</span> x,<span class=\"keyword\">double</span> y,<span class=\"keyword\">double</span> r)</span></span>&#123;DP2.drawcircle(x, y, r);&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DP1</span></span>&#123;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">draw_a_line</span><span class=\"params\">(<span class=\"keyword\">double</span> x1,<span class=\"keyword\">double</span> y1,<span class=\"keyword\">double</span> x2,<span class=\"keyword\">double</span> y2)</span></span>&#123;</div><div class=\"line\">    System.out.println(<span class=\"string\">\"DP1 画的线\"</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">draw_a_circle</span><span class=\"params\">(<span class=\"keyword\">double</span> x,<span class=\"keyword\">double</span> y,<span class=\"keyword\">double</span> r)</span></span>&#123;</div><div class=\"line\">    System.out.println(<span class=\"string\">\"DP1 画的圆\"</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DP2</span></span>&#123;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">drawLine</span><span class=\"params\">(<span class=\"keyword\">double</span> x1,<span class=\"keyword\">double</span> y1,<span class=\"keyword\">double</span> x2,<span class=\"keyword\">double</span> y2)</span></span>&#123;</div><div class=\"line\">    System.out.println(<span class=\"string\">\"DP2 画的线\"</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">drawcircle</span><span class=\"params\">(<span class=\"keyword\">double</span> x,<span class=\"keyword\">double</span> y,<span class=\"keyword\">double</span> r)</span></span>&#123;</div><div class=\"line\">    System.out.println(<span class=\"string\">\"DP2 画的圆\"</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Shape</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">private</span> Drawing _dp;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Shape</span><span class=\"params\">(Drawing dp)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>._dp=dp;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">draw</span><span class=\"params\">()</span></span>;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">drawLine</span><span class=\"params\">(<span class=\"keyword\">double</span> x1,<span class=\"keyword\">double</span> y1,<span class=\"keyword\">double</span> x2,<span class=\"keyword\">double</span> y2)</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">this</span>._dp.drawLine(x1,x2,y1,y2);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">drawCircle</span><span class=\"params\">(<span class=\"keyword\">double</span> x,<span class=\"keyword\">double</span> y,<span class=\"keyword\">double</span> r)</span></span>&#123;<span class=\"keyword\">this</span>._dp.drawCircle(x,y,r);&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Rectangle</span> <span class=\"keyword\">extends</span> <span class=\"title\">Shape</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">double</span> _x1,_x2,_y1,_y2;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Rectangle</span><span class=\"params\">(Drawing dp,<span class=\"keyword\">double</span> x1,<span class=\"keyword\">double</span> x2,<span class=\"keyword\">double</span> y1,<span class=\"keyword\">double</span> y2)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>(dp);</div><div class=\"line\">    <span class=\"keyword\">this</span>._x1=x1;</div><div class=\"line\">    <span class=\"keyword\">this</span>._x2=x2;</div><div class=\"line\">    <span class=\"keyword\">this</span>._y1=y1;</div><div class=\"line\">    <span class=\"keyword\">this</span>._y2=y2;</div><div class=\"line\"></div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">draw</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    System.out.println(<span class=\"string\">\"画长方形\"</span>+<span class=\"keyword\">this</span>._x1+<span class=\"keyword\">this</span>._x2+<span class=\"keyword\">this</span>._y1+<span class=\"keyword\">this</span>._y2);</div><div class=\"line\">    drawLine(_x1,_x2,_y1,_y2);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Circle</span> <span class=\"keyword\">extends</span> <span class=\"title\">Shape</span></span>&#123;</div><div class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">double</span> _x,_y,_r;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Circle</span> <span class=\"params\">(Drawing dp,<span class=\"keyword\">double</span> x,<span class=\"keyword\">double</span> y,<span class=\"keyword\">double</span> r)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>(dp);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">draw</span><span class=\"params\">()</span></span>&#123;drawCircle(_x,_y,_r);&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">qiaojie</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">    V1Drawing v1=<span class=\"keyword\">new</span> V1Drawing();</div><div class=\"line\">    V2Drawing v2=<span class=\"keyword\">new</span> V2Drawing();</div><div class=\"line\">    Rectangle r1=<span class=\"keyword\">new</span> Rectangle(v1,<span class=\"number\">1.0</span>,<span class=\"number\">2.0</span>,<span class=\"number\">3.0</span>,<span class=\"number\">4.0</span>);</div><div class=\"line\">    r1.draw();</div><div class=\"line\">    v2.drawCircle(<span class=\"number\">2.1</span>, <span class=\"number\">4.5</span>, <span class=\"number\">5.6</span>);</div><div class=\"line\">    v2.drawLine(<span class=\"number\">2.4</span>, <span class=\"number\">3.3</span> ,<span class=\"number\">4.2</span>, <span class=\"number\">5.1</span>);</div><div class=\"line\"></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h3 id=\"类图及题目要求\"><a href=\"#类图及题目要求\" class=\"headerlink\" title=\"类图及题目要求\"></a>类图及题目要求</h3><p><img src=\"/img/patterndesign/qiaojie.png\" alt=\"桥接模式\"></p>","more":"<h3 id=\"代码可以运行\"><a href=\"#代码可以运行\" class=\"headerlink\" title=\"代码可以运行\"></a>代码可以运行</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Drawing</span></span>&#123;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">drawLine</span><span class=\"params\">(<span class=\"keyword\">double</span> x1,<span class=\"keyword\">double</span> y1,<span class=\"keyword\">double</span> x2,<span class=\"keyword\">double</span> y2)</span></span>;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">drawCircle</span><span class=\"params\">(<span class=\"keyword\">double</span> x,<span class=\"keyword\">double</span> y,<span class=\"keyword\">double</span> r)</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">V1Drawing</span> <span class=\"keyword\">implements</span> <span class=\"title\">Drawing</span></span>&#123;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">drawLine</span><span class=\"params\">(<span class=\"keyword\">double</span> x1,<span class=\"keyword\">double</span> y1,<span class=\"keyword\">double</span> x2,<span class=\"keyword\">double</span> y2)</span></span>&#123;DP1.draw_a_line(x1,y1,x2,y2);&#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">drawCircle</span><span class=\"params\">(<span class=\"keyword\">double</span> x,<span class=\"keyword\">double</span> y,<span class=\"keyword\">double</span> r)</span></span>&#123;DP1.draw_a_circle(x, y, r);&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">V2Drawing</span> <span class=\"keyword\">implements</span> <span class=\"title\">Drawing</span></span>&#123;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">drawLine</span><span class=\"params\">(<span class=\"keyword\">double</span> x1,<span class=\"keyword\">double</span> x2,<span class=\"keyword\">double</span> y1,<span class=\"keyword\">double</span> y2)</span></span>&#123;DP2.drawLine(x1,y1,x2,y2);&#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">drawCircle</span><span class=\"params\">(<span class=\"keyword\">double</span> x,<span class=\"keyword\">double</span> y,<span class=\"keyword\">double</span> r)</span></span>&#123;DP2.drawcircle(x, y, r);&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DP1</span></span>&#123;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">draw_a_line</span><span class=\"params\">(<span class=\"keyword\">double</span> x1,<span class=\"keyword\">double</span> y1,<span class=\"keyword\">double</span> x2,<span class=\"keyword\">double</span> y2)</span></span>&#123;</div><div class=\"line\">    System.out.println(<span class=\"string\">\"DP1 画的线\"</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">draw_a_circle</span><span class=\"params\">(<span class=\"keyword\">double</span> x,<span class=\"keyword\">double</span> y,<span class=\"keyword\">double</span> r)</span></span>&#123;</div><div class=\"line\">    System.out.println(<span class=\"string\">\"DP1 画的圆\"</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DP2</span></span>&#123;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">drawLine</span><span class=\"params\">(<span class=\"keyword\">double</span> x1,<span class=\"keyword\">double</span> y1,<span class=\"keyword\">double</span> x2,<span class=\"keyword\">double</span> y2)</span></span>&#123;</div><div class=\"line\">    System.out.println(<span class=\"string\">\"DP2 画的线\"</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">drawcircle</span><span class=\"params\">(<span class=\"keyword\">double</span> x,<span class=\"keyword\">double</span> y,<span class=\"keyword\">double</span> r)</span></span>&#123;</div><div class=\"line\">    System.out.println(<span class=\"string\">\"DP2 画的圆\"</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Shape</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">private</span> Drawing _dp;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Shape</span><span class=\"params\">(Drawing dp)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>._dp=dp;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">draw</span><span class=\"params\">()</span></span>;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">drawLine</span><span class=\"params\">(<span class=\"keyword\">double</span> x1,<span class=\"keyword\">double</span> y1,<span class=\"keyword\">double</span> x2,<span class=\"keyword\">double</span> y2)</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">this</span>._dp.drawLine(x1,x2,y1,y2);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">drawCircle</span><span class=\"params\">(<span class=\"keyword\">double</span> x,<span class=\"keyword\">double</span> y,<span class=\"keyword\">double</span> r)</span></span>&#123;<span class=\"keyword\">this</span>._dp.drawCircle(x,y,r);&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Rectangle</span> <span class=\"keyword\">extends</span> <span class=\"title\">Shape</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">double</span> _x1,_x2,_y1,_y2;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Rectangle</span><span class=\"params\">(Drawing dp,<span class=\"keyword\">double</span> x1,<span class=\"keyword\">double</span> x2,<span class=\"keyword\">double</span> y1,<span class=\"keyword\">double</span> y2)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>(dp);</div><div class=\"line\">    <span class=\"keyword\">this</span>._x1=x1;</div><div class=\"line\">    <span class=\"keyword\">this</span>._x2=x2;</div><div class=\"line\">    <span class=\"keyword\">this</span>._y1=y1;</div><div class=\"line\">    <span class=\"keyword\">this</span>._y2=y2;</div><div class=\"line\"></div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">draw</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    System.out.println(<span class=\"string\">\"画长方形\"</span>+<span class=\"keyword\">this</span>._x1+<span class=\"keyword\">this</span>._x2+<span class=\"keyword\">this</span>._y1+<span class=\"keyword\">this</span>._y2);</div><div class=\"line\">    drawLine(_x1,_x2,_y1,_y2);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Circle</span> <span class=\"keyword\">extends</span> <span class=\"title\">Shape</span></span>&#123;</div><div class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">double</span> _x,_y,_r;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Circle</span> <span class=\"params\">(Drawing dp,<span class=\"keyword\">double</span> x,<span class=\"keyword\">double</span> y,<span class=\"keyword\">double</span> r)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>(dp);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">draw</span><span class=\"params\">()</span></span>&#123;drawCircle(_x,_y,_r);&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">qiaojie</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">    V1Drawing v1=<span class=\"keyword\">new</span> V1Drawing();</div><div class=\"line\">    V2Drawing v2=<span class=\"keyword\">new</span> V2Drawing();</div><div class=\"line\">    Rectangle r1=<span class=\"keyword\">new</span> Rectangle(v1,<span class=\"number\">1.0</span>,<span class=\"number\">2.0</span>,<span class=\"number\">3.0</span>,<span class=\"number\">4.0</span>);</div><div class=\"line\">    r1.draw();</div><div class=\"line\">    v2.drawCircle(<span class=\"number\">2.1</span>, <span class=\"number\">4.5</span>, <span class=\"number\">5.6</span>);</div><div class=\"line\">    v2.drawLine(<span class=\"number\">2.4</span>, <span class=\"number\">3.3</span> ,<span class=\"number\">4.2</span>, <span class=\"number\">5.1</span>);</div><div class=\"line\"></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"JAVA策略模式-2015年下半年考试真题","date":"2016-11-07T04:18:59.000Z","_content":"\n ### 大型商场要求商店有三种策略[原价、打折、满减]###\n-----------------\n ### 现采用策略模式（strategy）实现该要求： ###\n\n <!-- more -->\n\n```java\n//枚举三种策略\nenum TYPE {NORMAL,CASH_DISCOUNT,CASH_RETURN}\n\ninterface CashSuper{\n  public double acceptCash(double money);\n}\n\n//原价\nclass CashNormal implements CashSuper{\n  public double acceptCash(double money){\n    return money;\n  }\n}\n\n//打折\nclass CashDiscount implements CashSuper{\n  private double discountRate;\n\n  public CashDiscount(double discountRate){\n    this.discountRate=discountRate;\n\n  }\n  public double acceptCash(double money){\n    return money*discountRate;\n  }\n}\n\n//满减\nclass CashReturn implements CashSuper{\n  private double moneyCondition;\n  private double moneyReturn;\n\n  public CashReturn(double moneyCondition,double moneyReturn){\n\n    this.moneyCondition=moneyCondition;\n    this.moneyReturn=moneyReturn;\n\n  }\n  public double acceptCash(double money){\n\n    double result =money;\n    if(money>=moneyCondition){\n      result=money-moneyReturn;\n    }\n    return result;\n  }\n}\n\n// 策略\npublic class CashContent {\n  private CashSuper sc;\n  private TYPE t;\n\n  public CashContent (TYPE t){\n      switch (t){\n      case NORMAL:\n      sc=new CashNormal();\n      break;\n\n      case CASH_DISCOUNT:\n      sc=new CashDiscount(0.9);\n      break;\n\n\n      case CASH_RETURN:\n      sc=new CashReturn(300.00,50.00);\n          break;\n    }\n  }\n\n//实现\n  public static void main(String[] argus){\n    CashContent cc=new CashContent(TYPE.CASH_RETURN);\n    //CashContent cc=new CashContent(TYPE.CASH_DISCOUNT);\n    //CashContent cc=new CashContent(TYPE.NORMAL);\n\n    System.out.println(cc.sc.acceptCash(900));//结果为900-50=850.0\n\n  }\n}\n\n\n```\n### 类图 ###\n\n![策略模式][1]\n\n\n[1]: /img/patterndesign/strategy.png\n","source":"_posts/java-strategy.md","raw":"---\ntitle: JAVA策略模式-2015年下半年考试真题\ndate: 2016-11-07 12:18:59\ncategories: 设计模式\ntags:\n - 策略模式\n - 软件设计师\n - JAVA\n---\n\n ### 大型商场要求商店有三种策略[原价、打折、满减]###\n-----------------\n ### 现采用策略模式（strategy）实现该要求： ###\n\n <!-- more -->\n\n```java\n//枚举三种策略\nenum TYPE {NORMAL,CASH_DISCOUNT,CASH_RETURN}\n\ninterface CashSuper{\n  public double acceptCash(double money);\n}\n\n//原价\nclass CashNormal implements CashSuper{\n  public double acceptCash(double money){\n    return money;\n  }\n}\n\n//打折\nclass CashDiscount implements CashSuper{\n  private double discountRate;\n\n  public CashDiscount(double discountRate){\n    this.discountRate=discountRate;\n\n  }\n  public double acceptCash(double money){\n    return money*discountRate;\n  }\n}\n\n//满减\nclass CashReturn implements CashSuper{\n  private double moneyCondition;\n  private double moneyReturn;\n\n  public CashReturn(double moneyCondition,double moneyReturn){\n\n    this.moneyCondition=moneyCondition;\n    this.moneyReturn=moneyReturn;\n\n  }\n  public double acceptCash(double money){\n\n    double result =money;\n    if(money>=moneyCondition){\n      result=money-moneyReturn;\n    }\n    return result;\n  }\n}\n\n// 策略\npublic class CashContent {\n  private CashSuper sc;\n  private TYPE t;\n\n  public CashContent (TYPE t){\n      switch (t){\n      case NORMAL:\n      sc=new CashNormal();\n      break;\n\n      case CASH_DISCOUNT:\n      sc=new CashDiscount(0.9);\n      break;\n\n\n      case CASH_RETURN:\n      sc=new CashReturn(300.00,50.00);\n          break;\n    }\n  }\n\n//实现\n  public static void main(String[] argus){\n    CashContent cc=new CashContent(TYPE.CASH_RETURN);\n    //CashContent cc=new CashContent(TYPE.CASH_DISCOUNT);\n    //CashContent cc=new CashContent(TYPE.NORMAL);\n\n    System.out.println(cc.sc.acceptCash(900));//结果为900-50=850.0\n\n  }\n}\n\n\n```\n### 类图 ###\n\n![策略模式][1]\n\n\n[1]: /img/patterndesign/strategy.png\n","slug":"java-strategy","published":1,"updated":"2018-08-14T09:42:55.189Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjktlsbax0016egh3j0ouu7t4","content":"<h3 id=\"大型商场要求商店有三种策略-原价、打折、满减\"><a href=\"#大型商场要求商店有三种策略-原价、打折、满减\" class=\"headerlink\" title=\"大型商场要求商店有三种策略[原价、打折、满减]\"></a>大型商场要求商店有三种策略[原价、打折、满减]</h3><hr>\n<h3 id=\"现采用策略模式（strategy）实现该要求：\"><a href=\"#现采用策略模式（strategy）实现该要求：\" class=\"headerlink\" title=\"现采用策略模式（strategy）实现该要求：\"></a>现采用策略模式（strategy）实现该要求：</h3> <a id=\"more\"></a>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//枚举三种策略</span></div><div class=\"line\"><span class=\"keyword\">enum</span> TYPE &#123;NORMAL,CASH_DISCOUNT,CASH_RETURN&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">CashSuper</span></span>&#123;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">acceptCash</span><span class=\"params\">(<span class=\"keyword\">double</span> money)</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//原价</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CashNormal</span> <span class=\"keyword\">implements</span> <span class=\"title\">CashSuper</span></span>&#123;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">acceptCash</span><span class=\"params\">(<span class=\"keyword\">double</span> money)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> money;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//打折</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CashDiscount</span> <span class=\"keyword\">implements</span> <span class=\"title\">CashSuper</span></span>&#123;</div><div class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">double</span> discountRate;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CashDiscount</span><span class=\"params\">(<span class=\"keyword\">double</span> discountRate)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.discountRate=discountRate;</div><div class=\"line\"></div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">acceptCash</span><span class=\"params\">(<span class=\"keyword\">double</span> money)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> money*discountRate;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//满减</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CashReturn</span> <span class=\"keyword\">implements</span> <span class=\"title\">CashSuper</span></span>&#123;</div><div class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">double</span> moneyCondition;</div><div class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">double</span> moneyReturn;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CashReturn</span><span class=\"params\">(<span class=\"keyword\">double</span> moneyCondition,<span class=\"keyword\">double</span> moneyReturn)</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">this</span>.moneyCondition=moneyCondition;</div><div class=\"line\">    <span class=\"keyword\">this</span>.moneyReturn=moneyReturn;</div><div class=\"line\"></div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">acceptCash</span><span class=\"params\">(<span class=\"keyword\">double</span> money)</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">double</span> result =money;</div><div class=\"line\">    <span class=\"keyword\">if</span>(money&gt;=moneyCondition)&#123;</div><div class=\"line\">      result=money-moneyReturn;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> result;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 策略</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CashContent</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">private</span> CashSuper sc;</div><div class=\"line\">  <span class=\"keyword\">private</span> TYPE t;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CashContent</span> <span class=\"params\">(TYPE t)</span></span>&#123;</div><div class=\"line\">      <span class=\"keyword\">switch</span> (t)&#123;</div><div class=\"line\">      <span class=\"keyword\">case</span> NORMAL:</div><div class=\"line\">      sc=<span class=\"keyword\">new</span> CashNormal();</div><div class=\"line\">      <span class=\"keyword\">break</span>;</div><div class=\"line\"></div><div class=\"line\">      <span class=\"keyword\">case</span> CASH_DISCOUNT:</div><div class=\"line\">      sc=<span class=\"keyword\">new</span> CashDiscount(<span class=\"number\">0.9</span>);</div><div class=\"line\">      <span class=\"keyword\">break</span>;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">      <span class=\"keyword\">case</span> CASH_RETURN:</div><div class=\"line\">      sc=<span class=\"keyword\">new</span> CashReturn(<span class=\"number\">300.00</span>,<span class=\"number\">50.00</span>);</div><div class=\"line\">          <span class=\"keyword\">break</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//实现</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] argus)</span></span>&#123;</div><div class=\"line\">    CashContent cc=<span class=\"keyword\">new</span> CashContent(TYPE.CASH_RETURN);</div><div class=\"line\">    <span class=\"comment\">//CashContent cc=new CashContent(TYPE.CASH_DISCOUNT);</span></div><div class=\"line\">    <span class=\"comment\">//CashContent cc=new CashContent(TYPE.NORMAL);</span></div><div class=\"line\"></div><div class=\"line\">    System.out.println(cc.sc.acceptCash(<span class=\"number\">900</span>));<span class=\"comment\">//结果为900-50=850.0</span></div><div class=\"line\"></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h3><p><img src=\"/img/patterndesign/strategy.png\" alt=\"策略模式\"></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"大型商场要求商店有三种策略-原价、打折、满减\"><a href=\"#大型商场要求商店有三种策略-原价、打折、满减\" class=\"headerlink\" title=\"大型商场要求商店有三种策略[原价、打折、满减]\"></a>大型商场要求商店有三种策略[原价、打折、满减]</h3><hr>\n<h3 id=\"现采用策略模式（strategy）实现该要求：\"><a href=\"#现采用策略模式（strategy）实现该要求：\" class=\"headerlink\" title=\"现采用策略模式（strategy）实现该要求：\"></a>现采用策略模式（strategy）实现该要求：</h3>","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//枚举三种策略</span></div><div class=\"line\"><span class=\"keyword\">enum</span> TYPE &#123;NORMAL,CASH_DISCOUNT,CASH_RETURN&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">CashSuper</span></span>&#123;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">acceptCash</span><span class=\"params\">(<span class=\"keyword\">double</span> money)</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//原价</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CashNormal</span> <span class=\"keyword\">implements</span> <span class=\"title\">CashSuper</span></span>&#123;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">acceptCash</span><span class=\"params\">(<span class=\"keyword\">double</span> money)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> money;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//打折</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CashDiscount</span> <span class=\"keyword\">implements</span> <span class=\"title\">CashSuper</span></span>&#123;</div><div class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">double</span> discountRate;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CashDiscount</span><span class=\"params\">(<span class=\"keyword\">double</span> discountRate)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.discountRate=discountRate;</div><div class=\"line\"></div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">acceptCash</span><span class=\"params\">(<span class=\"keyword\">double</span> money)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> money*discountRate;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//满减</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CashReturn</span> <span class=\"keyword\">implements</span> <span class=\"title\">CashSuper</span></span>&#123;</div><div class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">double</span> moneyCondition;</div><div class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">double</span> moneyReturn;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CashReturn</span><span class=\"params\">(<span class=\"keyword\">double</span> moneyCondition,<span class=\"keyword\">double</span> moneyReturn)</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">this</span>.moneyCondition=moneyCondition;</div><div class=\"line\">    <span class=\"keyword\">this</span>.moneyReturn=moneyReturn;</div><div class=\"line\"></div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">acceptCash</span><span class=\"params\">(<span class=\"keyword\">double</span> money)</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">double</span> result =money;</div><div class=\"line\">    <span class=\"keyword\">if</span>(money&gt;=moneyCondition)&#123;</div><div class=\"line\">      result=money-moneyReturn;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> result;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 策略</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CashContent</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">private</span> CashSuper sc;</div><div class=\"line\">  <span class=\"keyword\">private</span> TYPE t;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CashContent</span> <span class=\"params\">(TYPE t)</span></span>&#123;</div><div class=\"line\">      <span class=\"keyword\">switch</span> (t)&#123;</div><div class=\"line\">      <span class=\"keyword\">case</span> NORMAL:</div><div class=\"line\">      sc=<span class=\"keyword\">new</span> CashNormal();</div><div class=\"line\">      <span class=\"keyword\">break</span>;</div><div class=\"line\"></div><div class=\"line\">      <span class=\"keyword\">case</span> CASH_DISCOUNT:</div><div class=\"line\">      sc=<span class=\"keyword\">new</span> CashDiscount(<span class=\"number\">0.9</span>);</div><div class=\"line\">      <span class=\"keyword\">break</span>;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">      <span class=\"keyword\">case</span> CASH_RETURN:</div><div class=\"line\">      sc=<span class=\"keyword\">new</span> CashReturn(<span class=\"number\">300.00</span>,<span class=\"number\">50.00</span>);</div><div class=\"line\">          <span class=\"keyword\">break</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//实现</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] argus)</span></span>&#123;</div><div class=\"line\">    CashContent cc=<span class=\"keyword\">new</span> CashContent(TYPE.CASH_RETURN);</div><div class=\"line\">    <span class=\"comment\">//CashContent cc=new CashContent(TYPE.CASH_DISCOUNT);</span></div><div class=\"line\">    <span class=\"comment\">//CashContent cc=new CashContent(TYPE.NORMAL);</span></div><div class=\"line\"></div><div class=\"line\">    System.out.println(cc.sc.acceptCash(<span class=\"number\">900</span>));<span class=\"comment\">//结果为900-50=850.0</span></div><div class=\"line\"></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h3><p><img src=\"/img/patterndesign/strategy.png\" alt=\"策略模式\"></p>"},{"title":"jp2a把图片转为ascii","date":"2016-11-21T02:05:49.000Z","_content":"\n## 先看效果 ##\n<iframe height=498 width=510 src='http://player.youku.com/embed/XMTgyODIyMjA3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n<!-- more -->\n\n## 再贴代码 ##\n\n```\n#!/bin/bash\nmake\njp2a --color --background=light -b -f --term-fit  waimai.jpg >waimai.txt\ncat waimai.txt\nsleep 2\nmake clean >/dev/null 2>&1\njp2a --color --background=light -b -f --term-fit zaiyiqilvse.jpg >zaiyiqi.txt\ncat zaiyiqi.txt\n\n```\n\n## 注意 ##\n\n需要先安装jp2a，开头那些编译的效果是在编译一个php的扩展，和本身效果呈现没有关系。就是为了小装b用的\n上面的sh脚本 和你需要编译的扩展在一起就行。\n\n\n\n","source":"_posts/jp2a-meituan.md","raw":"---\ntitle: jp2a把图片转为ascii\ndate: 2016-11-21 10:05:49\ncategories: LINUX\ntags:\n - jp2a\n - ascii\n - meituan\n---\n\n## 先看效果 ##\n<iframe height=498 width=510 src='http://player.youku.com/embed/XMTgyODIyMjA3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n<!-- more -->\n\n## 再贴代码 ##\n\n```\n#!/bin/bash\nmake\njp2a --color --background=light -b -f --term-fit  waimai.jpg >waimai.txt\ncat waimai.txt\nsleep 2\nmake clean >/dev/null 2>&1\njp2a --color --background=light -b -f --term-fit zaiyiqilvse.jpg >zaiyiqi.txt\ncat zaiyiqi.txt\n\n```\n\n## 注意 ##\n\n需要先安装jp2a，开头那些编译的效果是在编译一个php的扩展，和本身效果呈现没有关系。就是为了小装b用的\n上面的sh脚本 和你需要编译的扩展在一起就行。\n\n\n\n","slug":"jp2a-meituan","published":1,"updated":"2018-08-14T09:42:55.191Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjktlsbay0019egh3tm9uzixj","content":"<h2 id=\"先看效果\"><a href=\"#先看效果\" class=\"headerlink\" title=\"先看效果\"></a>先看效果</h2><iframe height=\"498\" width=\"510\" src=\"http://player.youku.com/embed/XMTgyODIyMjA3Mg==\" frameborder=\"0\" 'allowfullscreen'=\"\"></iframe>\n\n<a id=\"more\"></a>\n<h2 id=\"再贴代码\"><a href=\"#再贴代码\" class=\"headerlink\" title=\"再贴代码\"></a>再贴代码</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">#!/bin/bash</div><div class=\"line\">make</div><div class=\"line\">jp2a --color --background=light -b -f --term-fit  waimai.jpg &gt;waimai.txt</div><div class=\"line\">cat waimai.txt</div><div class=\"line\">sleep 2</div><div class=\"line\">make clean &gt;/dev/null 2&gt;&amp;1</div><div class=\"line\">jp2a --color --background=light -b -f --term-fit zaiyiqilvse.jpg &gt;zaiyiqi.txt</div><div class=\"line\">cat zaiyiqi.txt</div></pre></td></tr></table></figure>\n<h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><p>需要先安装jp2a，开头那些编译的效果是在编译一个php的扩展，和本身效果呈现没有关系。就是为了小装b用的<br>上面的sh脚本 和你需要编译的扩展在一起就行。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"先看效果\"><a href=\"#先看效果\" class=\"headerlink\" title=\"先看效果\"></a>先看效果</h2><iframe height=498 width=510 src='http://player.youku.com/embed/XMTgyODIyMjA3Mg==' frameborder=0 'allowfullscreen'></iframe>","more":"<h2 id=\"再贴代码\"><a href=\"#再贴代码\" class=\"headerlink\" title=\"再贴代码\"></a>再贴代码</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">#!/bin/bash</div><div class=\"line\">make</div><div class=\"line\">jp2a --color --background=light -b -f --term-fit  waimai.jpg &gt;waimai.txt</div><div class=\"line\">cat waimai.txt</div><div class=\"line\">sleep 2</div><div class=\"line\">make clean &gt;/dev/null 2&gt;&amp;1</div><div class=\"line\">jp2a --color --background=light -b -f --term-fit zaiyiqilvse.jpg &gt;zaiyiqi.txt</div><div class=\"line\">cat zaiyiqi.txt</div></pre></td></tr></table></figure>\n<h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><p>需要先安装jp2a，开头那些编译的效果是在编译一个php的扩展，和本身效果呈现没有关系。就是为了小装b用的<br>上面的sh脚本 和你需要编译的扩展在一起就行。</p>"},{"title":"linux top about cpu","date":"2016-12-07T04:48:13.000Z","_content":"\n```\nTasks: 179 total,   4 running, 175 sleeping,   0 stopped,   0 zombie\n%Cpu(s): 10.3 us,  1.3 sy,  0.0 ni, 88.5 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\nKiB Mem:   3012668 total,  1073356 used,  1939312 free,    52772 buffers\nKiB Swap:  1308668 total,        0 used,  1308668 free.   409160 cached Mem\n\n```\n\n`us` 用户态 cpu执行用户进程的时间，包括nice时间，一般用户空间cpu高点比较好\n\n`sy` 系统 cpu在内核运行时间，包括软硬终中断时间，如果此值较高，说明系统有问题\n\n`id` idle 系统空闲\n`wa` waiting 系统等待io操作所花费的时间，系统不应该花费太多时间在此，如果有，说明io有瓶颈\n`hi` hard irq time 硬中断，一般由硬件发出\n`si` soft irq time 软中断，由信号发出，程序指令发出，比如等待io请求，一般没有硬件的参与\n`st` steal time，被强制等待 虚拟cpu的时间，比如为另一个虚拟处理器服务\n\n以上输出根据 `/proc/stat`\n\n```\ntb@tb:~$ cat /proc/stat\ncpu  5803 228 1006 54723 212 0 22 0 0 0\ncpu0 5803 228 1006 54723 212 0 22 0 0 0\nintr 105215 41 238 0 0 0 0 0 0 0 0 0 0 288 0 0 741 0 0 0 3170 1912 14235 58 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\nctxt 1172838\nbtime 1481084918\nprocesses 2570\nprocs_running 6\nprocs_blocked 0\nsoftirq 48007 4 24384 126 3233 14075 0 271 0 0 5914\n```\n<a href=\"http://download.csdn.net/detail/u010703523/9704275\" >了解更多</a>\n\n\n","source":"_posts/linux-top-about-cpu.md","raw":"---\ntitle: linux top about cpu\ndate: 2016-12-07 12:48:13\ncategories: PHP\ntags:\n - linux\n - cpu\n---\n\n```\nTasks: 179 total,   4 running, 175 sleeping,   0 stopped,   0 zombie\n%Cpu(s): 10.3 us,  1.3 sy,  0.0 ni, 88.5 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\nKiB Mem:   3012668 total,  1073356 used,  1939312 free,    52772 buffers\nKiB Swap:  1308668 total,        0 used,  1308668 free.   409160 cached Mem\n\n```\n\n`us` 用户态 cpu执行用户进程的时间，包括nice时间，一般用户空间cpu高点比较好\n\n`sy` 系统 cpu在内核运行时间，包括软硬终中断时间，如果此值较高，说明系统有问题\n\n`id` idle 系统空闲\n`wa` waiting 系统等待io操作所花费的时间，系统不应该花费太多时间在此，如果有，说明io有瓶颈\n`hi` hard irq time 硬中断，一般由硬件发出\n`si` soft irq time 软中断，由信号发出，程序指令发出，比如等待io请求，一般没有硬件的参与\n`st` steal time，被强制等待 虚拟cpu的时间，比如为另一个虚拟处理器服务\n\n以上输出根据 `/proc/stat`\n\n```\ntb@tb:~$ cat /proc/stat\ncpu  5803 228 1006 54723 212 0 22 0 0 0\ncpu0 5803 228 1006 54723 212 0 22 0 0 0\nintr 105215 41 238 0 0 0 0 0 0 0 0 0 0 288 0 0 741 0 0 0 3170 1912 14235 58 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\nctxt 1172838\nbtime 1481084918\nprocesses 2570\nprocs_running 6\nprocs_blocked 0\nsoftirq 48007 4 24384 126 3233 14075 0 271 0 0 5914\n```\n<a href=\"http://download.csdn.net/detail/u010703523/9704275\" >了解更多</a>\n\n\n","slug":"linux-top-about-cpu","published":1,"updated":"2018-08-14T09:42:55.193Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjktlsbaz001degh3bykjg9fe","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">Tasks: 179 total,   4 running, 175 sleeping,   0 stopped,   0 zombie</div><div class=\"line\">%Cpu(s): 10.3 us,  1.3 sy,  0.0 ni, 88.5 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</div><div class=\"line\">KiB Mem:   3012668 total,  1073356 used,  1939312 free,    52772 buffers</div><div class=\"line\">KiB Swap:  1308668 total,        0 used,  1308668 free.   409160 cached Mem</div></pre></td></tr></table></figure>\n<p><code>us</code> 用户态 cpu执行用户进程的时间，包括nice时间，一般用户空间cpu高点比较好</p>\n<p><code>sy</code> 系统 cpu在内核运行时间，包括软硬终中断时间，如果此值较高，说明系统有问题</p>\n<p><code>id</code> idle 系统空闲<br><code>wa</code> waiting 系统等待io操作所花费的时间，系统不应该花费太多时间在此，如果有，说明io有瓶颈<br><code>hi</code> hard irq time 硬中断，一般由硬件发出<br><code>si</code> soft irq time 软中断，由信号发出，程序指令发出，比如等待io请求，一般没有硬件的参与<br><code>st</code> steal time，被强制等待 虚拟cpu的时间，比如为另一个虚拟处理器服务</p>\n<p>以上输出根据 <code>/proc/stat</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">tb@tb:~$ cat /proc/stat</div><div class=\"line\">cpu  5803 228 1006 54723 212 0 22 0 0 0</div><div class=\"line\">cpu0 5803 228 1006 54723 212 0 22 0 0 0</div><div class=\"line\">intr 105215 41 238 0 0 0 0 0 0 0 0 0 0 288 0 0 741 0 0 0 3170 1912 14235 58 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0</div><div class=\"line\">ctxt 1172838</div><div class=\"line\">btime 1481084918</div><div class=\"line\">processes 2570</div><div class=\"line\">procs_running 6</div><div class=\"line\">procs_blocked 0</div><div class=\"line\">softirq 48007 4 24384 126 3233 14075 0 271 0 0 5914</div></pre></td></tr></table></figure>\n<p><a href=\"http://download.csdn.net/detail/u010703523/9704275\" target=\"_blank\" rel=\"external\">了解更多</a></p>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">Tasks: 179 total,   4 running, 175 sleeping,   0 stopped,   0 zombie</div><div class=\"line\">%Cpu(s): 10.3 us,  1.3 sy,  0.0 ni, 88.5 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</div><div class=\"line\">KiB Mem:   3012668 total,  1073356 used,  1939312 free,    52772 buffers</div><div class=\"line\">KiB Swap:  1308668 total,        0 used,  1308668 free.   409160 cached Mem</div></pre></td></tr></table></figure>\n<p><code>us</code> 用户态 cpu执行用户进程的时间，包括nice时间，一般用户空间cpu高点比较好</p>\n<p><code>sy</code> 系统 cpu在内核运行时间，包括软硬终中断时间，如果此值较高，说明系统有问题</p>\n<p><code>id</code> idle 系统空闲<br><code>wa</code> waiting 系统等待io操作所花费的时间，系统不应该花费太多时间在此，如果有，说明io有瓶颈<br><code>hi</code> hard irq time 硬中断，一般由硬件发出<br><code>si</code> soft irq time 软中断，由信号发出，程序指令发出，比如等待io请求，一般没有硬件的参与<br><code>st</code> steal time，被强制等待 虚拟cpu的时间，比如为另一个虚拟处理器服务</p>\n<p>以上输出根据 <code>/proc/stat</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">tb@tb:~$ cat /proc/stat</div><div class=\"line\">cpu  5803 228 1006 54723 212 0 22 0 0 0</div><div class=\"line\">cpu0 5803 228 1006 54723 212 0 22 0 0 0</div><div class=\"line\">intr 105215 41 238 0 0 0 0 0 0 0 0 0 0 288 0 0 741 0 0 0 3170 1912 14235 58 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0</div><div class=\"line\">ctxt 1172838</div><div class=\"line\">btime 1481084918</div><div class=\"line\">processes 2570</div><div class=\"line\">procs_running 6</div><div class=\"line\">procs_blocked 0</div><div class=\"line\">softirq 48007 4 24384 126 3233 14075 0 271 0 0 5914</div></pre></td></tr></table></figure>\n<p><a href=\"http://download.csdn.net/detail/u010703523/9704275\" >了解更多</a></p>\n"},{"title":"php捕获fatal error","date":"2017-11-17T11:06:12.000Z","_content":"\n用到laravel定时任务的时候，由于类似conf配置问题，无法捕捉到错误，采取的方式如下\n\n{% codeblock lang:php %}\n<?php\nfunction fatal_handler() {\n    $errfile = \"unknown file\";\n    $errstr  = \"shutdown\";\n    $errno   = E_CORE_ERROR;\n    $errline = 0;\n\n    $error = error_get_last();\n\n    if($error){\n      //发送邮件队列也可以\n        file_put_contents('./testerror11.txt', json_encode($error));\n    }\n}\nregister_shutdown_function(\"fatal_handler\");\n\ntry{\n    $db=new db();\n}catch(Exception $e){\n\necho $e->error_msg();\n}\n\n{% endcodeblock %}\n","source":"_posts/php-catch-fatel-error.md","raw":"---\ntitle: php捕获fatal error\ndate: 2017-11-17 19:06:12\ncategories: PHP\ntags:\n - 异常\n---\n\n用到laravel定时任务的时候，由于类似conf配置问题，无法捕捉到错误，采取的方式如下\n\n{% codeblock lang:php %}\n<?php\nfunction fatal_handler() {\n    $errfile = \"unknown file\";\n    $errstr  = \"shutdown\";\n    $errno   = E_CORE_ERROR;\n    $errline = 0;\n\n    $error = error_get_last();\n\n    if($error){\n      //发送邮件队列也可以\n        file_put_contents('./testerror11.txt', json_encode($error));\n    }\n}\nregister_shutdown_function(\"fatal_handler\");\n\ntry{\n    $db=new db();\n}catch(Exception $e){\n\necho $e->error_msg();\n}\n\n{% endcodeblock %}\n","slug":"php-catch-fatel-error","published":1,"updated":"2018-08-14T09:42:55.197Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjktlsbb0001gegh3nbfmc3fv","content":"<p>用到laravel定时任务的时候，由于类似conf配置问题，无法捕捉到错误，采取的方式如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fatal_handler</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    $errfile = <span class=\"string\">\"unknown file\"</span>;</div><div class=\"line\">    $errstr  = <span class=\"string\">\"shutdown\"</span>;</div><div class=\"line\">    $errno   = E_CORE_ERROR;</div><div class=\"line\">    $errline = <span class=\"number\">0</span>;</div><div class=\"line\"></div><div class=\"line\">    $error = error_get_last();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span>($error)&#123;</div><div class=\"line\">      <span class=\"comment\">//发送邮件队列也可以</span></div><div class=\"line\">        file_put_contents(<span class=\"string\">'./testerror11.txt'</span>, json_encode($error));</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">register_shutdown_function(<span class=\"string\">\"fatal_handler\"</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">try</span>&#123;</div><div class=\"line\">    $db=<span class=\"keyword\">new</span> db();</div><div class=\"line\">&#125;<span class=\"keyword\">catch</span>(<span class=\"keyword\">Exception</span> $e)&#123;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">echo</span> $e-&gt;error_msg();</div><div class=\"line\">&#125;</div><div class=\"line\"></div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>用到laravel定时任务的时候，由于类似conf配置问题，无法捕捉到错误，采取的方式如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fatal_handler</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    $errfile = <span class=\"string\">\"unknown file\"</span>;</div><div class=\"line\">    $errstr  = <span class=\"string\">\"shutdown\"</span>;</div><div class=\"line\">    $errno   = E_CORE_ERROR;</div><div class=\"line\">    $errline = <span class=\"number\">0</span>;</div><div class=\"line\"></div><div class=\"line\">    $error = error_get_last();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span>($error)&#123;</div><div class=\"line\">      <span class=\"comment\">//发送邮件队列也可以</span></div><div class=\"line\">        file_put_contents(<span class=\"string\">'./testerror11.txt'</span>, json_encode($error));</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">register_shutdown_function(<span class=\"string\">\"fatal_handler\"</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">try</span>&#123;</div><div class=\"line\">    $db=<span class=\"keyword\">new</span> db();</div><div class=\"line\">&#125;<span class=\"keyword\">catch</span>(<span class=\"keyword\">Exception</span> $e)&#123;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">echo</span> $e-&gt;error_msg();</div><div class=\"line\">&#125;</div><div class=\"line\"></div></pre></td></tr></table></figure>\n"},{"title":"mycncart email设置","date":"2017-11-25T12:25:03.000Z","_content":"## 知识点：查看log\n\n提交订单时，出现服务器500错误，但是php的相关报错都已经打开。\n想了一会，还是看`fpm_error.log`和`nginx errorlog`\n<!-- more -->\n\n果真，\n`root@tuan:/var/log/nginx# tail -f error.log`\n\nnginx log 如下\n\n```\n...\n/php7.0-fpm.sock:\", host: \"www.maipingzheng.com\", referrer: \"http://www.maipingzheng.com/index.php?route=checkout/checkout\"\n2017/11/25 19:50:49 [error] 6104#6104: *504 FastCGI sent in stderr: \"PHP message: PHP Fatal error:  Uncaught Exception: Error: EHLO not accepted from server! in /usr/share/nginx/cart_2.0.0.3/system/library/mail/smtp.php:120\nStack trace:\n...\n\n```\n\n重点是 \n`EHLO not acceptedfromserver!`，追了下代码发现原来是源自于smtp的错误，由于发送邮箱用的是腾讯的企业邮箱，而smtp.php没有涉及到ssl相关。\n\n\n## 解决办法\nsmtp服务器由\n`smtp.exmail.qq.com`\n改为\n\n`ssl://smtp.exmail.qq.com`\n\n\n## 备忘~\nopencart nginx url seo 配置\n```\n\tserver {\n\n         location / {\n\n                 try_files $uri @opencart;\n\n         }\n\n         location @opencart {\n\n                 rewrite ^/(.+)$ /index.php?_route_=$1 last;\n\n         }\n\n\n         location ~* (\\.(tpl|ini))$ {\n\n                 deny all;\n\n \t\t}\n```\n\n","source":"_posts/mycnart_email_config.md","raw":"\n---\ntitle: mycncart email设置\ndate: 2017-11-25 20:25:03\ncategories: PHP\ntags:\n- mycnart\n---\n## 知识点：查看log\n\n提交订单时，出现服务器500错误，但是php的相关报错都已经打开。\n想了一会，还是看`fpm_error.log`和`nginx errorlog`\n<!-- more -->\n\n果真，\n`root@tuan:/var/log/nginx# tail -f error.log`\n\nnginx log 如下\n\n```\n...\n/php7.0-fpm.sock:\", host: \"www.maipingzheng.com\", referrer: \"http://www.maipingzheng.com/index.php?route=checkout/checkout\"\n2017/11/25 19:50:49 [error] 6104#6104: *504 FastCGI sent in stderr: \"PHP message: PHP Fatal error:  Uncaught Exception: Error: EHLO not accepted from server! in /usr/share/nginx/cart_2.0.0.3/system/library/mail/smtp.php:120\nStack trace:\n...\n\n```\n\n重点是 \n`EHLO not acceptedfromserver!`，追了下代码发现原来是源自于smtp的错误，由于发送邮箱用的是腾讯的企业邮箱，而smtp.php没有涉及到ssl相关。\n\n\n## 解决办法\nsmtp服务器由\n`smtp.exmail.qq.com`\n改为\n\n`ssl://smtp.exmail.qq.com`\n\n\n## 备忘~\nopencart nginx url seo 配置\n```\n\tserver {\n\n         location / {\n\n                 try_files $uri @opencart;\n\n         }\n\n         location @opencart {\n\n                 rewrite ^/(.+)$ /index.php?_route_=$1 last;\n\n         }\n\n\n         location ~* (\\.(tpl|ini))$ {\n\n                 deny all;\n\n \t\t}\n```\n\n","slug":"mycnart_email_config","published":1,"updated":"2018-08-14T09:42:55.195Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjktlsbb1001jegh3ap6k7bl7","content":"<h2 id=\"知识点：查看log\"><a href=\"#知识点：查看log\" class=\"headerlink\" title=\"知识点：查看log\"></a>知识点：查看log</h2><p>提交订单时，出现服务器500错误，但是php的相关报错都已经打开。<br>想了一会，还是看<code>fpm_error.log</code>和<code>nginx errorlog</code><br><a id=\"more\"></a></p>\n<p>果真，<br><code>root@tuan:/var/log/nginx# tail -f error.log</code></p>\n<p>nginx log 如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">...</div><div class=\"line\">/php7.0-fpm.sock:&quot;, host: &quot;www.maipingzheng.com&quot;, referrer: &quot;http://www.maipingzheng.com/index.php?route=checkout/checkout&quot;</div><div class=\"line\">2017/11/25 19:50:49 [error] 6104#6104: *504 FastCGI sent in stderr: &quot;PHP message: PHP Fatal error:  Uncaught Exception: Error: EHLO not accepted from server! in /usr/share/nginx/cart_2.0.0.3/system/library/mail/smtp.php:120</div><div class=\"line\">Stack trace:</div><div class=\"line\">...</div></pre></td></tr></table></figure>\n<p>重点是<br><code>EHLO not acceptedfromserver!</code>，追了下代码发现原来是源自于smtp的错误，由于发送邮箱用的是腾讯的企业邮箱，而smtp.php没有涉及到ssl相关。</p>\n<h2 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h2><p>smtp服务器由<br><code>smtp.exmail.qq.com</code><br>改为</p>\n<p><code>ssl://smtp.exmail.qq.com</code></p>\n<h2 id=\"备忘\"><a href=\"#备忘\" class=\"headerlink\" title=\"备忘~\"></a>备忘~</h2><p>opencart nginx url seo 配置<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\"></div><div class=\"line\">        location / &#123;</div><div class=\"line\"></div><div class=\"line\">                try_files $uri @opencart;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        location @opencart &#123;</div><div class=\"line\"></div><div class=\"line\">                rewrite ^/(.+)$ /index.php?_route_=$1 last;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        location ~* (\\.(tpl|ini))$ &#123;</div><div class=\"line\"></div><div class=\"line\">                deny all;</div><div class=\"line\"></div><div class=\"line\">\t\t&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"知识点：查看log\"><a href=\"#知识点：查看log\" class=\"headerlink\" title=\"知识点：查看log\"></a>知识点：查看log</h2><p>提交订单时，出现服务器500错误，但是php的相关报错都已经打开。<br>想了一会，还是看<code>fpm_error.log</code>和<code>nginx errorlog</code><br>","more":"</p>\n<p>果真，<br><code>root@tuan:/var/log/nginx# tail -f error.log</code></p>\n<p>nginx log 如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">...</div><div class=\"line\">/php7.0-fpm.sock:&quot;, host: &quot;www.maipingzheng.com&quot;, referrer: &quot;http://www.maipingzheng.com/index.php?route=checkout/checkout&quot;</div><div class=\"line\">2017/11/25 19:50:49 [error] 6104#6104: *504 FastCGI sent in stderr: &quot;PHP message: PHP Fatal error:  Uncaught Exception: Error: EHLO not accepted from server! in /usr/share/nginx/cart_2.0.0.3/system/library/mail/smtp.php:120</div><div class=\"line\">Stack trace:</div><div class=\"line\">...</div></pre></td></tr></table></figure>\n<p>重点是<br><code>EHLO not acceptedfromserver!</code>，追了下代码发现原来是源自于smtp的错误，由于发送邮箱用的是腾讯的企业邮箱，而smtp.php没有涉及到ssl相关。</p>\n<h2 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h2><p>smtp服务器由<br><code>smtp.exmail.qq.com</code><br>改为</p>\n<p><code>ssl://smtp.exmail.qq.com</code></p>\n<h2 id=\"备忘\"><a href=\"#备忘\" class=\"headerlink\" title=\"备忘~\"></a>备忘~</h2><p>opencart nginx url seo 配置<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\"></div><div class=\"line\">        location / &#123;</div><div class=\"line\"></div><div class=\"line\">                try_files $uri @opencart;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        location @opencart &#123;</div><div class=\"line\"></div><div class=\"line\">                rewrite ^/(.+)$ /index.php?_route_=$1 last;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        location ~* (\\.(tpl|ini))$ &#123;</div><div class=\"line\"></div><div class=\"line\">                deny all;</div><div class=\"line\"></div><div class=\"line\">\t\t&#125;</div></pre></td></tr></table></figure></p>"},{"title":"PHP的插入排序","date":"2016-11-04T11:18:59.000Z","_content":"```php\n<?php\n/*\n1.外层循环是从数组中选出一个arr[i]将要插入到有序数组的数\n2.内层循环是遍历已经排序好的数组，将arr[i]（也就是temp）依次与有序数组做对比，如果发现有序数组其中一个比准备插进来的arr[i]大，\n那么谁比这个arr[i]大，谁就出去，把位置腾出去，当然比arr[i]大的这个数也不能扔，就给他放在已经排号序数组中且相对于\n他的下一个索引就好了。\n3.2还有个空档，这时候把temp补上就行了\n*/\n$arr = [3, 7, 6,8,1];\n\nfunction insertSort($arr)\n{\n    for ($i = 1; $i < count($arr); $i++)\n    {\n        echo '外层{$i}=' . $i . \"次循环\" . \"\\n\";\n\n        $temp = $arr[$i];//待插入的数\n        echo '外层待插入的数为{$temp}=' . $temp . \"\\n\";\n\n        for ($j = $i - 1; $j >= 0 && $temp > $arr[$j]; $j--)\n        {\n            echo '====>内层{$j}=' . $j . \"次循环\" . \"\\n\";\n            echo '要插入的$temp' . \"=$temp \" . \"VS \" . '已经排序好的$arr[$j]=' . \"$arr[$j]\" . \"小\\n\";\n\n            $arr[$j + 1] = $arr[$j];\n            echo '所以要腾出一个空来给temp,这时候索引$j的值为'.$arr[$j].'要往后靠，此时$j=' . $j, \"\\n\";\n        }\n\n        echo '外层{$i}=' . $i . '次循环结束';\n        // var_dump($temp,$arr[$i]);注意此处两值如果已经经历了内层循环，那么就！==\n        $arr[$j + 1] = $temp;\n        echo '  此时完成$j=' . $j . '把temp的值' . \"$temp\" . '赋予$j+1' . \"\\n\";\n\n        echo \"=====\", \"\\n\";\n\n    }\n    return $arr;\n}\n\nvar_dump(insertSort($arr));\n```\n","source":"_posts/php-insert-sort.md","raw":"---\ntitle: PHP的插入排序\ndate: 2016-11-04 19:18:59\ncategories: PHP\ntags:\n - PHP\n - 插入排序\n - 算法\n---\n```php\n<?php\n/*\n1.外层循环是从数组中选出一个arr[i]将要插入到有序数组的数\n2.内层循环是遍历已经排序好的数组，将arr[i]（也就是temp）依次与有序数组做对比，如果发现有序数组其中一个比准备插进来的arr[i]大，\n那么谁比这个arr[i]大，谁就出去，把位置腾出去，当然比arr[i]大的这个数也不能扔，就给他放在已经排号序数组中且相对于\n他的下一个索引就好了。\n3.2还有个空档，这时候把temp补上就行了\n*/\n$arr = [3, 7, 6,8,1];\n\nfunction insertSort($arr)\n{\n    for ($i = 1; $i < count($arr); $i++)\n    {\n        echo '外层{$i}=' . $i . \"次循环\" . \"\\n\";\n\n        $temp = $arr[$i];//待插入的数\n        echo '外层待插入的数为{$temp}=' . $temp . \"\\n\";\n\n        for ($j = $i - 1; $j >= 0 && $temp > $arr[$j]; $j--)\n        {\n            echo '====>内层{$j}=' . $j . \"次循环\" . \"\\n\";\n            echo '要插入的$temp' . \"=$temp \" . \"VS \" . '已经排序好的$arr[$j]=' . \"$arr[$j]\" . \"小\\n\";\n\n            $arr[$j + 1] = $arr[$j];\n            echo '所以要腾出一个空来给temp,这时候索引$j的值为'.$arr[$j].'要往后靠，此时$j=' . $j, \"\\n\";\n        }\n\n        echo '外层{$i}=' . $i . '次循环结束';\n        // var_dump($temp,$arr[$i]);注意此处两值如果已经经历了内层循环，那么就！==\n        $arr[$j + 1] = $temp;\n        echo '  此时完成$j=' . $j . '把temp的值' . \"$temp\" . '赋予$j+1' . \"\\n\";\n\n        echo \"=====\", \"\\n\";\n\n    }\n    return $arr;\n}\n\nvar_dump(insertSort($arr));\n```\n","slug":"php-insert-sort","published":1,"updated":"2018-08-14T09:42:55.198Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjktlsbb2001megh3dw51a8gk","content":"<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\"><span class=\"comment\">/*</span></div><div class=\"line\">1.外层循环是从数组中选出一个arr[i]将要插入到有序数组的数</div><div class=\"line\">2.内层循环是遍历已经排序好的数组，将arr[i]（也就是temp）依次与有序数组做对比，如果发现有序数组其中一个比准备插进来的arr[i]大，</div><div class=\"line\">那么谁比这个arr[i]大，谁就出去，把位置腾出去，当然比arr[i]大的这个数也不能扔，就给他放在已经排号序数组中且相对于</div><div class=\"line\">他的下一个索引就好了。</div><div class=\"line\">3.2还有个空档，这时候把temp补上就行了</div><div class=\"line\">*/</div><div class=\"line\">$arr = [<span class=\"number\">3</span>, <span class=\"number\">7</span>, <span class=\"number\">6</span>,<span class=\"number\">8</span>,<span class=\"number\">1</span>];</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">insertSort</span><span class=\"params\">($arr)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">for</span> ($i = <span class=\"number\">1</span>; $i &lt; count($arr); $i++)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'外层&#123;$i&#125;='</span> . $i . <span class=\"string\">\"次循环\"</span> . <span class=\"string\">\"\\n\"</span>;</div><div class=\"line\"></div><div class=\"line\">        $temp = $arr[$i];<span class=\"comment\">//待插入的数</span></div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'外层待插入的数为&#123;$temp&#125;='</span> . $temp . <span class=\"string\">\"\\n\"</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> ($j = $i - <span class=\"number\">1</span>; $j &gt;= <span class=\"number\">0</span> &amp;&amp; $temp &gt; $arr[$j]; $j--)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">'====&gt;内层&#123;$j&#125;='</span> . $j . <span class=\"string\">\"次循环\"</span> . <span class=\"string\">\"\\n\"</span>;</div><div class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">'要插入的$temp'</span> . <span class=\"string\">\"=$temp \"</span> . <span class=\"string\">\"VS \"</span> . <span class=\"string\">'已经排序好的$arr[$j]='</span> . <span class=\"string\">\"$arr[$j]\"</span> . <span class=\"string\">\"小\\n\"</span>;</div><div class=\"line\"></div><div class=\"line\">            $arr[$j + <span class=\"number\">1</span>] = $arr[$j];</div><div class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">'所以要腾出一个空来给temp,这时候索引$j的值为'</span>.$arr[$j].<span class=\"string\">'要往后靠，此时$j='</span> . $j, <span class=\"string\">\"\\n\"</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'外层&#123;$i&#125;='</span> . $i . <span class=\"string\">'次循环结束'</span>;</div><div class=\"line\">        <span class=\"comment\">// var_dump($temp,$arr[$i]);注意此处两值如果已经经历了内层循环，那么就！==</span></div><div class=\"line\">        $arr[$j + <span class=\"number\">1</span>] = $temp;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'  此时完成$j='</span> . $j . <span class=\"string\">'把temp的值'</span> . <span class=\"string\">\"$temp\"</span> . <span class=\"string\">'赋予$j+1'</span> . <span class=\"string\">\"\\n\"</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"=====\"</span>, <span class=\"string\">\"\\n\"</span>;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> $arr;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">var_dump(insertSort($arr));</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\"><span class=\"comment\">/*</div><div class=\"line\">1.外层循环是从数组中选出一个arr[i]将要插入到有序数组的数</div><div class=\"line\">2.内层循环是遍历已经排序好的数组，将arr[i]（也就是temp）依次与有序数组做对比，如果发现有序数组其中一个比准备插进来的arr[i]大，</div><div class=\"line\">那么谁比这个arr[i]大，谁就出去，把位置腾出去，当然比arr[i]大的这个数也不能扔，就给他放在已经排号序数组中且相对于</div><div class=\"line\">他的下一个索引就好了。</div><div class=\"line\">3.2还有个空档，这时候把temp补上就行了</div><div class=\"line\">*/</span></div><div class=\"line\">$arr = [<span class=\"number\">3</span>, <span class=\"number\">7</span>, <span class=\"number\">6</span>,<span class=\"number\">8</span>,<span class=\"number\">1</span>];</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">insertSort</span><span class=\"params\">($arr)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">for</span> ($i = <span class=\"number\">1</span>; $i &lt; count($arr); $i++)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'外层&#123;$i&#125;='</span> . $i . <span class=\"string\">\"次循环\"</span> . <span class=\"string\">\"\\n\"</span>;</div><div class=\"line\"></div><div class=\"line\">        $temp = $arr[$i];<span class=\"comment\">//待插入的数</span></div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'外层待插入的数为&#123;$temp&#125;='</span> . $temp . <span class=\"string\">\"\\n\"</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> ($j = $i - <span class=\"number\">1</span>; $j &gt;= <span class=\"number\">0</span> &amp;&amp; $temp &gt; $arr[$j]; $j--)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">'====&gt;内层&#123;$j&#125;='</span> . $j . <span class=\"string\">\"次循环\"</span> . <span class=\"string\">\"\\n\"</span>;</div><div class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">'要插入的$temp'</span> . <span class=\"string\">\"=$temp \"</span> . <span class=\"string\">\"VS \"</span> . <span class=\"string\">'已经排序好的$arr[$j]='</span> . <span class=\"string\">\"$arr[$j]\"</span> . <span class=\"string\">\"小\\n\"</span>;</div><div class=\"line\"></div><div class=\"line\">            $arr[$j + <span class=\"number\">1</span>] = $arr[$j];</div><div class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">'所以要腾出一个空来给temp,这时候索引$j的值为'</span>.$arr[$j].<span class=\"string\">'要往后靠，此时$j='</span> . $j, <span class=\"string\">\"\\n\"</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'外层&#123;$i&#125;='</span> . $i . <span class=\"string\">'次循环结束'</span>;</div><div class=\"line\">        <span class=\"comment\">// var_dump($temp,$arr[$i]);注意此处两值如果已经经历了内层循环，那么就！==</span></div><div class=\"line\">        $arr[$j + <span class=\"number\">1</span>] = $temp;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'  此时完成$j='</span> . $j . <span class=\"string\">'把temp的值'</span> . <span class=\"string\">\"$temp\"</span> . <span class=\"string\">'赋予$j+1'</span> . <span class=\"string\">\"\\n\"</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"=====\"</span>, <span class=\"string\">\"\\n\"</span>;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> $arr;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">var_dump(insertSort($arr));</div></pre></td></tr></table></figure>\n"},{"title":"PHPSTORM中给一个方法动态添加注释","date":"2016-12-05T05:39:22.000Z","_content":"\n## 目的：在phpstorm中，动态的给一个方法添加注释 ##\n\n\n## 先添加一个动态模版【Live Templates】\n\n*ct==Crate Time*\n\n![添加动态模版][1]\n\n<!-- more -->\n\n[1]: /img/php/storm-1.jpg\n\n## 编辑这个动态模版【Live Templates】，并应用（Application）到 PHP Comments，可见图一第五步\n![编辑动态模版][2]\n\n[2]: /img/php/storm-2.jpg\n\n## 最后在注释生成的部分加载这个动态模版\n\n![加载动态模版][3]\n\n[3]: /img/php/storm-3.jpg\n\n## EG\n\n```\n /**\n     * Desc:看房团热门路线推荐\n     * v4.1.7新增接口\n     * @Date&Time 2016-12-01 16:48\n     * User: TongBo\n     */\n```\n\n\n","source":"_posts/phpstorm-add-comment-in-function.md","raw":"---\ntitle: PHPSTORM中给一个方法动态添加注释\ndate: 2016-12-05 13:39:22\ncategories: PHP\ntags:\n - PHPSTORM\n - PHP\n - 编辑器\n---\n\n## 目的：在phpstorm中，动态的给一个方法添加注释 ##\n\n\n## 先添加一个动态模版【Live Templates】\n\n*ct==Crate Time*\n\n![添加动态模版][1]\n\n<!-- more -->\n\n[1]: /img/php/storm-1.jpg\n\n## 编辑这个动态模版【Live Templates】，并应用（Application）到 PHP Comments，可见图一第五步\n![编辑动态模版][2]\n\n[2]: /img/php/storm-2.jpg\n\n## 最后在注释生成的部分加载这个动态模版\n\n![加载动态模版][3]\n\n[3]: /img/php/storm-3.jpg\n\n## EG\n\n```\n /**\n     * Desc:看房团热门路线推荐\n     * v4.1.7新增接口\n     * @Date&Time 2016-12-01 16:48\n     * User: TongBo\n     */\n```\n\n\n","slug":"phpstorm-add-comment-in-function","published":1,"updated":"2018-08-14T09:42:55.202Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjktlsbb3001oegh3gels86v4","content":"<h2 id=\"目的：在phpstorm中，动态的给一个方法添加注释\"><a href=\"#目的：在phpstorm中，动态的给一个方法添加注释\" class=\"headerlink\" title=\"目的：在phpstorm中，动态的给一个方法添加注释\"></a>目的：在phpstorm中，动态的给一个方法添加注释</h2><h2 id=\"先添加一个动态模版【Live-Templates】\"><a href=\"#先添加一个动态模版【Live-Templates】\" class=\"headerlink\" title=\"先添加一个动态模版【Live Templates】\"></a>先添加一个动态模版【Live Templates】</h2><p><em>ct==Crate Time</em></p>\n<p><img src=\"/img/php/storm-1.jpg\" alt=\"添加动态模版\"></p>\n<a id=\"more\"></a>\n<h2 id=\"编辑这个动态模版【Live-Templates】，并应用（Application）到-PHP-Comments，可见图一第五步\"><a href=\"#编辑这个动态模版【Live-Templates】，并应用（Application）到-PHP-Comments，可见图一第五步\" class=\"headerlink\" title=\"编辑这个动态模版【Live Templates】，并应用（Application）到 PHP Comments，可见图一第五步\"></a>编辑这个动态模版【Live Templates】，并应用（Application）到 PHP Comments，可见图一第五步</h2><p><img src=\"/img/php/storm-2.jpg\" alt=\"编辑动态模版\"></p>\n<h2 id=\"最后在注释生成的部分加载这个动态模版\"><a href=\"#最后在注释生成的部分加载这个动态模版\" class=\"headerlink\" title=\"最后在注释生成的部分加载这个动态模版\"></a>最后在注释生成的部分加载这个动态模版</h2><p><img src=\"/img/php/storm-3.jpg\" alt=\"加载动态模版\"></p>\n<h2 id=\"EG\"><a href=\"#EG\" class=\"headerlink\" title=\"EG\"></a>EG</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">/**</div><div class=\"line\">    * Desc:看房团热门路线推荐</div><div class=\"line\">    * v4.1.7新增接口</div><div class=\"line\">    * @Date&amp;Time 2016-12-01 16:48</div><div class=\"line\">    * User: TongBo</div><div class=\"line\">    */</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"目的：在phpstorm中，动态的给一个方法添加注释\"><a href=\"#目的：在phpstorm中，动态的给一个方法添加注释\" class=\"headerlink\" title=\"目的：在phpstorm中，动态的给一个方法添加注释\"></a>目的：在phpstorm中，动态的给一个方法添加注释</h2><h2 id=\"先添加一个动态模版【Live-Templates】\"><a href=\"#先添加一个动态模版【Live-Templates】\" class=\"headerlink\" title=\"先添加一个动态模版【Live Templates】\"></a>先添加一个动态模版【Live Templates】</h2><p><em>ct==Crate Time</em></p>\n<p><img src=\"/img/php/storm-1.jpg\" alt=\"添加动态模版\"></p>","more":"<h2 id=\"编辑这个动态模版【Live-Templates】，并应用（Application）到-PHP-Comments，可见图一第五步\"><a href=\"#编辑这个动态模版【Live-Templates】，并应用（Application）到-PHP-Comments，可见图一第五步\" class=\"headerlink\" title=\"编辑这个动态模版【Live Templates】，并应用（Application）到 PHP Comments，可见图一第五步\"></a>编辑这个动态模版【Live Templates】，并应用（Application）到 PHP Comments，可见图一第五步</h2><p><img src=\"/img/php/storm-2.jpg\" alt=\"编辑动态模版\"></p>\n<h2 id=\"最后在注释生成的部分加载这个动态模版\"><a href=\"#最后在注释生成的部分加载这个动态模版\" class=\"headerlink\" title=\"最后在注释生成的部分加载这个动态模版\"></a>最后在注释生成的部分加载这个动态模版</h2><p><img src=\"/img/php/storm-3.jpg\" alt=\"加载动态模版\"></p>\n<h2 id=\"EG\"><a href=\"#EG\" class=\"headerlink\" title=\"EG\"></a>EG</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">/**</div><div class=\"line\">    * Desc:看房团热门路线推荐</div><div class=\"line\">    * v4.1.7新增接口</div><div class=\"line\">    * @Date&amp;Time 2016-12-01 16:48</div><div class=\"line\">    * User: TongBo</div><div class=\"line\">    */</div></pre></td></tr></table></figure>"},{"title":"此博客的'构造方法'","date":"2016-11-04T10:22:18.000Z","_content":"*其实这就是熟悉熟悉怎么用git，不建议一个仓库弄两个分支...*\n\nHEXO初始化\n-------\n\n暂设当前目录 iamtb，且github仓库A放hexo dynamic文件，仓库B放hexo static文件\n\n    npm install -g hexo\n\n    npm install hexo-deployer-git --save\n\n    hexo init iamtb\n\n 在iamtb文件夹下\n\n    hexo s\n\n\n来个NB的NEXT主题\n-----------\n\n在iamtb目录下载主题NEXT，\n\n<!-- more -->\n\n    git clone https://github.com/iissnan/hexo-theme-next themes/next\n\n修改基本主题配置，包括语言，page等，确保本地预览无误。\n\n[重点来了！！！]\n-------\n\n[重点来了！]必须**删除下载主题内的.git目录**，否则主题无法上传到A库，因为你自己下载的主题文件有.git控制文件夹。\n另外一定**修改.gitignore** ,把其中的`node_modules`和`db.json`，不要ignore，不要ignore，不要ignore。\n\n 意思就是你的`.ignore`文件是这样：\n\n    .DS_Store\n    Thumbs.db\n    *.log\n    public/\n    .deploy*/\n\n推到A仓库\n-----\n\n在github新建[A仓库][1]，把目前的这些文件都推到A库。参考以下命令\n\n      503  git status\n      504  git init\n      505  git status\n      506  git add *\n      507  git commit -m 'init hexo and next theme'\n      508  git status\n      509  git remote\n      510  git remote add origin https://github.com/tuber/tbhexo.git\n      511  git branch\n      512  git push\n      513  git push origin master\n\n建立yourname.github.io\n--------------------\n\ngithub建立[仓库B][2],建完后可一进入仓库setting进行初始化（Launch automatic page generator），保证访问`yourname.github.io`正常访问。\n\n\n\n本地config配置\n----------\n\n 目的就是执行`hexo d`的时候推到B仓库\n\n    deploy:\n      type: git\n      repo: https://github.com/tuber/tuber.github.io.git\n      branch: master\n      message: just static\n\n\n\n\n本地发布测试文章\n--------\n\n 如果网络慢可以在主题设置中禁用google字体\n\n    hexo new ‘001’\n\n    hexo new ‘002’\n\n    hexo new ‘003’\n\n    hexo g\n\n    git commit -am'add 3 post'\n\n    git push origin master #把本地master推到远程origin，此处为A仓库\n\n    hexo d #把生成静态文件推到B仓库\n\n完成80%了，如果换电脑了呢？\n-------\n\n 那我们由于之前都做好了准备，我们只需要在你需要的地方\n\n    git clone https://github.com/tuber/tbhexo.git，\n\n 这样你目录下就会新增了一个`tbhexo`文件夹\n\n进入thhexo目录，**不用init 不用init 不用init**\n\n    npm install hexo\n\n    npm install hexo-deployer-git\n\n然后还是先`hexo s` 启动一下，正常没问题\n\n 然后从tbhexo文件夹下，（就相当于你另外一台电脑了）\n随便创建几个文件：\n\n    hexo new add tbhexo 004\n    hexo new add tbhexo 005\n    hexo new add tbhexo 006\n\n可以参考以下命令\n\n\n\n      504  git status\n      505  git add *\n      506  git commit -m'add 3 posts and tow helloword posts in tbhexo'\n      507  git push origin master\n\n最后一步\n----\n\n`hexo d`\n\n\n完工。这样你在另外一台电脑上更新的文章也推到`yourname.github.io`上了。\n\n\n\n如此循环\n----\n\n只需要  `git pull origin master`更新\n\n`git push origin master` 上传即可。\n\n大问题：\n----\n\n目测他有一个默认文章hello word ，理论应该在第一个文章，但是经过此番折腾他跑到第三文章了。\n贴图：\n\n![图片描述][3]\n\nPostScript：备忘录\n----\n1. 第一步：应该先`git pull origin master` ，[`git branch` `git remore`查看]从远程拉一下分支到本地，保持同步。\n2. 第二步：`hexo new yourpost`，在本地文件夹下`source/`编辑`yourpost.md`\n3. 本地预览，然后，`hexo g` 生成对应文件如tags img等，确认格式文件无误，然后增加、提交`git add *`，`git status`，查看对应文件是否被捕捉完整\n4. 提交到本地 `git commit  -m 'add yourpost'`\n5. 提交到远程分支(这个分支是为了更换电脑后，文章等都没了的问题)，`git push origin master`\n6. 发布到你的对应io上，我的就是[tuber.github.io][4].这个是配置文件配的。注意与5的区别\n\n\n  [1]: https://github.com/tuber/tbhexo.git\n  [2]: http://tuber.github.io\n  [3]: /img/node/IAMTB.png\n  [4]: http://tuber.github.io\n","source":"_posts/post.md","raw":"---\ntitle: 此博客的'构造方法'\ndate: 2016-11-04 18:22:18\ncategories: node\ntags:\n - github.page\n - hexo\n - git\n - node\n---\n*其实这就是熟悉熟悉怎么用git，不建议一个仓库弄两个分支...*\n\nHEXO初始化\n-------\n\n暂设当前目录 iamtb，且github仓库A放hexo dynamic文件，仓库B放hexo static文件\n\n    npm install -g hexo\n\n    npm install hexo-deployer-git --save\n\n    hexo init iamtb\n\n 在iamtb文件夹下\n\n    hexo s\n\n\n来个NB的NEXT主题\n-----------\n\n在iamtb目录下载主题NEXT，\n\n<!-- more -->\n\n    git clone https://github.com/iissnan/hexo-theme-next themes/next\n\n修改基本主题配置，包括语言，page等，确保本地预览无误。\n\n[重点来了！！！]\n-------\n\n[重点来了！]必须**删除下载主题内的.git目录**，否则主题无法上传到A库，因为你自己下载的主题文件有.git控制文件夹。\n另外一定**修改.gitignore** ,把其中的`node_modules`和`db.json`，不要ignore，不要ignore，不要ignore。\n\n 意思就是你的`.ignore`文件是这样：\n\n    .DS_Store\n    Thumbs.db\n    *.log\n    public/\n    .deploy*/\n\n推到A仓库\n-----\n\n在github新建[A仓库][1]，把目前的这些文件都推到A库。参考以下命令\n\n      503  git status\n      504  git init\n      505  git status\n      506  git add *\n      507  git commit -m 'init hexo and next theme'\n      508  git status\n      509  git remote\n      510  git remote add origin https://github.com/tuber/tbhexo.git\n      511  git branch\n      512  git push\n      513  git push origin master\n\n建立yourname.github.io\n--------------------\n\ngithub建立[仓库B][2],建完后可一进入仓库setting进行初始化（Launch automatic page generator），保证访问`yourname.github.io`正常访问。\n\n\n\n本地config配置\n----------\n\n 目的就是执行`hexo d`的时候推到B仓库\n\n    deploy:\n      type: git\n      repo: https://github.com/tuber/tuber.github.io.git\n      branch: master\n      message: just static\n\n\n\n\n本地发布测试文章\n--------\n\n 如果网络慢可以在主题设置中禁用google字体\n\n    hexo new ‘001’\n\n    hexo new ‘002’\n\n    hexo new ‘003’\n\n    hexo g\n\n    git commit -am'add 3 post'\n\n    git push origin master #把本地master推到远程origin，此处为A仓库\n\n    hexo d #把生成静态文件推到B仓库\n\n完成80%了，如果换电脑了呢？\n-------\n\n 那我们由于之前都做好了准备，我们只需要在你需要的地方\n\n    git clone https://github.com/tuber/tbhexo.git，\n\n 这样你目录下就会新增了一个`tbhexo`文件夹\n\n进入thhexo目录，**不用init 不用init 不用init**\n\n    npm install hexo\n\n    npm install hexo-deployer-git\n\n然后还是先`hexo s` 启动一下，正常没问题\n\n 然后从tbhexo文件夹下，（就相当于你另外一台电脑了）\n随便创建几个文件：\n\n    hexo new add tbhexo 004\n    hexo new add tbhexo 005\n    hexo new add tbhexo 006\n\n可以参考以下命令\n\n\n\n      504  git status\n      505  git add *\n      506  git commit -m'add 3 posts and tow helloword posts in tbhexo'\n      507  git push origin master\n\n最后一步\n----\n\n`hexo d`\n\n\n完工。这样你在另外一台电脑上更新的文章也推到`yourname.github.io`上了。\n\n\n\n如此循环\n----\n\n只需要  `git pull origin master`更新\n\n`git push origin master` 上传即可。\n\n大问题：\n----\n\n目测他有一个默认文章hello word ，理论应该在第一个文章，但是经过此番折腾他跑到第三文章了。\n贴图：\n\n![图片描述][3]\n\nPostScript：备忘录\n----\n1. 第一步：应该先`git pull origin master` ，[`git branch` `git remore`查看]从远程拉一下分支到本地，保持同步。\n2. 第二步：`hexo new yourpost`，在本地文件夹下`source/`编辑`yourpost.md`\n3. 本地预览，然后，`hexo g` 生成对应文件如tags img等，确认格式文件无误，然后增加、提交`git add *`，`git status`，查看对应文件是否被捕捉完整\n4. 提交到本地 `git commit  -m 'add yourpost'`\n5. 提交到远程分支(这个分支是为了更换电脑后，文章等都没了的问题)，`git push origin master`\n6. 发布到你的对应io上，我的就是[tuber.github.io][4].这个是配置文件配的。注意与5的区别\n\n\n  [1]: https://github.com/tuber/tbhexo.git\n  [2]: http://tuber.github.io\n  [3]: /img/node/IAMTB.png\n  [4]: http://tuber.github.io\n","slug":"post","published":1,"updated":"2018-08-14T09:42:55.203Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjktlsbb4001tegh3a1griqk1","content":"<p><em>其实这就是熟悉熟悉怎么用git，不建议一个仓库弄两个分支…</em></p>\n<h2 id=\"HEXO初始化\"><a href=\"#HEXO初始化\" class=\"headerlink\" title=\"HEXO初始化\"></a>HEXO初始化</h2><p>暂设当前目录 iamtb，且github仓库A放hexo dynamic文件，仓库B放hexo static文件</p>\n<pre><code>npm install -g hexo\n\nnpm install hexo-deployer-git --save\n\nhexo init iamtb\n</code></pre><p> 在iamtb文件夹下</p>\n<pre><code>hexo s\n</code></pre><h2 id=\"来个NB的NEXT主题\"><a href=\"#来个NB的NEXT主题\" class=\"headerlink\" title=\"来个NB的NEXT主题\"></a>来个NB的NEXT主题</h2><p>在iamtb目录下载主题NEXT，</p>\n<a id=\"more\"></a>\n<pre><code>git clone https://github.com/iissnan/hexo-theme-next themes/next\n</code></pre><p>修改基本主题配置，包括语言，page等，确保本地预览无误。</p>\n<h2 id=\"重点来了！！！\"><a href=\"#重点来了！！！\" class=\"headerlink\" title=\"[重点来了！！！]\"></a>[重点来了！！！]</h2><p>[重点来了！]必须<strong>删除下载主题内的.git目录</strong>，否则主题无法上传到A库，因为你自己下载的主题文件有.git控制文件夹。<br>另外一定<strong>修改.gitignore</strong> ,把其中的<code>node_modules</code>和<code>db.json</code>，不要ignore，不要ignore，不要ignore。</p>\n<p> 意思就是你的<code>.ignore</code>文件是这样：</p>\n<pre><code>.DS_Store\nThumbs.db\n*.log\npublic/\n.deploy*/\n</code></pre><h2 id=\"推到A仓库\"><a href=\"#推到A仓库\" class=\"headerlink\" title=\"推到A仓库\"></a>推到A仓库</h2><p>在github新建<a href=\"https://github.com/tuber/tbhexo.git\" target=\"_blank\" rel=\"external\">A仓库</a>，把目前的这些文件都推到A库。参考以下命令</p>\n<pre><code>503  git status\n504  git init\n505  git status\n506  git add *\n507  git commit -m &apos;init hexo and next theme&apos;\n508  git status\n509  git remote\n510  git remote add origin https://github.com/tuber/tbhexo.git\n511  git branch\n512  git push\n513  git push origin master\n</code></pre><h2 id=\"建立yourname-github-io\"><a href=\"#建立yourname-github-io\" class=\"headerlink\" title=\"建立yourname.github.io\"></a>建立yourname.github.io</h2><p>github建立<a href=\"http://tuber.github.io\" target=\"_blank\" rel=\"external\">仓库B</a>,建完后可一进入仓库setting进行初始化（Launch automatic page generator），保证访问<code>yourname.github.io</code>正常访问。</p>\n<h2 id=\"本地config配置\"><a href=\"#本地config配置\" class=\"headerlink\" title=\"本地config配置\"></a>本地config配置</h2><p> 目的就是执行<code>hexo d</code>的时候推到B仓库</p>\n<pre><code>deploy:\n  type: git\n  repo: https://github.com/tuber/tuber.github.io.git\n  branch: master\n  message: just static\n</code></pre><h2 id=\"本地发布测试文章\"><a href=\"#本地发布测试文章\" class=\"headerlink\" title=\"本地发布测试文章\"></a>本地发布测试文章</h2><p> 如果网络慢可以在主题设置中禁用google字体</p>\n<pre><code>hexo new ‘001’\n\nhexo new ‘002’\n\nhexo new ‘003’\n\nhexo g\n\ngit commit -am&apos;add 3 post&apos;\n\ngit push origin master #把本地master推到远程origin，此处为A仓库\n\nhexo d #把生成静态文件推到B仓库\n</code></pre><h2 id=\"完成80-了，如果换电脑了呢？\"><a href=\"#完成80-了，如果换电脑了呢？\" class=\"headerlink\" title=\"完成80%了，如果换电脑了呢？\"></a>完成80%了，如果换电脑了呢？</h2><p> 那我们由于之前都做好了准备，我们只需要在你需要的地方</p>\n<pre><code>git clone https://github.com/tuber/tbhexo.git，\n</code></pre><p> 这样你目录下就会新增了一个<code>tbhexo</code>文件夹</p>\n<p>进入thhexo目录，<strong>不用init 不用init 不用init</strong></p>\n<pre><code>npm install hexo\n\nnpm install hexo-deployer-git\n</code></pre><p>然后还是先<code>hexo s</code> 启动一下，正常没问题</p>\n<p> 然后从tbhexo文件夹下，（就相当于你另外一台电脑了）<br>随便创建几个文件：</p>\n<pre><code>hexo new add tbhexo 004\nhexo new add tbhexo 005\nhexo new add tbhexo 006\n</code></pre><p>可以参考以下命令</p>\n<pre><code>504  git status\n505  git add *\n506  git commit -m&apos;add 3 posts and tow helloword posts in tbhexo&apos;\n507  git push origin master\n</code></pre><h2 id=\"最后一步\"><a href=\"#最后一步\" class=\"headerlink\" title=\"最后一步\"></a>最后一步</h2><p><code>hexo d</code></p>\n<p>完工。这样你在另外一台电脑上更新的文章也推到<code>yourname.github.io</code>上了。</p>\n<h2 id=\"如此循环\"><a href=\"#如此循环\" class=\"headerlink\" title=\"如此循环\"></a>如此循环</h2><p>只需要  <code>git pull origin master</code>更新</p>\n<p><code>git push origin master</code> 上传即可。</p>\n<h2 id=\"大问题：\"><a href=\"#大问题：\" class=\"headerlink\" title=\"大问题：\"></a>大问题：</h2><p>目测他有一个默认文章hello word ，理论应该在第一个文章，但是经过此番折腾他跑到第三文章了。<br>贴图：</p>\n<p><img src=\"/img/node/IAMTB.png\" alt=\"图片描述\"></p>\n<h2 id=\"PostScript：备忘录\"><a href=\"#PostScript：备忘录\" class=\"headerlink\" title=\"PostScript：备忘录\"></a>PostScript：备忘录</h2><ol>\n<li>第一步：应该先<code>git pull origin master</code> ，[<code>git branch</code> <code>git remore</code>查看]从远程拉一下分支到本地，保持同步。</li>\n<li>第二步：<code>hexo new yourpost</code>，在本地文件夹下<code>source/</code>编辑<code>yourpost.md</code></li>\n<li>本地预览，然后，<code>hexo g</code> 生成对应文件如tags img等，确认格式文件无误，然后增加、提交<code>git add *</code>，<code>git status</code>，查看对应文件是否被捕捉完整</li>\n<li>提交到本地 <code>git commit  -m &#39;add yourpost&#39;</code></li>\n<li>提交到远程分支(这个分支是为了更换电脑后，文章等都没了的问题)，<code>git push origin master</code></li>\n<li>发布到你的对应io上，我的就是<a href=\"http://tuber.github.io\" target=\"_blank\" rel=\"external\">tuber.github.io</a>.这个是配置文件配的。注意与5的区别</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p><em>其实这就是熟悉熟悉怎么用git，不建议一个仓库弄两个分支…</em></p>\n<h2 id=\"HEXO初始化\"><a href=\"#HEXO初始化\" class=\"headerlink\" title=\"HEXO初始化\"></a>HEXO初始化</h2><p>暂设当前目录 iamtb，且github仓库A放hexo dynamic文件，仓库B放hexo static文件</p>\n<pre><code>npm install -g hexo\n\nnpm install hexo-deployer-git --save\n\nhexo init iamtb\n</code></pre><p> 在iamtb文件夹下</p>\n<pre><code>hexo s\n</code></pre><h2 id=\"来个NB的NEXT主题\"><a href=\"#来个NB的NEXT主题\" class=\"headerlink\" title=\"来个NB的NEXT主题\"></a>来个NB的NEXT主题</h2><p>在iamtb目录下载主题NEXT，</p>","more":"<pre><code>git clone https://github.com/iissnan/hexo-theme-next themes/next\n</code></pre><p>修改基本主题配置，包括语言，page等，确保本地预览无误。</p>\n<h2 id=\"重点来了！！！\"><a href=\"#重点来了！！！\" class=\"headerlink\" title=\"[重点来了！！！]\"></a>[重点来了！！！]</h2><p>[重点来了！]必须<strong>删除下载主题内的.git目录</strong>，否则主题无法上传到A库，因为你自己下载的主题文件有.git控制文件夹。<br>另外一定<strong>修改.gitignore</strong> ,把其中的<code>node_modules</code>和<code>db.json</code>，不要ignore，不要ignore，不要ignore。</p>\n<p> 意思就是你的<code>.ignore</code>文件是这样：</p>\n<pre><code>.DS_Store\nThumbs.db\n*.log\npublic/\n.deploy*/\n</code></pre><h2 id=\"推到A仓库\"><a href=\"#推到A仓库\" class=\"headerlink\" title=\"推到A仓库\"></a>推到A仓库</h2><p>在github新建<a href=\"https://github.com/tuber/tbhexo.git\">A仓库</a>，把目前的这些文件都推到A库。参考以下命令</p>\n<pre><code>503  git status\n504  git init\n505  git status\n506  git add *\n507  git commit -m &apos;init hexo and next theme&apos;\n508  git status\n509  git remote\n510  git remote add origin https://github.com/tuber/tbhexo.git\n511  git branch\n512  git push\n513  git push origin master\n</code></pre><h2 id=\"建立yourname-github-io\"><a href=\"#建立yourname-github-io\" class=\"headerlink\" title=\"建立yourname.github.io\"></a>建立yourname.github.io</h2><p>github建立<a href=\"http://tuber.github.io\">仓库B</a>,建完后可一进入仓库setting进行初始化（Launch automatic page generator），保证访问<code>yourname.github.io</code>正常访问。</p>\n<h2 id=\"本地config配置\"><a href=\"#本地config配置\" class=\"headerlink\" title=\"本地config配置\"></a>本地config配置</h2><p> 目的就是执行<code>hexo d</code>的时候推到B仓库</p>\n<pre><code>deploy:\n  type: git\n  repo: https://github.com/tuber/tuber.github.io.git\n  branch: master\n  message: just static\n</code></pre><h2 id=\"本地发布测试文章\"><a href=\"#本地发布测试文章\" class=\"headerlink\" title=\"本地发布测试文章\"></a>本地发布测试文章</h2><p> 如果网络慢可以在主题设置中禁用google字体</p>\n<pre><code>hexo new ‘001’\n\nhexo new ‘002’\n\nhexo new ‘003’\n\nhexo g\n\ngit commit -am&apos;add 3 post&apos;\n\ngit push origin master #把本地master推到远程origin，此处为A仓库\n\nhexo d #把生成静态文件推到B仓库\n</code></pre><h2 id=\"完成80-了，如果换电脑了呢？\"><a href=\"#完成80-了，如果换电脑了呢？\" class=\"headerlink\" title=\"完成80%了，如果换电脑了呢？\"></a>完成80%了，如果换电脑了呢？</h2><p> 那我们由于之前都做好了准备，我们只需要在你需要的地方</p>\n<pre><code>git clone https://github.com/tuber/tbhexo.git，\n</code></pre><p> 这样你目录下就会新增了一个<code>tbhexo</code>文件夹</p>\n<p>进入thhexo目录，<strong>不用init 不用init 不用init</strong></p>\n<pre><code>npm install hexo\n\nnpm install hexo-deployer-git\n</code></pre><p>然后还是先<code>hexo s</code> 启动一下，正常没问题</p>\n<p> 然后从tbhexo文件夹下，（就相当于你另外一台电脑了）<br>随便创建几个文件：</p>\n<pre><code>hexo new add tbhexo 004\nhexo new add tbhexo 005\nhexo new add tbhexo 006\n</code></pre><p>可以参考以下命令</p>\n<pre><code>504  git status\n505  git add *\n506  git commit -m&apos;add 3 posts and tow helloword posts in tbhexo&apos;\n507  git push origin master\n</code></pre><h2 id=\"最后一步\"><a href=\"#最后一步\" class=\"headerlink\" title=\"最后一步\"></a>最后一步</h2><p><code>hexo d</code></p>\n<p>完工。这样你在另外一台电脑上更新的文章也推到<code>yourname.github.io</code>上了。</p>\n<h2 id=\"如此循环\"><a href=\"#如此循环\" class=\"headerlink\" title=\"如此循环\"></a>如此循环</h2><p>只需要  <code>git pull origin master</code>更新</p>\n<p><code>git push origin master</code> 上传即可。</p>\n<h2 id=\"大问题：\"><a href=\"#大问题：\" class=\"headerlink\" title=\"大问题：\"></a>大问题：</h2><p>目测他有一个默认文章hello word ，理论应该在第一个文章，但是经过此番折腾他跑到第三文章了。<br>贴图：</p>\n<p><img src=\"/img/node/IAMTB.png\" alt=\"图片描述\"></p>\n<h2 id=\"PostScript：备忘录\"><a href=\"#PostScript：备忘录\" class=\"headerlink\" title=\"PostScript：备忘录\"></a>PostScript：备忘录</h2><ol>\n<li>第一步：应该先<code>git pull origin master</code> ，[<code>git branch</code> <code>git remore</code>查看]从远程拉一下分支到本地，保持同步。</li>\n<li>第二步：<code>hexo new yourpost</code>，在本地文件夹下<code>source/</code>编辑<code>yourpost.md</code></li>\n<li>本地预览，然后，<code>hexo g</code> 生成对应文件如tags img等，确认格式文件无误，然后增加、提交<code>git add *</code>，<code>git status</code>，查看对应文件是否被捕捉完整</li>\n<li>提交到本地 <code>git commit  -m &#39;add yourpost&#39;</code></li>\n<li>提交到远程分支(这个分支是为了更换电脑后，文章等都没了的问题)，<code>git push origin master</code></li>\n<li>发布到你的对应io上，我的就是<a href=\"http://tuber.github.io\">tuber.github.io</a>.这个是配置文件配的。注意与5的区别</li>\n</ol>"},{"title":"在ubuntu上升级到PHP7","date":"2016-11-21T05:41:11.000Z","_content":"\n\n## 卸载旧版本php ##\n\n`apt-get autoremove php*`\n\n## 安装新源 ##\n\n```\napt-get install software-properties-common、\nadd-apt-repository ppa:ondrej/php\napt-get update\n```\n\n## 安装新版php ##\n\n <!-- more -->\n\n```\napt-get install php-common php-cli php-fpm php-mysql php-gd php-dev php-zip php-pear php-curl php-mbstring\n\n```\n\n## 一些命令及路径 ##\n\n\n`/etc/init.d/php7.0-fpm` 中的重启php7.0fpm命令\n\n```\nroot@lyh:/etc/init.d# /etc/init.d/php7.0-fpm status[start stop]\nphp7.0-fpm start/running, process 1704\n\n```\n\n\n- `/etc/php/7.0/fpm/php-fpm.conf`中的配置\n\n  `pid = /run/php/php7.0-fpm.pid`\n\n- `/etc/php/7.0/fpm/pool.d/www.conf`中的\n\n  `listen = /run/php/php7.0-fpm.sock`\n\n- `/etc/nginx/sites-enabled`中的yoursite.conf，和上面路径一致\n\n  `fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;`\n\n## PHP-v ##\n\n```\nroot@lyh:/etc/php/7.0/fpm# php -v\nPHP 7.0.13-1+deb.sury.org~trusty+1 (cli) ( NTS )\nCopyright (c) 1997-2016 The PHP Group\nZend Engine v3.0.0, Copyright (c) 1998-2016 Zend Technologies\n    with Zend OPcache v7.0.13-1+deb.sury.org~trusty+1, Copyright (c) 1999-2016, by Zend Technologies\n\n```\n","source":"_posts/php7-update-on-ubuntu.md","raw":"---\ntitle: 在ubuntu上升级到PHP7\ndate: 2016-11-21 13:41:11\ncategories: PHP\ntags:\n - PHP7\n - FPM\n - Ubuntu\n---\n\n\n## 卸载旧版本php ##\n\n`apt-get autoremove php*`\n\n## 安装新源 ##\n\n```\napt-get install software-properties-common、\nadd-apt-repository ppa:ondrej/php\napt-get update\n```\n\n## 安装新版php ##\n\n <!-- more -->\n\n```\napt-get install php-common php-cli php-fpm php-mysql php-gd php-dev php-zip php-pear php-curl php-mbstring\n\n```\n\n## 一些命令及路径 ##\n\n\n`/etc/init.d/php7.0-fpm` 中的重启php7.0fpm命令\n\n```\nroot@lyh:/etc/init.d# /etc/init.d/php7.0-fpm status[start stop]\nphp7.0-fpm start/running, process 1704\n\n```\n\n\n- `/etc/php/7.0/fpm/php-fpm.conf`中的配置\n\n  `pid = /run/php/php7.0-fpm.pid`\n\n- `/etc/php/7.0/fpm/pool.d/www.conf`中的\n\n  `listen = /run/php/php7.0-fpm.sock`\n\n- `/etc/nginx/sites-enabled`中的yoursite.conf，和上面路径一致\n\n  `fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;`\n\n## PHP-v ##\n\n```\nroot@lyh:/etc/php/7.0/fpm# php -v\nPHP 7.0.13-1+deb.sury.org~trusty+1 (cli) ( NTS )\nCopyright (c) 1997-2016 The PHP Group\nZend Engine v3.0.0, Copyright (c) 1998-2016 Zend Technologies\n    with Zend OPcache v7.0.13-1+deb.sury.org~trusty+1, Copyright (c) 1999-2016, by Zend Technologies\n\n```\n","slug":"php7-update-on-ubuntu","published":1,"updated":"2018-08-14T09:42:55.200Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjktlsbb5001wegh334g0vyta","content":"<h2 id=\"卸载旧版本php\"><a href=\"#卸载旧版本php\" class=\"headerlink\" title=\"卸载旧版本php\"></a>卸载旧版本php</h2><p><code>apt-get autoremove php*</code></p>\n<h2 id=\"安装新源\"><a href=\"#安装新源\" class=\"headerlink\" title=\"安装新源\"></a>安装新源</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get install software-properties-common、</div><div class=\"line\">add-apt-repository ppa:ondrej/php</div><div class=\"line\">apt-get update</div></pre></td></tr></table></figure>\n<h2 id=\"安装新版php\"><a href=\"#安装新版php\" class=\"headerlink\" title=\"安装新版php\"></a>安装新版php</h2> <a id=\"more\"></a>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get install php-common php-cli php-fpm php-mysql php-gd php-dev php-zip php-pear php-curl php-mbstring</div></pre></td></tr></table></figure>\n<h2 id=\"一些命令及路径\"><a href=\"#一些命令及路径\" class=\"headerlink\" title=\"一些命令及路径\"></a>一些命令及路径</h2><p><code>/etc/init.d/php7.0-fpm</code> 中的重启php7.0fpm命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@lyh:/etc/init.d# /etc/init.d/php7.0-fpm status[start stop]</div><div class=\"line\">php7.0-fpm start/running, process 1704</div></pre></td></tr></table></figure>\n<ul>\n<li><p><code>/etc/php/7.0/fpm/php-fpm.conf</code>中的配置</p>\n<p><code>pid = /run/php/php7.0-fpm.pid</code></p>\n</li>\n<li><p><code>/etc/php/7.0/fpm/pool.d/www.conf</code>中的</p>\n<p><code>listen = /run/php/php7.0-fpm.sock</code></p>\n</li>\n<li><p><code>/etc/nginx/sites-enabled</code>中的yoursite.conf，和上面路径一致</p>\n<p><code>fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;</code></p>\n</li>\n</ul>\n<h2 id=\"PHP-v\"><a href=\"#PHP-v\" class=\"headerlink\" title=\"PHP-v\"></a>PHP-v</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@lyh:/etc/php/7.0/fpm# php -v</div><div class=\"line\">PHP 7.0.13-1+deb.sury.org~trusty+1 (cli) ( NTS )</div><div class=\"line\">Copyright (c) 1997-2016 The PHP Group</div><div class=\"line\">Zend Engine v3.0.0, Copyright (c) 1998-2016 Zend Technologies</div><div class=\"line\">    with Zend OPcache v7.0.13-1+deb.sury.org~trusty+1, Copyright (c) 1999-2016, by Zend Technologies</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"卸载旧版本php\"><a href=\"#卸载旧版本php\" class=\"headerlink\" title=\"卸载旧版本php\"></a>卸载旧版本php</h2><p><code>apt-get autoremove php*</code></p>\n<h2 id=\"安装新源\"><a href=\"#安装新源\" class=\"headerlink\" title=\"安装新源\"></a>安装新源</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get install software-properties-common、</div><div class=\"line\">add-apt-repository ppa:ondrej/php</div><div class=\"line\">apt-get update</div></pre></td></tr></table></figure>\n<h2 id=\"安装新版php\"><a href=\"#安装新版php\" class=\"headerlink\" title=\"安装新版php\"></a>安装新版php</h2>","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get install php-common php-cli php-fpm php-mysql php-gd php-dev php-zip php-pear php-curl php-mbstring</div></pre></td></tr></table></figure>\n<h2 id=\"一些命令及路径\"><a href=\"#一些命令及路径\" class=\"headerlink\" title=\"一些命令及路径\"></a>一些命令及路径</h2><p><code>/etc/init.d/php7.0-fpm</code> 中的重启php7.0fpm命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@lyh:/etc/init.d# /etc/init.d/php7.0-fpm status[start stop]</div><div class=\"line\">php7.0-fpm start/running, process 1704</div></pre></td></tr></table></figure>\n<ul>\n<li><p><code>/etc/php/7.0/fpm/php-fpm.conf</code>中的配置</p>\n<p><code>pid = /run/php/php7.0-fpm.pid</code></p>\n</li>\n<li><p><code>/etc/php/7.0/fpm/pool.d/www.conf</code>中的</p>\n<p><code>listen = /run/php/php7.0-fpm.sock</code></p>\n</li>\n<li><p><code>/etc/nginx/sites-enabled</code>中的yoursite.conf，和上面路径一致</p>\n<p><code>fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;</code></p>\n</li>\n</ul>\n<h2 id=\"PHP-v\"><a href=\"#PHP-v\" class=\"headerlink\" title=\"PHP-v\"></a>PHP-v</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@lyh:/etc/php/7.0/fpm# php -v</div><div class=\"line\">PHP 7.0.13-1+deb.sury.org~trusty+1 (cli) ( NTS )</div><div class=\"line\">Copyright (c) 1997-2016 The PHP Group</div><div class=\"line\">Zend Engine v3.0.0, Copyright (c) 1998-2016 Zend Technologies</div><div class=\"line\">    with Zend OPcache v7.0.13-1+deb.sury.org~trusty+1, Copyright (c) 1999-2016, by Zend Technologies</div></pre></td></tr></table></figure>"},{"title":"redis竟态与争抢唯一","date":"2017-11-22T13:12:03.000Z","_content":"\n\n\n## [incr][1]\n\n比如北京车牌采取先抢到后审批资质的流程。车牌池子中有N多号码，页面呈现以一页十条的方式展示，每个号码后有一个抢的按钮，且一个人只能抢一个车牌，同样一个车牌只能被一个人抢到。[业务模型参考][2]\n\n<!-- more -->\n```\n if ($this->redis_db->incr(\"bj_\".$car_no) != 1) {\n      让别人先下手了,点别的去~\n  }else{\n       //抢到竞态条件，如果不复核资质要求退出，并清除incr\n       if(抢到了但是没资质等){\n         释放对此id的竟态权，别占茅坑\n         $this->yredis_db->del(\"bj_\".$id);\n       }else{\n         其他业务A\n         抱得号码归...\n         其他业务B\n     }\n}\n```\n另外，`incr`对`string`类型，`hash`类型，`sortedSet`类型都可以进行操作\n\n## [blpop][3]\n\n`blpop`相对于lpop有一个好处，可以对多个队列进行优先级操作。\n`blpop`会按照`key`的排列顺序依次弹出，返回值为`key`的listname及具体元素值，而且可以设置`block`时间，原则是先阻塞先服务.\n\n```\n        $date = date('Ymd', time());\n        //左进左出 ，优先分配一般的车牌号码，然后在分配非常好的连号号码，设置一个阻塞时间\n        return $this->redis->blpop(self::$_config['dispatch_normal_list'] . $date, self::$_config['dispatch_better_list'] . $date, self::$_config['redis_block_l_pop_time_out']);\n\n```\n\n## [hsetnx][4]\n\n设置`hash`中一个`field`为指定`value`，前提是`field`不存在。如果存在，返回0。\n这样能保证在一个人只能抢一个车牌，但是抢到车牌执行付款或者其他业务操作过程中，其他人无法对此操作，（即不能将此车牌绑定到其他人身上）。根据具体业务情况，可设置基于car_no的hash field和基于 people 的hash field。\nhash_base_people {\"zhangsan\":\"京A888\",\"lisi\":\"京A999\"}\nhash_base_car_no {\"京A888\":\"zhangsan\",\"京A999\":\"lisi\"}\n基于这两个hash 可以做更多关于业务的操作,比如通过hget等查看具体的绑定关系。\n\n## [hdel][5]\n\n有了通过hsetnx的绑定模型，当某个人对某个车牌交付了订金等一系列之后，就代表可以永远的将其消除，这样会用到hdel。另外如果在指定时间内没有做比如交付订金之类的操作，这个车牌号码会回炉到原始列表中。\n\n```\n //删除以people_id为key的hash\n $base_people_id_del = $this->redis->hdel(self::$_config['hash_base_people'], $people_id);\n\n //删除以car_no为key的hash\n $base_car_no_del = $this->redis->hdel(self::$_config['hash_base_car_no'], $clue_id);\n```\n\n## [lpush][6]\n\n如果有入口将北京可以抢拍的车牌放入到一个list里\n\n```\n$lpush_res = $redisObj->lpush($list_name, $car_no);\n\n```\n\n其中list_name的值可以根据car_no的具体值来确定，比如有６和８的我就放入到`better_car_no`列表里，其他的放入到`normal_car_no`列表里，最后可以用`blpop`来指定一个先后优先级。\n\n## [rpoplpush][7]\n安全的队列弹出模式，比如N多人对一个入口按钮进行操作，如果list结构中有足够的数据，每个人有且只有一条数据会被领取，领取之后再做其他的业务操作。\n但是问题是，如果用`lpop`之后，原队列中已被弹出，如果中途客户端在取得该`pop`的元素后，且完成处理此元素前，客户端发生崩溃。这时候此条消息就凭空消失了。如果没有其他补助措施（比如通过绑定或者记录此弹出的元素）需要严谨要求，可以用`rpoplpus`h可以解决此问题。在客户端真正处理完此`pop`的元素之后，通过`lrem`将此消息安全删除。\n\n\n  [1]: http://redisdoc.com/string/incr.html\n  [2]: http://num.10010.com/NumApp/chseNumList/init?num=186\n  [3]: http://redisdoc.com/list/blpop.html\n  [4]: http://redisdoc.com/hash/hsetnx.html\n  [5]: http://redisdoc.com/hash/hdel.html\n  [6]: http://redisdoc.com/list/lpush.html\n  [7]: http://redisdoc.com/list/rpoplpush.html\n\n","source":"_posts/redis_incr_hash.md","raw":"---\ntitle: redis竟态与争抢唯一\ndate: 2017-11-22 21:12:03\ncategories: REDIS\ntags:\n- REDIS应用\n---\n\n\n\n## [incr][1]\n\n比如北京车牌采取先抢到后审批资质的流程。车牌池子中有N多号码，页面呈现以一页十条的方式展示，每个号码后有一个抢的按钮，且一个人只能抢一个车牌，同样一个车牌只能被一个人抢到。[业务模型参考][2]\n\n<!-- more -->\n```\n if ($this->redis_db->incr(\"bj_\".$car_no) != 1) {\n      让别人先下手了,点别的去~\n  }else{\n       //抢到竞态条件，如果不复核资质要求退出，并清除incr\n       if(抢到了但是没资质等){\n         释放对此id的竟态权，别占茅坑\n         $this->yredis_db->del(\"bj_\".$id);\n       }else{\n         其他业务A\n         抱得号码归...\n         其他业务B\n     }\n}\n```\n另外，`incr`对`string`类型，`hash`类型，`sortedSet`类型都可以进行操作\n\n## [blpop][3]\n\n`blpop`相对于lpop有一个好处，可以对多个队列进行优先级操作。\n`blpop`会按照`key`的排列顺序依次弹出，返回值为`key`的listname及具体元素值，而且可以设置`block`时间，原则是先阻塞先服务.\n\n```\n        $date = date('Ymd', time());\n        //左进左出 ，优先分配一般的车牌号码，然后在分配非常好的连号号码，设置一个阻塞时间\n        return $this->redis->blpop(self::$_config['dispatch_normal_list'] . $date, self::$_config['dispatch_better_list'] . $date, self::$_config['redis_block_l_pop_time_out']);\n\n```\n\n## [hsetnx][4]\n\n设置`hash`中一个`field`为指定`value`，前提是`field`不存在。如果存在，返回0。\n这样能保证在一个人只能抢一个车牌，但是抢到车牌执行付款或者其他业务操作过程中，其他人无法对此操作，（即不能将此车牌绑定到其他人身上）。根据具体业务情况，可设置基于car_no的hash field和基于 people 的hash field。\nhash_base_people {\"zhangsan\":\"京A888\",\"lisi\":\"京A999\"}\nhash_base_car_no {\"京A888\":\"zhangsan\",\"京A999\":\"lisi\"}\n基于这两个hash 可以做更多关于业务的操作,比如通过hget等查看具体的绑定关系。\n\n## [hdel][5]\n\n有了通过hsetnx的绑定模型，当某个人对某个车牌交付了订金等一系列之后，就代表可以永远的将其消除，这样会用到hdel。另外如果在指定时间内没有做比如交付订金之类的操作，这个车牌号码会回炉到原始列表中。\n\n```\n //删除以people_id为key的hash\n $base_people_id_del = $this->redis->hdel(self::$_config['hash_base_people'], $people_id);\n\n //删除以car_no为key的hash\n $base_car_no_del = $this->redis->hdel(self::$_config['hash_base_car_no'], $clue_id);\n```\n\n## [lpush][6]\n\n如果有入口将北京可以抢拍的车牌放入到一个list里\n\n```\n$lpush_res = $redisObj->lpush($list_name, $car_no);\n\n```\n\n其中list_name的值可以根据car_no的具体值来确定，比如有６和８的我就放入到`better_car_no`列表里，其他的放入到`normal_car_no`列表里，最后可以用`blpop`来指定一个先后优先级。\n\n## [rpoplpush][7]\n安全的队列弹出模式，比如N多人对一个入口按钮进行操作，如果list结构中有足够的数据，每个人有且只有一条数据会被领取，领取之后再做其他的业务操作。\n但是问题是，如果用`lpop`之后，原队列中已被弹出，如果中途客户端在取得该`pop`的元素后，且完成处理此元素前，客户端发生崩溃。这时候此条消息就凭空消失了。如果没有其他补助措施（比如通过绑定或者记录此弹出的元素）需要严谨要求，可以用`rpoplpus`h可以解决此问题。在客户端真正处理完此`pop`的元素之后，通过`lrem`将此消息安全删除。\n\n\n  [1]: http://redisdoc.com/string/incr.html\n  [2]: http://num.10010.com/NumApp/chseNumList/init?num=186\n  [3]: http://redisdoc.com/list/blpop.html\n  [4]: http://redisdoc.com/hash/hsetnx.html\n  [5]: http://redisdoc.com/hash/hdel.html\n  [6]: http://redisdoc.com/list/lpush.html\n  [7]: http://redisdoc.com/list/rpoplpush.html\n\n","slug":"redis_incr_hash","published":1,"updated":"2018-08-14T09:42:55.205Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjktlsbb60021egh3bmdado4t","content":"<h2 id=\"incr\"><a href=\"#incr\" class=\"headerlink\" title=\"incr\"></a><a href=\"http://redisdoc.com/string/incr.html\" target=\"_blank\" rel=\"external\">incr</a></h2><p>比如北京车牌采取先抢到后审批资质的流程。车牌池子中有N多号码，页面呈现以一页十条的方式展示，每个号码后有一个抢的按钮，且一个人只能抢一个车牌，同样一个车牌只能被一个人抢到。<a href=\"http://num.10010.com/NumApp/chseNumList/init?num=186\" target=\"_blank\" rel=\"external\">业务模型参考</a></p>\n<a id=\"more\"></a>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"> if ($this-&gt;redis_db-&gt;incr(&quot;bj_&quot;.$car_no) != 1) &#123;</div><div class=\"line\">      让别人先下手了,点别的去~</div><div class=\"line\">  &#125;else&#123;</div><div class=\"line\">       //抢到竞态条件，如果不复核资质要求退出，并清除incr</div><div class=\"line\">       if(抢到了但是没资质等)&#123;</div><div class=\"line\">         释放对此id的竟态权，别占茅坑</div><div class=\"line\">         $this-&gt;yredis_db-&gt;del(&quot;bj_&quot;.$id);</div><div class=\"line\">       &#125;else&#123;</div><div class=\"line\">         其他业务A</div><div class=\"line\">         抱得号码归...</div><div class=\"line\">         其他业务B</div><div class=\"line\">     &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>另外，<code>incr</code>对<code>string</code>类型，<code>hash</code>类型，<code>sortedSet</code>类型都可以进行操作</p>\n<h2 id=\"blpop\"><a href=\"#blpop\" class=\"headerlink\" title=\"blpop\"></a><a href=\"http://redisdoc.com/list/blpop.html\" target=\"_blank\" rel=\"external\">blpop</a></h2><p><code>blpop</code>相对于lpop有一个好处，可以对多个队列进行优先级操作。<br><code>blpop</code>会按照<code>key</code>的排列顺序依次弹出，返回值为<code>key</code>的listname及具体元素值，而且可以设置<code>block</code>时间，原则是先阻塞先服务.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$date = date(&apos;Ymd&apos;, time());</div><div class=\"line\">//左进左出 ，优先分配一般的车牌号码，然后在分配非常好的连号号码，设置一个阻塞时间</div><div class=\"line\">return $this-&gt;redis-&gt;blpop(self::$_config[&apos;dispatch_normal_list&apos;] . $date, self::$_config[&apos;dispatch_better_list&apos;] . $date, self::$_config[&apos;redis_block_l_pop_time_out&apos;]);</div></pre></td></tr></table></figure>\n<h2 id=\"hsetnx\"><a href=\"#hsetnx\" class=\"headerlink\" title=\"hsetnx\"></a><a href=\"http://redisdoc.com/hash/hsetnx.html\" target=\"_blank\" rel=\"external\">hsetnx</a></h2><p>设置<code>hash</code>中一个<code>field</code>为指定<code>value</code>，前提是<code>field</code>不存在。如果存在，返回0。<br>这样能保证在一个人只能抢一个车牌，但是抢到车牌执行付款或者其他业务操作过程中，其他人无法对此操作，（即不能将此车牌绑定到其他人身上）。根据具体业务情况，可设置基于car_no的hash field和基于 people 的hash field。<br>hash_base_people {“zhangsan”:”京A888”,”lisi”:”京A999”}<br>hash_base_car_no {“京A888”:”zhangsan”,”京A999”:”lisi”}<br>基于这两个hash 可以做更多关于业务的操作,比如通过hget等查看具体的绑定关系。</p>\n<h2 id=\"hdel\"><a href=\"#hdel\" class=\"headerlink\" title=\"hdel\"></a><a href=\"http://redisdoc.com/hash/hdel.html\" target=\"_blank\" rel=\"external\">hdel</a></h2><p>有了通过hsetnx的绑定模型，当某个人对某个车牌交付了订金等一系列之后，就代表可以永远的将其消除，这样会用到hdel。另外如果在指定时间内没有做比如交付订金之类的操作，这个车牌号码会回炉到原始列表中。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">//删除以people_id为key的hash</div><div class=\"line\">$base_people_id_del = $this-&gt;redis-&gt;hdel(self::$_config[&apos;hash_base_people&apos;], $people_id);</div><div class=\"line\"></div><div class=\"line\">//删除以car_no为key的hash</div><div class=\"line\">$base_car_no_del = $this-&gt;redis-&gt;hdel(self::$_config[&apos;hash_base_car_no&apos;], $clue_id);</div></pre></td></tr></table></figure>\n<h2 id=\"lpush\"><a href=\"#lpush\" class=\"headerlink\" title=\"lpush\"></a><a href=\"http://redisdoc.com/list/lpush.html\" target=\"_blank\" rel=\"external\">lpush</a></h2><p>如果有入口将北京可以抢拍的车牌放入到一个list里</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$lpush_res = $redisObj-&gt;lpush($list_name, $car_no);</div></pre></td></tr></table></figure>\n<p>其中list_name的值可以根据car_no的具体值来确定，比如有６和８的我就放入到<code>better_car_no</code>列表里，其他的放入到<code>normal_car_no</code>列表里，最后可以用<code>blpop</code>来指定一个先后优先级。</p>\n<h2 id=\"rpoplpush\"><a href=\"#rpoplpush\" class=\"headerlink\" title=\"rpoplpush\"></a><a href=\"http://redisdoc.com/list/rpoplpush.html\" target=\"_blank\" rel=\"external\">rpoplpush</a></h2><p>安全的队列弹出模式，比如N多人对一个入口按钮进行操作，如果list结构中有足够的数据，每个人有且只有一条数据会被领取，领取之后再做其他的业务操作。<br>但是问题是，如果用<code>lpop</code>之后，原队列中已被弹出，如果中途客户端在取得该<code>pop</code>的元素后，且完成处理此元素前，客户端发生崩溃。这时候此条消息就凭空消失了。如果没有其他补助措施（比如通过绑定或者记录此弹出的元素）需要严谨要求，可以用<code>rpoplpus</code>h可以解决此问题。在客户端真正处理完此<code>pop</code>的元素之后，通过<code>lrem</code>将此消息安全删除。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"incr\"><a href=\"#incr\" class=\"headerlink\" title=\"incr\"></a><a href=\"http://redisdoc.com/string/incr.html\">incr</a></h2><p>比如北京车牌采取先抢到后审批资质的流程。车牌池子中有N多号码，页面呈现以一页十条的方式展示，每个号码后有一个抢的按钮，且一个人只能抢一个车牌，同样一个车牌只能被一个人抢到。<a href=\"http://num.10010.com/NumApp/chseNumList/init?num=186\">业务模型参考</a></p>","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"> if ($this-&gt;redis_db-&gt;incr(&quot;bj_&quot;.$car_no) != 1) &#123;</div><div class=\"line\">      让别人先下手了,点别的去~</div><div class=\"line\">  &#125;else&#123;</div><div class=\"line\">       //抢到竞态条件，如果不复核资质要求退出，并清除incr</div><div class=\"line\">       if(抢到了但是没资质等)&#123;</div><div class=\"line\">         释放对此id的竟态权，别占茅坑</div><div class=\"line\">         $this-&gt;yredis_db-&gt;del(&quot;bj_&quot;.$id);</div><div class=\"line\">       &#125;else&#123;</div><div class=\"line\">         其他业务A</div><div class=\"line\">         抱得号码归...</div><div class=\"line\">         其他业务B</div><div class=\"line\">     &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>另外，<code>incr</code>对<code>string</code>类型，<code>hash</code>类型，<code>sortedSet</code>类型都可以进行操作</p>\n<h2 id=\"blpop\"><a href=\"#blpop\" class=\"headerlink\" title=\"blpop\"></a><a href=\"http://redisdoc.com/list/blpop.html\">blpop</a></h2><p><code>blpop</code>相对于lpop有一个好处，可以对多个队列进行优先级操作。<br><code>blpop</code>会按照<code>key</code>的排列顺序依次弹出，返回值为<code>key</code>的listname及具体元素值，而且可以设置<code>block</code>时间，原则是先阻塞先服务.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$date = date(&apos;Ymd&apos;, time());</div><div class=\"line\">//左进左出 ，优先分配一般的车牌号码，然后在分配非常好的连号号码，设置一个阻塞时间</div><div class=\"line\">return $this-&gt;redis-&gt;blpop(self::$_config[&apos;dispatch_normal_list&apos;] . $date, self::$_config[&apos;dispatch_better_list&apos;] . $date, self::$_config[&apos;redis_block_l_pop_time_out&apos;]);</div></pre></td></tr></table></figure>\n<h2 id=\"hsetnx\"><a href=\"#hsetnx\" class=\"headerlink\" title=\"hsetnx\"></a><a href=\"http://redisdoc.com/hash/hsetnx.html\">hsetnx</a></h2><p>设置<code>hash</code>中一个<code>field</code>为指定<code>value</code>，前提是<code>field</code>不存在。如果存在，返回0。<br>这样能保证在一个人只能抢一个车牌，但是抢到车牌执行付款或者其他业务操作过程中，其他人无法对此操作，（即不能将此车牌绑定到其他人身上）。根据具体业务情况，可设置基于car_no的hash field和基于 people 的hash field。<br>hash_base_people {“zhangsan”:”京A888”,”lisi”:”京A999”}<br>hash_base_car_no {“京A888”:”zhangsan”,”京A999”:”lisi”}<br>基于这两个hash 可以做更多关于业务的操作,比如通过hget等查看具体的绑定关系。</p>\n<h2 id=\"hdel\"><a href=\"#hdel\" class=\"headerlink\" title=\"hdel\"></a><a href=\"http://redisdoc.com/hash/hdel.html\">hdel</a></h2><p>有了通过hsetnx的绑定模型，当某个人对某个车牌交付了订金等一系列之后，就代表可以永远的将其消除，这样会用到hdel。另外如果在指定时间内没有做比如交付订金之类的操作，这个车牌号码会回炉到原始列表中。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">//删除以people_id为key的hash</div><div class=\"line\">$base_people_id_del = $this-&gt;redis-&gt;hdel(self::$_config[&apos;hash_base_people&apos;], $people_id);</div><div class=\"line\"></div><div class=\"line\">//删除以car_no为key的hash</div><div class=\"line\">$base_car_no_del = $this-&gt;redis-&gt;hdel(self::$_config[&apos;hash_base_car_no&apos;], $clue_id);</div></pre></td></tr></table></figure>\n<h2 id=\"lpush\"><a href=\"#lpush\" class=\"headerlink\" title=\"lpush\"></a><a href=\"http://redisdoc.com/list/lpush.html\">lpush</a></h2><p>如果有入口将北京可以抢拍的车牌放入到一个list里</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$lpush_res = $redisObj-&gt;lpush($list_name, $car_no);</div></pre></td></tr></table></figure>\n<p>其中list_name的值可以根据car_no的具体值来确定，比如有６和８的我就放入到<code>better_car_no</code>列表里，其他的放入到<code>normal_car_no</code>列表里，最后可以用<code>blpop</code>来指定一个先后优先级。</p>\n<h2 id=\"rpoplpush\"><a href=\"#rpoplpush\" class=\"headerlink\" title=\"rpoplpush\"></a><a href=\"http://redisdoc.com/list/rpoplpush.html\">rpoplpush</a></h2><p>安全的队列弹出模式，比如N多人对一个入口按钮进行操作，如果list结构中有足够的数据，每个人有且只有一条数据会被领取，领取之后再做其他的业务操作。<br>但是问题是，如果用<code>lpop</code>之后，原队列中已被弹出，如果中途客户端在取得该<code>pop</code>的元素后，且完成处理此元素前，客户端发生崩溃。这时候此条消息就凭空消失了。如果没有其他补助措施（比如通过绑定或者记录此弹出的元素）需要严谨要求，可以用<code>rpoplpus</code>h可以解决此问题。在客户端真正处理完此<code>pop</code>的元素之后，通过<code>lrem</code>将此消息安全删除。</p>"},{"title":"根据当前日期算出N个工作日之后的日期","date":"2017-05-31T11:18:59.000Z","_content":"\n ### 需求：给定一个日期，要求算出N天（工作日）后的日期###\n-----------------\n <!-- more -->\n### 直接上代码 ###\n ```\n <?php\n//节假日 需要手动维护配置文件或者放入db中\n $holiday=[\n  '2017-04-29',\n    '2017-04-30',\n\n    '2017-05-01',\n    '2017-05-06',\n    '2017-05-07',\n    '2017-05-13',\n    '2017-05-14',\n    '2017-05-20',\n    '2017-05-21',\n    '2017-05-28',\n    '2017-05-29',\n    '2017-05-30',\n\n    '2017-06-03',\n    '2017-06-04',\n    '2017-06-10',\n    '2017-06-11',\n    '2017-06-17',\n    '2017-06-18',\n    '2017-06-24',\n    '2017-06-25',\n\n    '2017-07-01',\n    '2017-07-02',\n    '2017-07-08',\n    '2017-07-09',\n    '2017-07-15',\n    '2017-07-16',\n    '2017-07-22',\n    '2017-07-23',\n    '2017-07-29',\n    '2017-07-30',\n\n\n    '2017-08-05',\n    '2017-08-06',\n    '2017-08-12',\n    '2017-08-13',\n    '2017-08-19',\n    '2017-08-20',\n    '2017-08-26',\n    '2017-08-27',\n\n    '2017-09-02',\n    '2017-09-03',\n    '2017-09-09',\n    '2017-09-10',\n    '2017-09-16',\n    '2017-09-17',\n    '2017-09-23',\n    '2017-09-24',\n\n    '2017-10-01',\n    '2017-10-02',\n    '2017-10-03',\n    '2017-10-04',\n    '2017-10-05',\n    '2017-10-06',\n    '2017-10-07',\n    '2017-10-08',\n    '2017-10-14',\n    '2017-10-15',\n    '2017-10-21',\n    '2017-10-22',\n    '2017-10-28',\n    '2017-10-29',\n\n    '2017-11-04',\n    '2017-11-05',\n    '2017-11-11',\n    '2017-11-12',\n    '2017-11-18',\n    '2017-11-19',\n    '2017-11-25',\n    '2017-11-26',\n\n    '2017-12-02',\n    '2017-12-03',\n    '2017-12-09',\n    '2017-12-10',\n    '2017-12-16',\n    '2017-12-17',\n    '2017-12-23',\n    '2017-12-24',\n    '2017-12-30',\n    '2017-12-31',\n\n  //...\n  ];\n\n  function afterWorkDay($start_timestamp='',$add_workday_num='',$holiday=[]){\n\n     // 如果加天数的的时候遇到休假日，则代表需要额外增加的天数\n     $extra_day=0;\n\n     //已经实际增加的天数的数量\n     $workday_added_num=0;\n\n     for($i=1;$i<=$add_workday_num;$i++){\n\n          $detail_time=date('Y-m-d H:i:s',($start_timestamp)+$i*(60*60*24));\n\n          $workday_added_num++;\n\n          //只取宽泛的月日就好\n          $wide_date=date('Y-m-d',strtotime($detail_time));\n\n\n          // 如果其中一天在holiday中\n          if(in_array($wide_date, $holiday)){\n            //取消已经增加的天数，后面再继续加上\n            $workday_added_num--;\n\n           // 需要额外增加的天数\n            $extra_day++;\n\n           }\n           //如果加完之后的日期的下一天还是休息日，需要再次增加额外增加天数\n           $extra_judge=date(\"Y-m-d\",strtotime($wide_date)+86400);\n\n     }\n\n\n     //如果需要增加的天数与实际已经增加的天数不相等\n      if($add_workday_num!=$workday_added_num){\n\n       while (in_array($extra_judge, $holiday)) {\n\n          $extra_day++;\n\n          $extra_judge=date(\"Y-m-d\",strtotime($extra_judge)+86400);\n      }\n  }\n\n  //实际应增加总天数=已经增加天数+（应增加天数-已经增加天数）+额外需要增加天数\n   $add=$workday_added_num+($add_workday_num-$workday_added_num)+$extra_day;\n\n   return date('Y-m-d H:i:s',($start_timestamp)+$add*(60*60*24));\n\n    // $result_date=date('Y-m-d',($start_timestamp)+$add*(60*60*24));\n\n\n    // 如果这个结果也是在假期日内\n    // while (in_array($result_date, $holiday)) {\n    //    $result_date=date('Y-m-d',strtotime($result) +86400);\n    //    $result=date('Y-m-d H:i:s',strtotime($result) +86400);\n    // }\n }\n\n// xx发起时间 6月1日是周四，\n $time=mktime('13','30','56','06','01','2017');\n $start_timestamp=$time;\n // var_dump($start_timestamp);\n\n//计算两个工作日后的时间\n echo afterWorkDay($start_timestamp,2,$holiday);//out put 2017-06-05 13:30:56\n ```\n\n### [2017国务院放假权威安排][1] ###\n\n [1]: http://www.gov.cn/zhengce/content/2016-12/01/content_5141603.htm\n\n","source":"_posts/workday.md","raw":"---\ntitle: 根据当前日期算出N个工作日之后的日期\ndate: 2017-05-31 19:18:59\ncategories: PHP\ntags:\n - 工作日计算\n---\n\n ### 需求：给定一个日期，要求算出N天（工作日）后的日期###\n-----------------\n <!-- more -->\n### 直接上代码 ###\n ```\n <?php\n//节假日 需要手动维护配置文件或者放入db中\n $holiday=[\n  '2017-04-29',\n    '2017-04-30',\n\n    '2017-05-01',\n    '2017-05-06',\n    '2017-05-07',\n    '2017-05-13',\n    '2017-05-14',\n    '2017-05-20',\n    '2017-05-21',\n    '2017-05-28',\n    '2017-05-29',\n    '2017-05-30',\n\n    '2017-06-03',\n    '2017-06-04',\n    '2017-06-10',\n    '2017-06-11',\n    '2017-06-17',\n    '2017-06-18',\n    '2017-06-24',\n    '2017-06-25',\n\n    '2017-07-01',\n    '2017-07-02',\n    '2017-07-08',\n    '2017-07-09',\n    '2017-07-15',\n    '2017-07-16',\n    '2017-07-22',\n    '2017-07-23',\n    '2017-07-29',\n    '2017-07-30',\n\n\n    '2017-08-05',\n    '2017-08-06',\n    '2017-08-12',\n    '2017-08-13',\n    '2017-08-19',\n    '2017-08-20',\n    '2017-08-26',\n    '2017-08-27',\n\n    '2017-09-02',\n    '2017-09-03',\n    '2017-09-09',\n    '2017-09-10',\n    '2017-09-16',\n    '2017-09-17',\n    '2017-09-23',\n    '2017-09-24',\n\n    '2017-10-01',\n    '2017-10-02',\n    '2017-10-03',\n    '2017-10-04',\n    '2017-10-05',\n    '2017-10-06',\n    '2017-10-07',\n    '2017-10-08',\n    '2017-10-14',\n    '2017-10-15',\n    '2017-10-21',\n    '2017-10-22',\n    '2017-10-28',\n    '2017-10-29',\n\n    '2017-11-04',\n    '2017-11-05',\n    '2017-11-11',\n    '2017-11-12',\n    '2017-11-18',\n    '2017-11-19',\n    '2017-11-25',\n    '2017-11-26',\n\n    '2017-12-02',\n    '2017-12-03',\n    '2017-12-09',\n    '2017-12-10',\n    '2017-12-16',\n    '2017-12-17',\n    '2017-12-23',\n    '2017-12-24',\n    '2017-12-30',\n    '2017-12-31',\n\n  //...\n  ];\n\n  function afterWorkDay($start_timestamp='',$add_workday_num='',$holiday=[]){\n\n     // 如果加天数的的时候遇到休假日，则代表需要额外增加的天数\n     $extra_day=0;\n\n     //已经实际增加的天数的数量\n     $workday_added_num=0;\n\n     for($i=1;$i<=$add_workday_num;$i++){\n\n          $detail_time=date('Y-m-d H:i:s',($start_timestamp)+$i*(60*60*24));\n\n          $workday_added_num++;\n\n          //只取宽泛的月日就好\n          $wide_date=date('Y-m-d',strtotime($detail_time));\n\n\n          // 如果其中一天在holiday中\n          if(in_array($wide_date, $holiday)){\n            //取消已经增加的天数，后面再继续加上\n            $workday_added_num--;\n\n           // 需要额外增加的天数\n            $extra_day++;\n\n           }\n           //如果加完之后的日期的下一天还是休息日，需要再次增加额外增加天数\n           $extra_judge=date(\"Y-m-d\",strtotime($wide_date)+86400);\n\n     }\n\n\n     //如果需要增加的天数与实际已经增加的天数不相等\n      if($add_workday_num!=$workday_added_num){\n\n       while (in_array($extra_judge, $holiday)) {\n\n          $extra_day++;\n\n          $extra_judge=date(\"Y-m-d\",strtotime($extra_judge)+86400);\n      }\n  }\n\n  //实际应增加总天数=已经增加天数+（应增加天数-已经增加天数）+额外需要增加天数\n   $add=$workday_added_num+($add_workday_num-$workday_added_num)+$extra_day;\n\n   return date('Y-m-d H:i:s',($start_timestamp)+$add*(60*60*24));\n\n    // $result_date=date('Y-m-d',($start_timestamp)+$add*(60*60*24));\n\n\n    // 如果这个结果也是在假期日内\n    // while (in_array($result_date, $holiday)) {\n    //    $result_date=date('Y-m-d',strtotime($result) +86400);\n    //    $result=date('Y-m-d H:i:s',strtotime($result) +86400);\n    // }\n }\n\n// xx发起时间 6月1日是周四，\n $time=mktime('13','30','56','06','01','2017');\n $start_timestamp=$time;\n // var_dump($start_timestamp);\n\n//计算两个工作日后的时间\n echo afterWorkDay($start_timestamp,2,$holiday);//out put 2017-06-05 13:30:56\n ```\n\n### [2017国务院放假权威安排][1] ###\n\n [1]: http://www.gov.cn/zhengce/content/2016-12/01/content_5141603.htm\n\n","slug":"workday","published":1,"updated":"2018-08-14T09:42:55.207Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjktlsbgd004tegh38ynvu9pd","content":"<h3 id=\"需求：给定一个日期，要求算出N天（工作日）后的日期\"><a href=\"#需求：给定一个日期，要求算出N天（工作日）后的日期\" class=\"headerlink\" title=\"需求：给定一个日期，要求算出N天（工作日）后的日期\"></a>需求：给定一个日期，要求算出N天（工作日）后的日期</h3><hr>\n <a id=\"more\"></a>\n<h3 id=\"直接上代码\"><a href=\"#直接上代码\" class=\"headerlink\" title=\"直接上代码\"></a>直接上代码</h3> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div></pre></td><td class=\"code\"><pre><div class=\"line\"> &lt;?php</div><div class=\"line\">//节假日 需要手动维护配置文件或者放入db中</div><div class=\"line\"> $holiday=[</div><div class=\"line\">  &apos;2017-04-29&apos;,</div><div class=\"line\">    &apos;2017-04-30&apos;,</div><div class=\"line\"></div><div class=\"line\">    &apos;2017-05-01&apos;,</div><div class=\"line\">    &apos;2017-05-06&apos;,</div><div class=\"line\">    &apos;2017-05-07&apos;,</div><div class=\"line\">    &apos;2017-05-13&apos;,</div><div class=\"line\">    &apos;2017-05-14&apos;,</div><div class=\"line\">    &apos;2017-05-20&apos;,</div><div class=\"line\">    &apos;2017-05-21&apos;,</div><div class=\"line\">    &apos;2017-05-28&apos;,</div><div class=\"line\">    &apos;2017-05-29&apos;,</div><div class=\"line\">    &apos;2017-05-30&apos;,</div><div class=\"line\"></div><div class=\"line\">    &apos;2017-06-03&apos;,</div><div class=\"line\">    &apos;2017-06-04&apos;,</div><div class=\"line\">    &apos;2017-06-10&apos;,</div><div class=\"line\">    &apos;2017-06-11&apos;,</div><div class=\"line\">    &apos;2017-06-17&apos;,</div><div class=\"line\">    &apos;2017-06-18&apos;,</div><div class=\"line\">    &apos;2017-06-24&apos;,</div><div class=\"line\">    &apos;2017-06-25&apos;,</div><div class=\"line\"></div><div class=\"line\">    &apos;2017-07-01&apos;,</div><div class=\"line\">    &apos;2017-07-02&apos;,</div><div class=\"line\">    &apos;2017-07-08&apos;,</div><div class=\"line\">    &apos;2017-07-09&apos;,</div><div class=\"line\">    &apos;2017-07-15&apos;,</div><div class=\"line\">    &apos;2017-07-16&apos;,</div><div class=\"line\">    &apos;2017-07-22&apos;,</div><div class=\"line\">    &apos;2017-07-23&apos;,</div><div class=\"line\">    &apos;2017-07-29&apos;,</div><div class=\"line\">    &apos;2017-07-30&apos;,</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    &apos;2017-08-05&apos;,</div><div class=\"line\">    &apos;2017-08-06&apos;,</div><div class=\"line\">    &apos;2017-08-12&apos;,</div><div class=\"line\">    &apos;2017-08-13&apos;,</div><div class=\"line\">    &apos;2017-08-19&apos;,</div><div class=\"line\">    &apos;2017-08-20&apos;,</div><div class=\"line\">    &apos;2017-08-26&apos;,</div><div class=\"line\">    &apos;2017-08-27&apos;,</div><div class=\"line\"></div><div class=\"line\">    &apos;2017-09-02&apos;,</div><div class=\"line\">    &apos;2017-09-03&apos;,</div><div class=\"line\">    &apos;2017-09-09&apos;,</div><div class=\"line\">    &apos;2017-09-10&apos;,</div><div class=\"line\">    &apos;2017-09-16&apos;,</div><div class=\"line\">    &apos;2017-09-17&apos;,</div><div class=\"line\">    &apos;2017-09-23&apos;,</div><div class=\"line\">    &apos;2017-09-24&apos;,</div><div class=\"line\"></div><div class=\"line\">    &apos;2017-10-01&apos;,</div><div class=\"line\">    &apos;2017-10-02&apos;,</div><div class=\"line\">    &apos;2017-10-03&apos;,</div><div class=\"line\">    &apos;2017-10-04&apos;,</div><div class=\"line\">    &apos;2017-10-05&apos;,</div><div class=\"line\">    &apos;2017-10-06&apos;,</div><div class=\"line\">    &apos;2017-10-07&apos;,</div><div class=\"line\">    &apos;2017-10-08&apos;,</div><div class=\"line\">    &apos;2017-10-14&apos;,</div><div class=\"line\">    &apos;2017-10-15&apos;,</div><div class=\"line\">    &apos;2017-10-21&apos;,</div><div class=\"line\">    &apos;2017-10-22&apos;,</div><div class=\"line\">    &apos;2017-10-28&apos;,</div><div class=\"line\">    &apos;2017-10-29&apos;,</div><div class=\"line\"></div><div class=\"line\">    &apos;2017-11-04&apos;,</div><div class=\"line\">    &apos;2017-11-05&apos;,</div><div class=\"line\">    &apos;2017-11-11&apos;,</div><div class=\"line\">    &apos;2017-11-12&apos;,</div><div class=\"line\">    &apos;2017-11-18&apos;,</div><div class=\"line\">    &apos;2017-11-19&apos;,</div><div class=\"line\">    &apos;2017-11-25&apos;,</div><div class=\"line\">    &apos;2017-11-26&apos;,</div><div class=\"line\"></div><div class=\"line\">    &apos;2017-12-02&apos;,</div><div class=\"line\">    &apos;2017-12-03&apos;,</div><div class=\"line\">    &apos;2017-12-09&apos;,</div><div class=\"line\">    &apos;2017-12-10&apos;,</div><div class=\"line\">    &apos;2017-12-16&apos;,</div><div class=\"line\">    &apos;2017-12-17&apos;,</div><div class=\"line\">    &apos;2017-12-23&apos;,</div><div class=\"line\">    &apos;2017-12-24&apos;,</div><div class=\"line\">    &apos;2017-12-30&apos;,</div><div class=\"line\">    &apos;2017-12-31&apos;,</div><div class=\"line\"></div><div class=\"line\">  //...</div><div class=\"line\">  ];</div><div class=\"line\"></div><div class=\"line\">  function afterWorkDay($start_timestamp=&apos;&apos;,$add_workday_num=&apos;&apos;,$holiday=[])&#123;</div><div class=\"line\"></div><div class=\"line\">     // 如果加天数的的时候遇到休假日，则代表需要额外增加的天数</div><div class=\"line\">     $extra_day=0;</div><div class=\"line\"></div><div class=\"line\">     //已经实际增加的天数的数量</div><div class=\"line\">     $workday_added_num=0;</div><div class=\"line\"></div><div class=\"line\">     for($i=1;$i&lt;=$add_workday_num;$i++)&#123;</div><div class=\"line\"></div><div class=\"line\">          $detail_time=date(&apos;Y-m-d H:i:s&apos;,($start_timestamp)+$i*(60*60*24));</div><div class=\"line\"></div><div class=\"line\">          $workday_added_num++;</div><div class=\"line\"></div><div class=\"line\">          //只取宽泛的月日就好</div><div class=\"line\">          $wide_date=date(&apos;Y-m-d&apos;,strtotime($detail_time));</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">          // 如果其中一天在holiday中</div><div class=\"line\">          if(in_array($wide_date, $holiday))&#123;</div><div class=\"line\">            //取消已经增加的天数，后面再继续加上</div><div class=\"line\">            $workday_added_num--;</div><div class=\"line\"></div><div class=\"line\">           // 需要额外增加的天数</div><div class=\"line\">            $extra_day++;</div><div class=\"line\"></div><div class=\"line\">           &#125;</div><div class=\"line\">           //如果加完之后的日期的下一天还是休息日，需要再次增加额外增加天数</div><div class=\"line\">           $extra_judge=date(&quot;Y-m-d&quot;,strtotime($wide_date)+86400);</div><div class=\"line\"></div><div class=\"line\">     &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">     //如果需要增加的天数与实际已经增加的天数不相等</div><div class=\"line\">      if($add_workday_num!=$workday_added_num)&#123;</div><div class=\"line\"></div><div class=\"line\">       while (in_array($extra_judge, $holiday)) &#123;</div><div class=\"line\"></div><div class=\"line\">          $extra_day++;</div><div class=\"line\"></div><div class=\"line\">          $extra_judge=date(&quot;Y-m-d&quot;,strtotime($extra_judge)+86400);</div><div class=\"line\">      &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  //实际应增加总天数=已经增加天数+（应增加天数-已经增加天数）+额外需要增加天数</div><div class=\"line\">   $add=$workday_added_num+($add_workday_num-$workday_added_num)+$extra_day;</div><div class=\"line\"></div><div class=\"line\">   return date(&apos;Y-m-d H:i:s&apos;,($start_timestamp)+$add*(60*60*24));</div><div class=\"line\"></div><div class=\"line\">    // $result_date=date(&apos;Y-m-d&apos;,($start_timestamp)+$add*(60*60*24));</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    // 如果这个结果也是在假期日内</div><div class=\"line\">    // while (in_array($result_date, $holiday)) &#123;</div><div class=\"line\">    //    $result_date=date(&apos;Y-m-d&apos;,strtotime($result) +86400);</div><div class=\"line\">    //    $result=date(&apos;Y-m-d H:i:s&apos;,strtotime($result) +86400);</div><div class=\"line\">    // &#125;</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\">// xx发起时间 6月1日是周四，</div><div class=\"line\"> $time=mktime(&apos;13&apos;,&apos;30&apos;,&apos;56&apos;,&apos;06&apos;,&apos;01&apos;,&apos;2017&apos;);</div><div class=\"line\"> $start_timestamp=$time;</div><div class=\"line\"> // var_dump($start_timestamp);</div><div class=\"line\"></div><div class=\"line\">//计算两个工作日后的时间</div><div class=\"line\"> echo afterWorkDay($start_timestamp,2,$holiday);//out put 2017-06-05 13:30:56</div></pre></td></tr></table></figure>\n<h3 id=\"2017国务院放假权威安排\"><a href=\"#2017国务院放假权威安排\" class=\"headerlink\" title=\"2017国务院放假权威安排\"></a><a href=\"http://www.gov.cn/zhengce/content/2016-12/01/content_5141603.htm\" target=\"_blank\" rel=\"external\">2017国务院放假权威安排</a></h3>","site":{"data":{}},"excerpt":"<h3 id=\"需求：给定一个日期，要求算出N天（工作日）后的日期\"><a href=\"#需求：给定一个日期，要求算出N天（工作日）后的日期\" class=\"headerlink\" title=\"需求：给定一个日期，要求算出N天（工作日）后的日期\"></a>需求：给定一个日期，要求算出N天（工作日）后的日期</h3><hr>","more":"<h3 id=\"直接上代码\"><a href=\"#直接上代码\" class=\"headerlink\" title=\"直接上代码\"></a>直接上代码</h3> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div></pre></td><td class=\"code\"><pre><div class=\"line\"> &lt;?php</div><div class=\"line\">//节假日 需要手动维护配置文件或者放入db中</div><div class=\"line\"> $holiday=[</div><div class=\"line\">  &apos;2017-04-29&apos;,</div><div class=\"line\">    &apos;2017-04-30&apos;,</div><div class=\"line\"></div><div class=\"line\">    &apos;2017-05-01&apos;,</div><div class=\"line\">    &apos;2017-05-06&apos;,</div><div class=\"line\">    &apos;2017-05-07&apos;,</div><div class=\"line\">    &apos;2017-05-13&apos;,</div><div class=\"line\">    &apos;2017-05-14&apos;,</div><div class=\"line\">    &apos;2017-05-20&apos;,</div><div class=\"line\">    &apos;2017-05-21&apos;,</div><div class=\"line\">    &apos;2017-05-28&apos;,</div><div class=\"line\">    &apos;2017-05-29&apos;,</div><div class=\"line\">    &apos;2017-05-30&apos;,</div><div class=\"line\"></div><div class=\"line\">    &apos;2017-06-03&apos;,</div><div class=\"line\">    &apos;2017-06-04&apos;,</div><div class=\"line\">    &apos;2017-06-10&apos;,</div><div class=\"line\">    &apos;2017-06-11&apos;,</div><div class=\"line\">    &apos;2017-06-17&apos;,</div><div class=\"line\">    &apos;2017-06-18&apos;,</div><div class=\"line\">    &apos;2017-06-24&apos;,</div><div class=\"line\">    &apos;2017-06-25&apos;,</div><div class=\"line\"></div><div class=\"line\">    &apos;2017-07-01&apos;,</div><div class=\"line\">    &apos;2017-07-02&apos;,</div><div class=\"line\">    &apos;2017-07-08&apos;,</div><div class=\"line\">    &apos;2017-07-09&apos;,</div><div class=\"line\">    &apos;2017-07-15&apos;,</div><div class=\"line\">    &apos;2017-07-16&apos;,</div><div class=\"line\">    &apos;2017-07-22&apos;,</div><div class=\"line\">    &apos;2017-07-23&apos;,</div><div class=\"line\">    &apos;2017-07-29&apos;,</div><div class=\"line\">    &apos;2017-07-30&apos;,</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    &apos;2017-08-05&apos;,</div><div class=\"line\">    &apos;2017-08-06&apos;,</div><div class=\"line\">    &apos;2017-08-12&apos;,</div><div class=\"line\">    &apos;2017-08-13&apos;,</div><div class=\"line\">    &apos;2017-08-19&apos;,</div><div class=\"line\">    &apos;2017-08-20&apos;,</div><div class=\"line\">    &apos;2017-08-26&apos;,</div><div class=\"line\">    &apos;2017-08-27&apos;,</div><div class=\"line\"></div><div class=\"line\">    &apos;2017-09-02&apos;,</div><div class=\"line\">    &apos;2017-09-03&apos;,</div><div class=\"line\">    &apos;2017-09-09&apos;,</div><div class=\"line\">    &apos;2017-09-10&apos;,</div><div class=\"line\">    &apos;2017-09-16&apos;,</div><div class=\"line\">    &apos;2017-09-17&apos;,</div><div class=\"line\">    &apos;2017-09-23&apos;,</div><div class=\"line\">    &apos;2017-09-24&apos;,</div><div class=\"line\"></div><div class=\"line\">    &apos;2017-10-01&apos;,</div><div class=\"line\">    &apos;2017-10-02&apos;,</div><div class=\"line\">    &apos;2017-10-03&apos;,</div><div class=\"line\">    &apos;2017-10-04&apos;,</div><div class=\"line\">    &apos;2017-10-05&apos;,</div><div class=\"line\">    &apos;2017-10-06&apos;,</div><div class=\"line\">    &apos;2017-10-07&apos;,</div><div class=\"line\">    &apos;2017-10-08&apos;,</div><div class=\"line\">    &apos;2017-10-14&apos;,</div><div class=\"line\">    &apos;2017-10-15&apos;,</div><div class=\"line\">    &apos;2017-10-21&apos;,</div><div class=\"line\">    &apos;2017-10-22&apos;,</div><div class=\"line\">    &apos;2017-10-28&apos;,</div><div class=\"line\">    &apos;2017-10-29&apos;,</div><div class=\"line\"></div><div class=\"line\">    &apos;2017-11-04&apos;,</div><div class=\"line\">    &apos;2017-11-05&apos;,</div><div class=\"line\">    &apos;2017-11-11&apos;,</div><div class=\"line\">    &apos;2017-11-12&apos;,</div><div class=\"line\">    &apos;2017-11-18&apos;,</div><div class=\"line\">    &apos;2017-11-19&apos;,</div><div class=\"line\">    &apos;2017-11-25&apos;,</div><div class=\"line\">    &apos;2017-11-26&apos;,</div><div class=\"line\"></div><div class=\"line\">    &apos;2017-12-02&apos;,</div><div class=\"line\">    &apos;2017-12-03&apos;,</div><div class=\"line\">    &apos;2017-12-09&apos;,</div><div class=\"line\">    &apos;2017-12-10&apos;,</div><div class=\"line\">    &apos;2017-12-16&apos;,</div><div class=\"line\">    &apos;2017-12-17&apos;,</div><div class=\"line\">    &apos;2017-12-23&apos;,</div><div class=\"line\">    &apos;2017-12-24&apos;,</div><div class=\"line\">    &apos;2017-12-30&apos;,</div><div class=\"line\">    &apos;2017-12-31&apos;,</div><div class=\"line\"></div><div class=\"line\">  //...</div><div class=\"line\">  ];</div><div class=\"line\"></div><div class=\"line\">  function afterWorkDay($start_timestamp=&apos;&apos;,$add_workday_num=&apos;&apos;,$holiday=[])&#123;</div><div class=\"line\"></div><div class=\"line\">     // 如果加天数的的时候遇到休假日，则代表需要额外增加的天数</div><div class=\"line\">     $extra_day=0;</div><div class=\"line\"></div><div class=\"line\">     //已经实际增加的天数的数量</div><div class=\"line\">     $workday_added_num=0;</div><div class=\"line\"></div><div class=\"line\">     for($i=1;$i&lt;=$add_workday_num;$i++)&#123;</div><div class=\"line\"></div><div class=\"line\">          $detail_time=date(&apos;Y-m-d H:i:s&apos;,($start_timestamp)+$i*(60*60*24));</div><div class=\"line\"></div><div class=\"line\">          $workday_added_num++;</div><div class=\"line\"></div><div class=\"line\">          //只取宽泛的月日就好</div><div class=\"line\">          $wide_date=date(&apos;Y-m-d&apos;,strtotime($detail_time));</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">          // 如果其中一天在holiday中</div><div class=\"line\">          if(in_array($wide_date, $holiday))&#123;</div><div class=\"line\">            //取消已经增加的天数，后面再继续加上</div><div class=\"line\">            $workday_added_num--;</div><div class=\"line\"></div><div class=\"line\">           // 需要额外增加的天数</div><div class=\"line\">            $extra_day++;</div><div class=\"line\"></div><div class=\"line\">           &#125;</div><div class=\"line\">           //如果加完之后的日期的下一天还是休息日，需要再次增加额外增加天数</div><div class=\"line\">           $extra_judge=date(&quot;Y-m-d&quot;,strtotime($wide_date)+86400);</div><div class=\"line\"></div><div class=\"line\">     &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">     //如果需要增加的天数与实际已经增加的天数不相等</div><div class=\"line\">      if($add_workday_num!=$workday_added_num)&#123;</div><div class=\"line\"></div><div class=\"line\">       while (in_array($extra_judge, $holiday)) &#123;</div><div class=\"line\"></div><div class=\"line\">          $extra_day++;</div><div class=\"line\"></div><div class=\"line\">          $extra_judge=date(&quot;Y-m-d&quot;,strtotime($extra_judge)+86400);</div><div class=\"line\">      &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  //实际应增加总天数=已经增加天数+（应增加天数-已经增加天数）+额外需要增加天数</div><div class=\"line\">   $add=$workday_added_num+($add_workday_num-$workday_added_num)+$extra_day;</div><div class=\"line\"></div><div class=\"line\">   return date(&apos;Y-m-d H:i:s&apos;,($start_timestamp)+$add*(60*60*24));</div><div class=\"line\"></div><div class=\"line\">    // $result_date=date(&apos;Y-m-d&apos;,($start_timestamp)+$add*(60*60*24));</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    // 如果这个结果也是在假期日内</div><div class=\"line\">    // while (in_array($result_date, $holiday)) &#123;</div><div class=\"line\">    //    $result_date=date(&apos;Y-m-d&apos;,strtotime($result) +86400);</div><div class=\"line\">    //    $result=date(&apos;Y-m-d H:i:s&apos;,strtotime($result) +86400);</div><div class=\"line\">    // &#125;</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\">// xx发起时间 6月1日是周四，</div><div class=\"line\"> $time=mktime(&apos;13&apos;,&apos;30&apos;,&apos;56&apos;,&apos;06&apos;,&apos;01&apos;,&apos;2017&apos;);</div><div class=\"line\"> $start_timestamp=$time;</div><div class=\"line\"> // var_dump($start_timestamp);</div><div class=\"line\"></div><div class=\"line\">//计算两个工作日后的时间</div><div class=\"line\"> echo afterWorkDay($start_timestamp,2,$holiday);//out put 2017-06-05 13:30:56</div></pre></td></tr></table></figure>\n<h3 id=\"2017国务院放假权威安排\"><a href=\"#2017国务院放假权威安排\" class=\"headerlink\" title=\"2017国务院放假权威安排\"></a><a href=\"http://www.gov.cn/zhengce/content/2016-12/01/content_5141603.htm\">2017国务院放假权威安排</a></h3>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjktlsbac0000egh30kwf8bhp","category_id":"cjktlsbah0002egh32w1t0ils","_id":"cjktlsbam000aegh3yxv69zx5"},{"post_id":"cjktlsbak0006egh31h70ieq1","category_id":"cjktlsbah0002egh32w1t0ils","_id":"cjktlsban000eegh36nr56lxw"},{"post_id":"cjktlsbal0009egh3nlj7p5dr","category_id":"cjktlsbah0002egh32w1t0ils","_id":"cjktlsbao000hegh3wbtad4as"},{"post_id":"cjktlsbag0001egh3l5gn5gqx","category_id":"cjktlsbak0007egh3o1wjfa2t","_id":"cjktlsbaq000megh31rc6xhoe"},{"post_id":"cjktlsbam000begh3wgle2qhz","category_id":"cjktlsbak0007egh3o1wjfa2t","_id":"cjktlsbar000pegh3424hb05c"},{"post_id":"cjktlsban000fegh3woe0q0xt","category_id":"cjktlsbak0007egh3o1wjfa2t","_id":"cjktlsbas000regh35jjcgi0b"},{"post_id":"cjktlsbai0004egh3irknco13","category_id":"cjktlsbam000cegh3fmf1upcf","_id":"cjktlsbau000uegh32uccd3po"},{"post_id":"cjktlsbao000iegh3m3p8inul","category_id":"cjktlsbak0007egh3o1wjfa2t","_id":"cjktlsbau000wegh3umhcd4r2"},{"post_id":"cjktlsbaq000negh3x592yjfy","category_id":"cjktlsbak0007egh3o1wjfa2t","_id":"cjktlsbav000zegh304he8zpa"},{"post_id":"cjktlsbaj0005egh3ctl0t9q9","category_id":"cjktlsbam000cegh3fmf1upcf","_id":"cjktlsbaw0011egh36l2p4y2q"},{"post_id":"cjktlsbas000qegh3s76wz8a3","category_id":"cjktlsbak0007egh3o1wjfa2t","_id":"cjktlsbax0015egh3yld5u2hp"},{"post_id":"cjktlsbau000vegh3quek79u0","category_id":"cjktlsbam000cegh3fmf1upcf","_id":"cjktlsbay0018egh3naz2r9l0"},{"post_id":"cjktlsbav000xegh3knfgk1iq","category_id":"cjktlsbam000cegh3fmf1upcf","_id":"cjktlsbaz001cegh3bqr3pdy6"},{"post_id":"cjktlsbav0010egh36tm2vc5m","category_id":"cjktlsbax0014egh3ktfl8mb5","_id":"cjktlsbb1001hegh3bntfcqeg"},{"post_id":"cjktlsbaz001degh3bykjg9fe","category_id":"cjktlsbam000cegh3fmf1upcf","_id":"cjktlsbb2001legh33p1wqluw"},{"post_id":"cjktlsbb0001gegh3nbfmc3fv","category_id":"cjktlsbam000cegh3fmf1upcf","_id":"cjktlsbb3001negh3s6te5qew"},{"post_id":"cjktlsbaw0012egh37yzd9n64","category_id":"cjktlsbax0014egh3ktfl8mb5","_id":"cjktlsbb4001regh31vicdp0x"},{"post_id":"cjktlsbb1001jegh3ap6k7bl7","category_id":"cjktlsbam000cegh3fmf1upcf","_id":"cjktlsbb5001uegh3p57g9gvc"},{"post_id":"cjktlsbb2001megh3dw51a8gk","category_id":"cjktlsbam000cegh3fmf1upcf","_id":"cjktlsbb6001zegh3hqdtn3dj"},{"post_id":"cjktlsbax0016egh3j0ouu7t4","category_id":"cjktlsbax0014egh3ktfl8mb5","_id":"cjktlsbb80022egh3dt3k90kv"},{"post_id":"cjktlsbb3001oegh3gels86v4","category_id":"cjktlsbam000cegh3fmf1upcf","_id":"cjktlsbb90024egh3ranb1tz6"},{"post_id":"cjktlsbay0019egh3tm9uzixj","category_id":"cjktlsbb3001pegh3ei4fp7u5","_id":"cjktlsbb90026egh3b7q6fzdz"},{"post_id":"cjktlsbb5001wegh334g0vyta","category_id":"cjktlsbam000cegh3fmf1upcf","_id":"cjktlsbb90027egh3m2k5en7g"},{"post_id":"cjktlsbb4001tegh3a1griqk1","category_id":"cjktlsbb6001yegh34heqk2v7","_id":"cjktlsbba002aegh3bmjj4nrh"},{"post_id":"cjktlsbb60021egh3bmdado4t","category_id":"cjktlsbb90025egh3amxb2px6","_id":"cjktlsbba002cegh3q4418cgj"},{"post_id":"cjktlsbgd004tegh38ynvu9pd","category_id":"cjktlsbam000cegh3fmf1upcf","_id":"cjktlsbgh004yegh330a8v7u9"}],"PostTag":[{"post_id":"cjktlsbac0000egh30kwf8bhp","tag_id":"cjktlsbai0003egh3ke0xk8e9","_id":"cjktlsbao000gegh3n1z3oecr"},{"post_id":"cjktlsbac0000egh30kwf8bhp","tag_id":"cjktlsbak0008egh3wcl7t7te","_id":"cjktlsbap000jegh39gmsbpek"},{"post_id":"cjktlsbag0001egh3l5gn5gqx","tag_id":"cjktlsbam000degh3iuw7g0ic","_id":"cjktlsbar000oegh3y48nvebk"},{"post_id":"cjktlsbai0004egh3irknco13","tag_id":"cjktlsbap000legh3odukmxws","_id":"cjktlsbay0017egh3zuemmhos"},{"post_id":"cjktlsbai0004egh3irknco13","tag_id":"cjktlsbat000segh3o2e28pyl","_id":"cjktlsbaz001aegh32anl4ms0"},{"post_id":"cjktlsbai0004egh3irknco13","tag_id":"cjktlsbav000yegh367vcb5zw","_id":"cjktlsbb0001fegh3t6ibxl6n"},{"post_id":"cjktlsbaj0005egh3ctl0t9q9","tag_id":"cjktlsbax0013egh36z2chksm","_id":"cjktlsbb4001segh3ni1y76o0"},{"post_id":"cjktlsbaj0005egh3ctl0t9q9","tag_id":"cjktlsbaz001begh30aupvf93","_id":"cjktlsbb5001vegh3u7oa5q7e"},{"post_id":"cjktlsbaj0005egh3ctl0t9q9","tag_id":"cjktlsbb1001iegh3uejxxf1x","_id":"cjktlsbb60020egh3w8azllvm"},{"post_id":"cjktlsbak0006egh31h70ieq1","tag_id":"cjktlsbb4001qegh3z5ouyv91","_id":"cjktlsbb90029egh3ku2htu0y"},{"post_id":"cjktlsbak0006egh31h70ieq1","tag_id":"cjktlsbb6001xegh3ofpaam8a","_id":"cjktlsbba002begh3h6mrj2u0"},{"post_id":"cjktlsbak0006egh31h70ieq1","tag_id":"cjktlsbb80023egh35fvnc6gr","_id":"cjktlsbba002eegh3alndi800"},{"post_id":"cjktlsbal0009egh3nlj7p5dr","tag_id":"cjktlsbb90028egh3msssyseb","_id":"cjktlsbba002fegh3nm8j9dwc"},{"post_id":"cjktlsbam000begh3wgle2qhz","tag_id":"cjktlsbba002degh334obwxkc","_id":"cjktlsbbb002hegh3ft3sextt"},{"post_id":"cjktlsban000fegh3woe0q0xt","tag_id":"cjktlsbba002gegh3y8ukk0vo","_id":"cjktlsbbb002jegh3am555vo2"},{"post_id":"cjktlsbao000iegh3m3p8inul","tag_id":"cjktlsbba002degh334obwxkc","_id":"cjktlsbbc002legh3smknwqu2"},{"post_id":"cjktlsbaq000negh3x592yjfy","tag_id":"cjktlsbba002degh334obwxkc","_id":"cjktlsbbc002negh37mctszzv"},{"post_id":"cjktlsbas000qegh3s76wz8a3","tag_id":"cjktlsbba002degh334obwxkc","_id":"cjktlsbbd002pegh37d2ytq1h"},{"post_id":"cjktlsbat000tegh3kanh2jfh","tag_id":"cjktlsbbc002oegh3m5aijo6n","_id":"cjktlsbbd002segh30xdizius"},{"post_id":"cjktlsbat000tegh3kanh2jfh","tag_id":"cjktlsbak0008egh3wcl7t7te","_id":"cjktlsbbe002tegh353my0u1h"},{"post_id":"cjktlsbat000tegh3kanh2jfh","tag_id":"cjktlsbbd002qegh32qdhu369","_id":"cjktlsbbe002vegh3zr7wfs96"},{"post_id":"cjktlsbau000vegh3quek79u0","tag_id":"cjktlsbbd002regh3pvlqt5br","_id":"cjktlsbbf002zegh3sjua61ew"},{"post_id":"cjktlsbau000vegh3quek79u0","tag_id":"cjktlsbbe002uegh376md7crn","_id":"cjktlsbbf0030egh3uekwpuar"},{"post_id":"cjktlsbau000vegh3quek79u0","tag_id":"cjktlsbbe002wegh3tv3ng485","_id":"cjktlsbbf0032egh36uc36rpy"},{"post_id":"cjktlsbau000vegh3quek79u0","tag_id":"cjktlsbbe002xegh37z8kk1sm","_id":"cjktlsbbf0033egh33il5eb92"},{"post_id":"cjktlsbav000xegh3knfgk1iq","tag_id":"cjktlsbbe002yegh39ldtg5x7","_id":"cjktlsbbg0036egh3pwqo5vs8"},{"post_id":"cjktlsbav000xegh3knfgk1iq","tag_id":"cjktlsbbf0031egh3nssou8td","_id":"cjktlsbbg0037egh32l12q32q"},{"post_id":"cjktlsbav000xegh3knfgk1iq","tag_id":"cjktlsbbf0034egh3y7n9gsf4","_id":"cjktlsbbg0039egh31s62a83q"},{"post_id":"cjktlsbav0010egh36tm2vc5m","tag_id":"cjktlsbbf0035egh3kena36w9","_id":"cjktlsbbh003begh3auot1fcw"},{"post_id":"cjktlsbav0010egh36tm2vc5m","tag_id":"cjktlsbak0008egh3wcl7t7te","_id":"cjktlsbbh003cegh3sz0nvp0a"},{"post_id":"cjktlsbav0010egh36tm2vc5m","tag_id":"cjktlsbbd002qegh32qdhu369","_id":"cjktlsbbh003eegh3m9xcz6cq"},{"post_id":"cjktlsbaw0012egh37yzd9n64","tag_id":"cjktlsbbg003aegh3fz2dath7","_id":"cjktlsbbi003gegh3gvyt200a"},{"post_id":"cjktlsbaw0012egh37yzd9n64","tag_id":"cjktlsbak0008egh3wcl7t7te","_id":"cjktlsbbi003hegh3n0ey0joo"},{"post_id":"cjktlsbaw0012egh37yzd9n64","tag_id":"cjktlsbbd002qegh32qdhu369","_id":"cjktlsbbi003jegh3g5uvou0x"},{"post_id":"cjktlsbax0016egh3j0ouu7t4","tag_id":"cjktlsbbh003fegh35g6nwi4r","_id":"cjktlsbbi003legh3b6ivftuc"},{"post_id":"cjktlsbax0016egh3j0ouu7t4","tag_id":"cjktlsbak0008egh3wcl7t7te","_id":"cjktlsbbj003megh3qh72xgdu"},{"post_id":"cjktlsbax0016egh3j0ouu7t4","tag_id":"cjktlsbbd002qegh32qdhu369","_id":"cjktlsbbj003oegh356r7b722"},{"post_id":"cjktlsbay0019egh3tm9uzixj","tag_id":"cjktlsbbi003kegh3ftmp567g","_id":"cjktlsbbk003regh3o6hr4aeg"},{"post_id":"cjktlsbay0019egh3tm9uzixj","tag_id":"cjktlsbbj003negh35b22kskk","_id":"cjktlsbbk003segh31p0wl5hz"},{"post_id":"cjktlsbay0019egh3tm9uzixj","tag_id":"cjktlsbbj003pegh3xeu0tl11","_id":"cjktlsbbk003uegh3vkyacf3n"},{"post_id":"cjktlsbaz001degh3bykjg9fe","tag_id":"cjktlsbbj003qegh3muovzf9x","_id":"cjktlsbbk003wegh3djsjf9dy"},{"post_id":"cjktlsbaz001degh3bykjg9fe","tag_id":"cjktlsbbk003tegh3jegv21x6","_id":"cjktlsbbk003xegh3hlyqrr6v"},{"post_id":"cjktlsbb0001gegh3nbfmc3fv","tag_id":"cjktlsbbk003vegh3piijqwxi","_id":"cjktlsbbl003zegh3hvkre2jn"},{"post_id":"cjktlsbb1001jegh3ap6k7bl7","tag_id":"cjktlsbbk003yegh350jbtgm5","_id":"cjktlsbbm0041egh34hxqudnd"},{"post_id":"cjktlsbb2001megh3dw51a8gk","tag_id":"cjktlsbbe002wegh3tv3ng485","_id":"cjktlsbbm0045egh3t6817vok"},{"post_id":"cjktlsbb2001megh3dw51a8gk","tag_id":"cjktlsbbm0042egh3pdna3sak","_id":"cjktlsbbn0046egh3g14gdmcp"},{"post_id":"cjktlsbb2001megh3dw51a8gk","tag_id":"cjktlsbbm0043egh3mvuxgqc9","_id":"cjktlsbbn0048egh3fnyd24op"},{"post_id":"cjktlsbb3001oegh3gels86v4","tag_id":"cjktlsbbm0044egh3murdjil0","_id":"cjktlsbbo004begh3aoci2n27"},{"post_id":"cjktlsbb3001oegh3gels86v4","tag_id":"cjktlsbbe002wegh3tv3ng485","_id":"cjktlsbbo004cegh3l8vjmoya"},{"post_id":"cjktlsbb3001oegh3gels86v4","tag_id":"cjktlsbbn0049egh3ff06496c","_id":"cjktlsbbo004eegh38ura3u0z"},{"post_id":"cjktlsbb4001tegh3a1griqk1","tag_id":"cjktlsbbn004aegh3s62xzqtc","_id":"cjktlsbbp004iegh3zog43k3y"},{"post_id":"cjktlsbb4001tegh3a1griqk1","tag_id":"cjktlsbbo004degh3oavgucwx","_id":"cjktlsbbp004jegh3jckv2jif"},{"post_id":"cjktlsbb4001tegh3a1griqk1","tag_id":"cjktlsbbo004fegh3ful3nntx","_id":"cjktlsbbp004legh3yrhdo7nw"},{"post_id":"cjktlsbb4001tegh3a1griqk1","tag_id":"cjktlsbbo004gegh38q8e010k","_id":"cjktlsbbq004megh3gz6ykiju"},{"post_id":"cjktlsbb5001wegh334g0vyta","tag_id":"cjktlsbbp004hegh3rasmodc7","_id":"cjktlsbbr004pegh3tac9k5ff"},{"post_id":"cjktlsbb5001wegh334g0vyta","tag_id":"cjktlsbbp004kegh3d0ngfrtf","_id":"cjktlsbbr004qegh3l3l74fb0"},{"post_id":"cjktlsbb5001wegh334g0vyta","tag_id":"cjktlsbbq004negh3r94bjcgm","_id":"cjktlsbbr004regh3kejjvmgs"},{"post_id":"cjktlsbb60021egh3bmdado4t","tag_id":"cjktlsbbq004oegh37tv7d9sx","_id":"cjktlsbbr004segh3gidudjkl"},{"post_id":"cjktlsbgd004tegh38ynvu9pd","tag_id":"cjktlsbgg004wegh3p9wv9wav","_id":"cjktlsbgh004zegh3l9tegx7t"}],"Tag":[{"name":"软考","_id":"cjktlsbai0003egh3ke0xk8e9"},{"name":"软件设计师","_id":"cjktlsbak0008egh3wcl7t7te"},{"name":"大端字节序","_id":"cjktlsbam000degh3iuw7g0ic"},{"name":"RSA","_id":"cjktlsbap000legh3odukmxws"},{"name":"AES","_id":"cjktlsbat000segh3o2e28pyl"},{"name":"双向加密解密","_id":"cjktlsbav000yegh367vcb5zw"},{"name":"PHP框架","_id":"cjktlsbax0013egh36z2chksm"},{"name":"CI框架","_id":"cjktlsbaz001begh30aupvf93"},{"name":"接口文档","_id":"cjktlsbb1001iegh3uejxxf1x"},{"name":"硬盘","_id":"cjktlsbb4001qegh3z5ouyv91"},{"name":"扇区","_id":"cjktlsbb6001xegh3ofpaam8a"},{"name":"磁道","_id":"cjktlsbb80023egh35fvnc6gr"},{"name":"计算机科学","_id":"cjktlsbb90028egh3msssyseb"},{"name":"HEAD_FIRST_C","_id":"cjktlsbba002degh334obwxkc"},{"name":"数组与指针","_id":"cjktlsbba002gegh3y8ukk0vo"},{"name":"装饰模式","_id":"cjktlsbbc002oegh3m5aijo6n"},{"name":"JAVA","_id":"cjktlsbbd002qegh32qdhu369"},{"name":"HTTP","_id":"cjktlsbbd002regh3pvlqt5br"},{"name":"CACHE","_id":"cjktlsbbe002uegh376md7crn"},{"name":"PHP","_id":"cjktlsbbe002wegh3tv3ng485"},{"name":"NGINX","_id":"cjktlsbbe002xegh37z8kk1sm"},{"name":"接口调用","_id":"cjktlsbbe002yegh39ldtg5x7"},{"name":"安全性","_id":"cjktlsbbf0031egh3nssou8td"},{"name":"sign&token","_id":"cjktlsbbf0034egh3y7n9gsf4"},{"name":"适配器模式","_id":"cjktlsbbf0035egh3kena36w9"},{"name":"桥接模式","_id":"cjktlsbbg003aegh3fz2dath7"},{"name":"策略模式","_id":"cjktlsbbh003fegh35g6nwi4r"},{"name":"jp2a","_id":"cjktlsbbi003kegh3ftmp567g"},{"name":"ascii","_id":"cjktlsbbj003negh35b22kskk"},{"name":"meituan","_id":"cjktlsbbj003pegh3xeu0tl11"},{"name":"linux","_id":"cjktlsbbj003qegh3muovzf9x"},{"name":"cpu","_id":"cjktlsbbk003tegh3jegv21x6"},{"name":"异常","_id":"cjktlsbbk003vegh3piijqwxi"},{"name":"mycnart","_id":"cjktlsbbk003yegh350jbtgm5"},{"name":"插入排序","_id":"cjktlsbbm0042egh3pdna3sak"},{"name":"算法","_id":"cjktlsbbm0043egh3mvuxgqc9"},{"name":"PHPSTORM","_id":"cjktlsbbm0044egh3murdjil0"},{"name":"编辑器","_id":"cjktlsbbn0049egh3ff06496c"},{"name":"github.page","_id":"cjktlsbbn004aegh3s62xzqtc"},{"name":"hexo","_id":"cjktlsbbo004degh3oavgucwx"},{"name":"git","_id":"cjktlsbbo004fegh3ful3nntx"},{"name":"node","_id":"cjktlsbbo004gegh38q8e010k"},{"name":"PHP7","_id":"cjktlsbbp004hegh3rasmodc7"},{"name":"FPM","_id":"cjktlsbbp004kegh3d0ngfrtf"},{"name":"Ubuntu","_id":"cjktlsbbq004negh3r94bjcgm"},{"name":"REDIS应用","_id":"cjktlsbbq004oegh37tv7d9sx"},{"name":"工作日计算","_id":"cjktlsbgg004wegh3p9wv9wav"}]}}